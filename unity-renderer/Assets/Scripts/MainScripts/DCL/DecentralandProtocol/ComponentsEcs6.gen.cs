// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: decentraland/sdk/ecs6/components_ecs6.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Decentraland.Sdk.Ecs6 {

  /// <summary>Holder for reflection information generated from decentraland/sdk/ecs6/components_ecs6.proto</summary>
  public static partial class ComponentsEcs6Reflection {

    #region Descriptor
    /// <summary>File descriptor for decentraland/sdk/ecs6/components_ecs6.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComponentsEcs6Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CitkZWNlbnRyYWxhbmQvc2RrL2VjczYvY29tcG9uZW50c19lY3M2LnByb3Rv",
            "EhVkZWNlbnRyYWxhbmQuc2RrLmVjczYaIWRlY2VudHJhbGFuZC9jb21tb24v",
            "dmVjdG9ycy5wcm90bxogZGVjZW50cmFsYW5kL2NvbW1vbi9jb2xvcnMucHJv",
            "dG8iPgoEQXJlYRIuCgNib3gYASABKAsyHC5kZWNlbnRyYWxhbmQuY29tbW9u",
            "LlZlY3RvcjNIAIgBAUIGCgRfYm94IpsBCgdVaVZhbHVlEhIKBXZhbHVlGAEg",
            "ASgCSACIAQESPQoEdHlwZRgCIAEoDjIqLmRlY2VudHJhbGFuZC5zZGsuZWNz",
            "Ni5VaVZhbHVlLlVpVmFsdWVUeXBlSAGIAQEiKgoLVWlWYWx1ZVR5cGUSDwoL",
            "VVZUX1BFUkNFTlQQABIKCgZQSVhFTFMQAUIICgZfdmFsdWVCBwoFX3R5cGUi",
            "ggEKH0VDUzZDb21wb25lbnRBdmF0YXJNb2RpZmllckFyZWESLgoEYXJlYRgB",
            "IAEoCzIbLmRlY2VudHJhbGFuZC5zZGsuZWNzNi5BcmVhSACIAQESEQoJbW9k",
            "aWZpZXJzGAIgAygJEhMKC2V4Y2x1ZGVfaWRzGAMgAygJQgcKBV9hcmVhItsB",
            "ChZFQ1M2Q29tcG9uZW50VHJhbnNmb3JtEjMKCHBvc2l0aW9uGAEgASgLMhwu",
            "ZGVjZW50cmFsYW5kLmNvbW1vbi5WZWN0b3IzSACIAQESNgoIcm90YXRpb24Y",
            "AiABKAsyHy5kZWNlbnRyYWxhbmQuY29tbW9uLlF1YXRlcm5pb25IAYgBARIw",
            "CgVzY2FsZRgDIAEoCzIcLmRlY2VudHJhbGFuZC5jb21tb24uVmVjdG9yM0gC",
            "iAEBQgsKCV9wb3NpdGlvbkILCglfcm90YXRpb25CCAoGX3NjYWxlIukCChtF",
            "Q1M2Q29tcG9uZW50QXR0YWNoVG9BdmF0YXISFgoJYXZhdGFyX2lkGAEgASgJ",
            "SACIAQESbAoPYW5jaG9yX3BvaW50X2lkGAIgASgOMk4uZGVjZW50cmFsYW5k",
            "LnNkay5lY3M2LkVDUzZDb21wb25lbnRBdHRhY2hUb0F2YXRhci5BdHRhY2hU",
            "b0F2YXRhckFuY2hvclBvaW50SWRIAYgBARIcCg9hdmF0YXJfc2NlbmVfaWQY",
            "AyABKAlIAogBASJwChtBdHRhY2hUb0F2YXRhckFuY2hvclBvaW50SWQSEgoO",
            "QVRBQVBfUE9TSVRJT04QABISCg5BVEFBUF9OQU1FX1RBRxABEhMKD0FUQUFQ",
            "X0xFRlRfSEFORBACEhQKEEFUQUFQX1JJR0hUX0hBTkQQA0IMCgpfYXZhdGFy",
            "X2lkQhIKEF9hbmNob3JfcG9pbnRfaWRCEgoQX2F2YXRhcl9zY2VuZV9pZCJa",
            "ChZFQ1M2Q29tcG9uZW50QmlsbGJvYXJkEg4KAXgYASABKAhIAIgBARIOCgF5",
            "GAIgASgISAGIAQESDgoBehgDIAEoCEgCiAEBQgQKAl94QgQKAl95QgQKAl96",
            "IrABChVFQ1M2Q29tcG9uZW50Qm94U2hhcGUSHAoPd2l0aF9jb2xsaXNpb25z",
            "GAEgASgISACIAQESHwoSaXNfcG9pbnRlcl9ibG9ja2VyGAIgASgISAGIAQES",
            "FAoHdmlzaWJsZRgDIAEoCEgCiAEBEgsKA3V2cxgEIAMoAkISChBfd2l0aF9j",
            "b2xsaXNpb25zQhUKE19pc19wb2ludGVyX2Jsb2NrZXJCCgoIX3Zpc2libGUi",
            "pgEKGEVDUzZDb21wb25lbnRTcGhlcmVTaGFwZRIcCg93aXRoX2NvbGxpc2lv",
            "bnMYASABKAhIAIgBARIfChJpc19wb2ludGVyX2Jsb2NrZXIYAiABKAhIAYgB",
            "ARIUCgd2aXNpYmxlGAMgASgISAKIAQFCEgoQX3dpdGhfY29sbGlzaW9uc0IV",
            "ChNfaXNfcG9pbnRlcl9ibG9ja2VyQgoKCF92aXNpYmxlIuQBChhFQ1M2Q29t",
            "cG9uZW50Q2lyY2xlU2hhcGUSHAoPd2l0aF9jb2xsaXNpb25zGAEgASgISACI",
            "AQESHwoSaXNfcG9pbnRlcl9ibG9ja2VyGAIgASgISAGIAQESFAoHdmlzaWJs",
            "ZRgDIAEoCEgCiAEBEhUKCHNlZ21lbnRzGAQgASgCSAOIAQESEAoDYXJjGAUg",
            "ASgCSASIAQFCEgoQX3dpdGhfY29sbGlzaW9uc0IVChNfaXNfcG9pbnRlcl9i",
            "bG9ja2VyQgoKCF92aXNpYmxlQgsKCV9zZWdtZW50c0IGCgRfYXJjIvABChdF",
            "Q1M2Q29tcG9uZW50UGxhbmVTaGFwZRIcCg93aXRoX2NvbGxpc2lvbnMYASAB",
            "KAhIAIgBARIfChJpc19wb2ludGVyX2Jsb2NrZXIYAiABKAhIAYgBARIUCgd2",
            "aXNpYmxlGAMgASgISAKIAQESCwoDdXZzGAQgAygCEhIKBXdpZHRoGAYgASgC",
            "SAOIAQESEwoGaGVpZ2h0GAcgASgCSASIAQFCEgoQX3dpdGhfY29sbGlzaW9u",
            "c0IVChNfaXNfcG9pbnRlcl9ibG9ja2VyQgoKCF92aXNpYmxlQggKBl93aWR0",
            "aEIJCgdfaGVpZ2h0IsADChZFQ1M2Q29tcG9uZW50Q29uZVNoYXBlEhwKD3dp",
            "dGhfY29sbGlzaW9ucxgBIAEoCEgAiAEBEh8KEmlzX3BvaW50ZXJfYmxvY2tl",
            "chgCIAEoCEgBiAEBEhQKB3Zpc2libGUYAyABKAhIAogBARIXCgpyYWRpdXNf",
            "dG9wGAQgASgCSAOIAQESGgoNcmFkaXVzX2JvdHRvbRgFIAEoAkgEiAEBEhwK",
            "D3NlZ21lbnRzX2hlaWdodBgGIAEoAkgFiAEBEhwKD3NlZ21lbnRzX3JhZGlh",
            "bBgHIAEoAkgGiAEBEhcKCm9wZW5fZW5kZWQYCCABKAhIB4gBARITCgZyYWRp",
            "dXMYCSABKAJICIgBARIQCgNhcmMYCiABKAJICYgBAUISChBfd2l0aF9jb2xs",
            "aXNpb25zQhUKE19pc19wb2ludGVyX2Jsb2NrZXJCCgoIX3Zpc2libGVCDQoL",
            "X3JhZGl1c190b3BCEAoOX3JhZGl1c19ib3R0b21CEgoQX3NlZ21lbnRzX2hl",
            "aWdodEISChBfc2VnbWVudHNfcmFkaWFsQg0KC19vcGVuX2VuZGVkQgkKB19y",
            "YWRpdXNCBgoEX2FyYyLEAwoaRUNTNkNvbXBvbmVudEN5bGluZGVyU2hhcGUS",
            "HAoPd2l0aF9jb2xsaXNpb25zGAEgASgISACIAQESHwoSaXNfcG9pbnRlcl9i",
            "bG9ja2VyGAIgASgISAGIAQESFAoHdmlzaWJsZRgDIAEoCEgCiAEBEhcKCnJh",
            "ZGl1c190b3AYBCABKAJIA4gBARIaCg1yYWRpdXNfYm90dG9tGAUgASgCSASI",
            "AQESHAoPc2VnbWVudHNfaGVpZ2h0GAYgASgCSAWIAQESHAoPc2VnbWVudHNf",
            "cmFkaWFsGAcgASgCSAaIAQESFwoKb3Blbl9lbmRlZBgIIAEoCEgHiAEBEhMK",
            "BnJhZGl1cxgJIAEoAkgIiAEBEhAKA2FyYxgKIAEoAkgJiAEBQhIKEF93aXRo",
            "X2NvbGxpc2lvbnNCFQoTX2lzX3BvaW50ZXJfYmxvY2tlckIKCghfdmlzaWJs",
            "ZUINCgtfcmFkaXVzX3RvcEIQCg5fcmFkaXVzX2JvdHRvbUISChBfc2VnbWVu",
            "dHNfaGVpZ2h0QhIKEF9zZWdtZW50c19yYWRpYWxCDQoLX29wZW5fZW5kZWRC",
            "CQoHX3JhZGl1c0IGCgRfYXJjIr4BChZFQ1M2Q29tcG9uZW50R2x0ZlNoYXBl",
            "EhwKD3dpdGhfY29sbGlzaW9ucxgBIAEoCEgAiAEBEh8KEmlzX3BvaW50ZXJf",
            "YmxvY2tlchgCIAEoCEgBiAEBEhQKB3Zpc2libGUYAyABKAhIAogBARIQCgNz",
            "cmMYBCABKAlIA4gBAUISChBfd2l0aF9jb2xsaXNpb25zQhUKE19pc19wb2lu",
            "dGVyX2Jsb2NrZXJCCgoIX3Zpc2libGVCBgoEX3NyYyK2BgoVRUNTNkNvbXBv",
            "bmVudE5mdFNoYXBlEhwKD3dpdGhfY29sbGlzaW9ucxgBIAEoCEgAiAEBEh8K",
            "EmlzX3BvaW50ZXJfYmxvY2tlchgCIAEoCEgBiAEBEhQKB3Zpc2libGUYAyAB",
            "KAhIAogBARIQCgNzcmMYBCABKAlIA4gBARJSCgVzdHlsZRgFIAEoDjI+LmRl",
            "Y2VudHJhbGFuZC5zZGsuZWNzNi5FQ1M2Q29tcG9uZW50TmZ0U2hhcGUuUGlj",
            "dHVyZUZyYW1lU3R5bGVIBIgBARIvCgVjb2xvchgGIAEoCzIbLmRlY2VudHJh",
            "bGFuZC5jb21tb24uQ29sb3IzSAWIAQEi3QMKEVBpY3R1cmVGcmFtZVN0eWxl",
            "Eg8KC1BGU19DTEFTU0lDEAASGAoUUEZTX0JBUk9RVUVfT1JOQU1FTlQQARIY",
            "ChRQRlNfRElBTU9ORF9PUk5BTUVOVBACEhQKEFBGU19NSU5JTUFMX1dJREUQ",
            "AxIUChBQRlNfTUlOSU1BTF9HUkVZEAQSDgoKUEZTX0JMT0NLWRAFEhIKDlBG",
            "U19HT0xEX0VER0VTEAYSEwoPUEZTX0dPTERfQ0FSVkVEEAcSEQoNUEZTX0dP",
            "TERfV0lERRAIEhQKEFBGU19HT0xEX1JPVU5ERUQQCRIUChBQRlNfTUVUQUxf",
            "TUVESVVNEAoSEgoOUEZTX01FVEFMX1dJREUQCxISCg5QRlNfTUVUQUxfU0xJ",
            "TRAMEhUKEVBGU19NRVRBTF9ST1VOREVEEA0SDAoIUEZTX1BJTlMQDhIVChFQ",
            "RlNfTUlOSU1BTF9CTEFDSxAPEhUKEVBGU19NSU5JTUFMX1dISVRFEBASDAoI",
            "UEZTX1RBUEUQERIRCg1QRlNfV09PRF9TTElNEBISEQoNUEZTX1dPT0RfV0lE",
            "RRATEhIKDlBGU19XT09EX1RXSUdTEBQSDgoKUEZTX0NBTlZBUxAVEgwKCFBG",
            "U19OT05FEBZCEgoQX3dpdGhfY29sbGlzaW9uc0IVChNfaXNfcG9pbnRlcl9i",
            "bG9ja2VyQgoKCF92aXNpYmxlQgYKBF9zcmNCCAoGX3N0eWxlQggKBl9jb2xv",
            "ciKgAQoURUNTNkNvbXBvbmVudFRleHR1cmUSEAoDc3JjGAEgASgJSACIAQES",
            "GgoNc2FtcGxpbmdfbW9kZRgCIAEoBUgBiAEBEhEKBHdyYXAYAyABKAVIAogB",
            "ARIWCgloYXNfYWxwaGEYBCABKAhIA4gBAUIGCgRfc3JjQhAKDl9zYW1wbGlu",
            "Z19tb2RlQgcKBV93cmFwQgwKCl9oYXNfYWxwaGEi3QIKFUVDUzZDb21wb25l",
            "bnRBbmltYXRvchJLCgZzdGF0ZXMYASADKAsyOy5kZWNlbnRyYWxhbmQuc2Rr",
            "LmVjczYuRUNTNkNvbXBvbmVudEFuaW1hdG9yLkFuaW1hdGlvblN0YXRlGvYB",
            "Cg5BbmltYXRpb25TdGF0ZRIRCgRjbGlwGAEgASgJSACIAQESFAoHbG9vcGlu",
            "ZxgCIAEoCEgBiAEBEhMKBndlaWdodBgDIAEoAkgCiAEBEhQKB3BsYXlpbmcY",
            "BCABKAhIA4gBARIZCgxzaG91bGRfcmVzZXQYBSABKAhIBIgBARISCgVzcGVl",
            "ZBgGIAEoAkgFiAEBEhEKBG5hbWUYByABKAlIBogBAUIHCgVfY2xpcEIKCghf",
            "bG9vcGluZ0IJCgdfd2VpZ2h0QgoKCF9wbGF5aW5nQg8KDV9zaG91bGRfcmVz",
            "ZXRCCAoGX3NwZWVkQgcKBV9uYW1lIr0BChVFQ1M2Q29tcG9uZW50T2JqU2hh",
            "cGUSHAoPd2l0aF9jb2xsaXNpb25zGAEgASgISACIAQESHwoSaXNfcG9pbnRl",
            "cl9ibG9ja2VyGAIgASgISAGIAQESFAoHdmlzaWJsZRgDIAEoCEgCiAEBEhAK",
            "A3NyYxgEIAEoCUgDiAEBQhIKEF93aXRoX2NvbGxpc2lvbnNCFQoTX2lzX3Bv",
            "aW50ZXJfYmxvY2tlckIKCghfdmlzaWJsZUIGCgRfc3JjIi0KEUVDUzZDb21w",
            "b25lbnRGb250EhAKA3NyYxgBIAEoCUgAiAEBQgYKBF9zcmMiuQgKFkVDUzZD",
            "b21wb25lbnRUZXh0U2hhcGUSGgoNb3V0bGluZV93aWR0aBgBIAEoAkgAiAEB",
            "EjcKDW91dGxpbmVfY29sb3IYAiABKAsyGy5kZWNlbnRyYWxhbmQuY29tbW9u",
            "LkNvbG9yM0gBiAEBEi8KBWNvbG9yGAMgASgLMhsuZGVjZW50cmFsYW5kLmNv",
            "bW1vbi5Db2xvcjNIAogBARIWCglmb250X3NpemUYBCABKAJIA4gBARIRCgRm",
            "b250GAUgASgJSASIAQESFAoHb3BhY2l0eRgGIAEoAkgFiAEBEhIKBXZhbHVl",
            "GAcgASgJSAaIAQESGQoMbGluZV9zcGFjaW5nGAggASgJSAeIAQESFwoKbGlu",
            "ZV9jb3VudBgJIAEoBUgIiAEBEhoKDXRleHRfd3JhcHBpbmcYCiABKAhICYgB",
            "ARIYCgtzaGFkb3dfYmx1chgLIAEoAkgKiAEBEhwKD3NoYWRvd19vZmZzZXRf",
            "eBgMIAEoAkgLiAEBEhwKD3NoYWRvd19vZmZzZXRfeRgNIAEoAkgMiAEBEjYK",
            "DHNoYWRvd19jb2xvchgOIAEoCzIbLmRlY2VudHJhbGFuZC5jb21tb24uQ29s",
            "b3IzSA2IAQESGQoMaF90ZXh0X2FsaWduGA8gASgJSA6IAQESGQoMdl90ZXh0",
            "X2FsaWduGBAgASgJSA+IAQESEgoFd2lkdGgYESABKAJIEIgBARITCgZoZWln",
            "aHQYEiABKAJIEYgBARIYCgtwYWRkaW5nX3RvcBgTIAEoAkgSiAEBEhoKDXBh",
            "ZGRpbmdfcmlnaHQYFCABKAJIE4gBARIbCg5wYWRkaW5nX2JvdHRvbRgVIAEo",
            "AkgUiAEBEhkKDHBhZGRpbmdfbGVmdBgWIAEoAkgViAEBEhYKCWJpbGxib2Fy",
            "ZBgXIAEoCEgWiAEBEhQKB3Zpc2libGUYGCABKAhIF4gBAUIQCg5fb3V0bGlu",
            "ZV93aWR0aEIQCg5fb3V0bGluZV9jb2xvckIICgZfY29sb3JCDAoKX2ZvbnRf",
            "c2l6ZUIHCgVfZm9udEIKCghfb3BhY2l0eUIICgZfdmFsdWVCDwoNX2xpbmVf",
            "c3BhY2luZ0INCgtfbGluZV9jb3VudEIQCg5fdGV4dF93cmFwcGluZ0IOCgxf",
            "c2hhZG93X2JsdXJCEgoQX3NoYWRvd19vZmZzZXRfeEISChBfc2hhZG93X29m",
            "ZnNldF95Qg8KDV9zaGFkb3dfY29sb3JCDwoNX2hfdGV4dF9hbGlnbkIPCg1f",
            "dl90ZXh0X2FsaWduQggKBl93aWR0aEIJCgdfaGVpZ2h0Qg4KDF9wYWRkaW5n",
            "X3RvcEIQCg5fcGFkZGluZ19yaWdodEIRCg9fcGFkZGluZ19ib3R0b21CDwoN",
            "X3BhZGRpbmdfbGVmdEIMCgpfYmlsbGJvYXJkQgoKCF92aXNpYmxlIuYGChVF",
            "Q1M2Q29tcG9uZW50TWF0ZXJpYWwSFwoKYWxwaGFfdGVzdBgBIAEoAkgAiAEB",
            "EjYKDGFsYmVkb19jb2xvchgCIAEoCzIbLmRlY2VudHJhbGFuZC5jb21tb24u",
            "Q29sb3IzSAGIAQESOAoOZW1pc3NpdmVfY29sb3IYAyABKAsyGy5kZWNlbnRy",
            "YWxhbmQuY29tbW9uLkNvbG9yM0gCiAEBEhUKCG1ldGFsbGljGAQgASgCSAOI",
            "AQESFgoJcm91Z2huZXNzGAUgASgCSASIAQESPAoScmVmbGVjdGl2aXR5X2Nv",
            "bG9yGAYgASgLMhsuZGVjZW50cmFsYW5kLmNvbW1vbi5Db2xvcjNIBYgBARId",
            "ChBkaXJlY3RfaW50ZW5zaXR5GAcgASgCSAaIAQESGgoNbWljcm9fc3VyZmFj",
            "ZRgIIAEoAkgHiAEBEh8KEmVtaXNzaXZlX2ludGVuc2l0eRgJIAEoAkgIiAEB",
            "Eh8KEnNwZWN1bGFyX2ludGVuc2l0eRgKIAEoAkgJiAEBEhsKDmFsYmVkb190",
            "ZXh0dXJlGAsgASgJSAqIAQESGgoNYWxwaGFfdGV4dHVyZRgMIAEoCUgLiAEB",
            "Eh0KEGVtaXNzaXZlX3RleHR1cmUYDSABKAlIDIgBARIZCgxidW1wX3RleHR1",
            "cmUYDiABKAlIDYgBARIeChF0cmFuc3BhcmVuY3lfbW9kZRgPIAEoAkgOiAEB",
            "EhkKDGNhc3Rfc2hhZG93cxgQIAEoCEgPiAEBQg0KC19hbHBoYV90ZXN0Qg8K",
            "DV9hbGJlZG9fY29sb3JCEQoPX2VtaXNzaXZlX2NvbG9yQgsKCV9tZXRhbGxp",
            "Y0IMCgpfcm91Z2huZXNzQhUKE19yZWZsZWN0aXZpdHlfY29sb3JCEwoRX2Rp",
            "cmVjdF9pbnRlbnNpdHlCEAoOX21pY3JvX3N1cmZhY2VCFQoTX2VtaXNzaXZl",
            "X2ludGVuc2l0eUIVChNfc3BlY3VsYXJfaW50ZW5zaXR5QhEKD19hbGJlZG9f",
            "dGV4dHVyZUIQCg5fYWxwaGFfdGV4dHVyZUITChFfZW1pc3NpdmVfdGV4dHVy",
            "ZUIPCg1fYnVtcF90ZXh0dXJlQhQKEl90cmFuc3BhcmVuY3lfbW9kZUIPCg1f",
            "Y2FzdF9zaGFkb3dzIpIBChpFQ1M2Q29tcG9uZW50QmFzaWNNYXRlcmlhbBIX",
            "CgphbHBoYV90ZXN0GAEgASgCSACIAQESFAoHdGV4dHVyZRgCIAEoCUgBiAEB",
            "EhkKDGNhc3Rfc2hhZG93cxgDIAEoCEgCiAEBQg0KC19hbHBoYV90ZXN0QgoK",
            "CF90ZXh0dXJlQg8KDV9jYXN0X3NoYWRvd3Mi7QEKGUVDUzZDb21wb25lbnRV",
            "dWlkQ2FsbGJhY2sSEwoGYnV0dG9uGAEgASgJSACIAQESFwoKaG92ZXJfdGV4",
            "dBgCIAEoCUgBiAEBEhUKCGRpc3RhbmNlGAMgASgCSAKIAQESGgoNc2hvd19m",
            "ZWVkYmFjaxgEIAEoCEgDiAEBEhEKBHR5cGUYBSABKAlIBIgBARIRCgR1dWlk",
            "GAYgASgJSAWIAQFCCQoHX2J1dHRvbkINCgtfaG92ZXJfdGV4dEILCglfZGlz",
            "dGFuY2VCEAoOX3Nob3dfZmVlZGJhY2tCBwoFX3R5cGVCBwoFX3V1aWQiGAoW",
            "RUNTNkNvbXBvbmVudFNtYXJ0SXRlbSIyChZFQ1M2Q29tcG9uZW50VmlkZW9D",
            "bGlwEhAKA3VybBgBIAEoCUgAiAEBQgYKBF91cmwikwMKGUVDUzZDb21wb25l",
            "bnRWaWRlb1RleHR1cmUSGgoNc2FtcGxpbmdfbW9kZRgBIAEoBUgAiAEBEhEK",
            "BHdyYXAYAiABKAVIAYgBARITCgZ2b2x1bWUYAyABKAJIAogBARIaCg1wbGF5",
            "YmFja19yYXRlGAQgASgCSAOIAQESEQoEc2VlaxgFIAEoAkgEiAEBEhQKB3Bs",
            "YXlpbmcYBiABKAhIBYgBARIRCgRsb29wGAcgASgISAaIAQESGgoNdmlkZW9f",
            "Y2xpcF9pZBgIIAEoCUgHiAEBIlYKC1ZpZGVvU3RhdHVzEggKBE5PTkUQABIJ",
            "CgVFUlJPUhABEgsKB0xPQURJTkcQAhIJCgVSRUFEWRADEgsKB1BMQVlJTkcQ",
            "BBINCglCVUZGRVJJTkcQBUIQCg5fc2FtcGxpbmdfbW9kZUIHCgVfd3JhcEIJ",
            "Cgdfdm9sdW1lQhAKDl9wbGF5YmFja19yYXRlQgcKBV9zZWVrQgoKCF9wbGF5",
            "aW5nQgcKBV9sb29wQhAKDl92aWRlb19jbGlwX2lkIvMBChtFQ1M2Q29tcG9u",
            "ZW50Q2FtZXJhTW9kZUFyZWESKQoEYXJlYRgBIAEoCzIbLmRlY2VudHJhbGFu",
            "ZC5zZGsuZWNzNi5BcmVhElIKC2NhbWVyYV9tb2RlGAIgASgOMj0uZGVjZW50",
            "cmFsYW5kLnNkay5lY3M2LkVDUzZDb21wb25lbnRDYW1lcmFNb2RlQXJlYS5D",
            "YW1lcmFNb2RlIlUKCkNhbWVyYU1vZGUSEwoPQ01fRklSU1RfUEVSU09OEAAS",
            "EwoPQ01fVEhJUkRfUEVSU09OEAESHQoZQ01fQlVJTERJTkdfVE9PTF9HT0Rf",
            "TU9ERRACIq4BChpFQ1M2Q29tcG9uZW50QXZhdGFyVGV4dHVyZRIaCg1zYW1w",
            "bGluZ19tb2RlGAEgASgFSACIAQESEQoEd3JhcBgCIAEoBUgBiAEBEhYKCWhh",
            "c19hbHBoYRgDIAEoCEgCiAEBEhQKB3VzZXJfaWQYBCABKAlIA4gBAUIQCg5f",
            "c2FtcGxpbmdfbW9kZUIHCgVfd3JhcEIMCgpfaGFzX2FscGhhQgoKCF91c2Vy",
            "X2lkIrQBChZFQ1M2Q29tcG9uZW50QXVkaW9DbGlwEhAKA3VybBgBIAEoCUgA",
            "iAEBEhEKBGxvb3AYAiABKAhIAYgBARImChlsb2FkaW5nX2NvbXBsZXRlX2V2",
            "ZW50X2lkGAMgASgJSAKIAQESEwoGdm9sdW1lGAQgASgCSAOIAQFCBgoEX3Vy",
            "bEIHCgVfbG9vcEIcChpfbG9hZGluZ19jb21wbGV0ZV9ldmVudF9pZEIJCgdf",
            "dm9sdW1lIv4BChhFQ1M2Q29tcG9uZW50QXVkaW9Tb3VyY2USGgoNYXVkaW9f",
            "Y2xpcF9pZBgBIAEoCUgAiAEBEhEKBGxvb3AYAiABKAhIAYgBARITCgZ2b2x1",
            "bWUYAyABKAJIAogBARIUCgdwbGF5aW5nGAQgASgISAOIAQESEgoFcGl0Y2gY",
            "BSABKAJIBIgBARIgChNwbGF5ZWRfYXRfdGltZXN0YW1wGAYgASgFSAWIAQFC",
            "EAoOX2F1ZGlvX2NsaXBfaWRCBwoFX2xvb3BCCQoHX3ZvbHVtZUIKCghfcGxh",
            "eWluZ0IICgZfcGl0Y2hCFgoUX3BsYXllZF9hdF90aW1lc3RhbXAidgoYRUNT",
            "NkNvbXBvbmVudEF1ZGlvU3RyZWFtEhAKA3VybBgBIAEoCUgAiAEBEhQKB3Bs",
            "YXlpbmcYAiABKAhIAYgBARITCgZ2b2x1bWUYAyABKAJIAogBAUIGCgRfdXJs",
            "QgoKCF9wbGF5aW5nQgkKB192b2x1bWUiugUKGEVDUzZDb21wb25lbnRBdmF0",
            "YXJTaGFwZRIPCgJpZBgBIAEoCUgAiAEBEhEKBG5hbWUYAiABKAlIAYgBARIi",
            "ChVleHByZXNzaW9uX3RyaWdnZXJfaWQYAyABKAlIAogBARIpChxleHByZXNz",
            "aW9uX3RyaWdnZXJfdGltZXN0YW1wGAQgASgDSAOIAQESFwoKYm9keV9zaGFw",
            "ZRgFIAEoCUgEiAEBEhEKCXdlYXJhYmxlcxgGIAMoCRJFCgZlbW90ZXMYByAD",
            "KAsyNS5kZWNlbnRyYWxhbmQuc2RrLmVjczYuRUNTNkNvbXBvbmVudEF2YXRh",
            "clNoYXBlLkVtb3RlEjQKCnNraW5fY29sb3IYCCABKAsyGy5kZWNlbnRyYWxh",
            "bmQuY29tbW9uLkNvbG9yNEgFiAEBEjQKCmhhaXJfY29sb3IYCSABKAsyGy5k",
            "ZWNlbnRyYWxhbmQuY29tbW9uLkNvbG9yNEgGiAEBEjMKCWV5ZV9jb2xvchgK",
            "IAEoCzIbLmRlY2VudHJhbGFuZC5jb21tb24uQ29sb3I0SAeIAQESHAoPdXNl",
            "X2R1bW15X21vZGVsGAsgASgISAiIAQESFAoHdGFsa2luZxgMIAEoCEgJiAEB",
            "Gj0KBUVtb3RlEhEKBHNsb3QYASABKAVIAIgBARIQCgN1cm4YAiABKAlIAYgB",
            "AUIHCgVfc2xvdEIGCgRfdXJuQgUKA19pZEIHCgVfbmFtZUIYChZfZXhwcmVz",
            "c2lvbl90cmlnZ2VyX2lkQh8KHV9leHByZXNzaW9uX3RyaWdnZXJfdGltZXN0",
            "YW1wQg0KC19ib2R5X3NoYXBlQg0KC19za2luX2NvbG9yQg0KC19oYWlyX2Nv",
            "bG9yQgwKCl9leWVfY29sb3JCEgoQX3VzZV9kdW1teV9tb2RlbEIKCghfdGFs",
            "a2luZyL7AQoTRUNTNkNvbXBvbmVudEdpem1vcxIVCghwb3NpdGlvbhgBIAEo",
            "CEgAiAEBEhUKCHJvdGF0aW9uGAIgASgISAGIAQESEgoFc2NhbGUYAyABKAhI",
            "AogBARISCgVjeWNsZRgEIAEoCEgDiAEBEhsKDnNlbGVjdGVkX2dpem1vGAUg",
            "ASgJSASIAQESHAoPbG9jYWxfcmVmZXJlbmNlGAYgASgISAWIAQFCCwoJX3Bv",
            "c2l0aW9uQgsKCV9yb3RhdGlvbkIICgZfc2NhbGVCCAoGX2N5Y2xlQhEKD19z",
            "ZWxlY3RlZF9naXptb0ISChBfbG9jYWxfcmVmZXJlbmNlIoAEChRFQ1M2Q29t",
            "cG9uZW50VWlTaGFwZRIRCgRuYW1lGAEgASgJSACIAQESFAoHdmlzaWJsZRgC",
            "IAEoCEgBiAEBEhQKB29wYWNpdHkYAyABKAJIAogBARIUCgdoX2FsaWduGAQg",
            "ASgJSAOIAQESFAoHdl9hbGlnbhgFIAEoCUgEiAEBEjIKBXdpZHRoGAYgASgL",
            "Mh4uZGVjZW50cmFsYW5kLnNkay5lY3M2LlVpVmFsdWVIBYgBARIzCgZoZWln",
            "aHQYByABKAsyHi5kZWNlbnRyYWxhbmQuc2RrLmVjczYuVWlWYWx1ZUgGiAEB",
            "EjcKCnBvc2l0aW9uX3gYCCABKAsyHi5kZWNlbnRyYWxhbmQuc2RrLmVjczYu",
            "VWlWYWx1ZUgHiAEBEjcKCnBvc2l0aW9uX3kYCSABKAsyHi5kZWNlbnRyYWxh",
            "bmQuc2RrLmVjczYuVWlWYWx1ZUgIiAEBEh8KEmlzX3BvaW50ZXJfYmxvY2tl",
            "chgKIAEoCEgJiAEBQgcKBV9uYW1lQgoKCF92aXNpYmxlQgoKCF9vcGFjaXR5",
            "QgoKCF9oX2FsaWduQgoKCF92X2FsaWduQggKBl93aWR0aEIJCgdfaGVpZ2h0",
            "Qg0KC19wb3NpdGlvbl94Qg0KC19wb3NpdGlvbl95QhUKE19pc19wb2ludGVy",
            "X2Jsb2NrZXIiowUKHEVDUzZDb21wb25lbnRVaUNvbnRhaW5lclJlY3QSEQoE",
            "bmFtZRgBIAEoCUgAiAEBEhQKB3Zpc2libGUYAiABKAhIAYgBARIUCgdvcGFj",
            "aXR5GAMgASgCSAKIAQESFAoHaF9hbGlnbhgEIAEoCUgDiAEBEhQKB3ZfYWxp",
            "Z24YBSABKAlIBIgBARIyCgV3aWR0aBgGIAEoCzIeLmRlY2VudHJhbGFuZC5z",
            "ZGsuZWNzNi5VaVZhbHVlSAWIAQESMwoGaGVpZ2h0GAcgASgLMh4uZGVjZW50",
            "cmFsYW5kLnNkay5lY3M2LlVpVmFsdWVIBogBARI3Cgpwb3NpdGlvbl94GAgg",
            "ASgLMh4uZGVjZW50cmFsYW5kLnNkay5lY3M2LlVpVmFsdWVIB4gBARI3Cgpw",
            "b3NpdGlvbl95GAkgASgLMh4uZGVjZW50cmFsYW5kLnNkay5lY3M2LlVpVmFs",
            "dWVICIgBARIfChJpc19wb2ludGVyX2Jsb2NrZXIYCiABKAhICYgBARIWCgl0",
            "aGlja25lc3MYCyABKAJICogBARIvCgVjb2xvchgMIAEoCzIbLmRlY2VudHJh",
            "bGFuZC5jb21tb24uQ29sb3I0SAuIAQESIAoTYWxpZ25tZW50X3VzZXNfc2l6",
            "ZRgNIAEoCEgMiAEBQgcKBV9uYW1lQgoKCF92aXNpYmxlQgoKCF9vcGFjaXR5",
            "QgoKCF9oX2FsaWduQgoKCF92X2FsaWduQggKBl93aWR0aEIJCgdfaGVpZ2h0",
            "Qg0KC19wb3NpdGlvbl94Qg0KC19wb3NpdGlvbl95QhUKE19pc19wb2ludGVy",
            "X2Jsb2NrZXJCDAoKX3RoaWNrbmVzc0IICgZfY29sb3JCFgoUX2FsaWdubWVu",
            "dF91c2VzX3NpemUi7wYKHUVDUzZDb21wb25lbnRVaUNvbnRhaW5lclN0YWNr",
            "EhEKBG5hbWUYASABKAlIAIgBARIUCgd2aXNpYmxlGAIgASgISAGIAQESFAoH",
            "b3BhY2l0eRgDIAEoAkgCiAEBEhQKB2hfYWxpZ24YBCABKAlIA4gBARIUCgd2",
            "X2FsaWduGAUgASgJSASIAQESMgoFd2lkdGgYBiABKAsyHi5kZWNlbnRyYWxh",
            "bmQuc2RrLmVjczYuVWlWYWx1ZUgFiAEBEjMKBmhlaWdodBgHIAEoCzIeLmRl",
            "Y2VudHJhbGFuZC5zZGsuZWNzNi5VaVZhbHVlSAaIAQESNwoKcG9zaXRpb25f",
            "eBgIIAEoCzIeLmRlY2VudHJhbGFuZC5zZGsuZWNzNi5VaVZhbHVlSAeIAQES",
            "NwoKcG9zaXRpb25feRgJIAEoCzIeLmRlY2VudHJhbGFuZC5zZGsuZWNzNi5V",
            "aVZhbHVlSAiIAQESHwoSaXNfcG9pbnRlcl9ibG9ja2VyGAogASgISAmIAQES",
            "GAoLYWRhcHRfd2lkdGgYCyABKAhICogBARIZCgxhZGFwdF9oZWlnaHQYDCAB",
            "KAhIC4gBARIvCgVjb2xvchgNIAEoCzIbLmRlY2VudHJhbGFuZC5jb21tb24u",
            "Q29sb3I0SAyIAQESZwoRc3RhY2tfb3JpZW50YXRpb24YDiABKA4yRy5kZWNl",
            "bnRyYWxhbmQuc2RrLmVjczYuRUNTNkNvbXBvbmVudFVpQ29udGFpbmVyU3Rh",
            "Y2suVUlTdGFja09yaWVudGF0aW9uSA2IAQESFAoHc3BhY2luZxgPIAEoAkgO",
            "iAEBIjIKElVJU3RhY2tPcmllbnRhdGlvbhIMCghWRVJUSUNBTBAAEg4KCkhP",
            "UklaT05UQUwQAUIHCgVfbmFtZUIKCghfdmlzaWJsZUIKCghfb3BhY2l0eUIK",
            "CghfaF9hbGlnbkIKCghfdl9hbGlnbkIICgZfd2lkdGhCCQoHX2hlaWdodEIN",
            "CgtfcG9zaXRpb25feEINCgtfcG9zaXRpb25feUIVChNfaXNfcG9pbnRlcl9i",
            "bG9ja2VyQg4KDF9hZGFwdF93aWR0aEIPCg1fYWRhcHRfaGVpZ2h0QggKBl9j",
            "b2xvckIUChJfc3RhY2tfb3JpZW50YXRpb25CCgoIX3NwYWNpbmcizAkKFUVD",
            "UzZDb21wb25lbnRVaUJ1dHRvbhIRCgRuYW1lGAEgASgJSACIAQESFAoHdmlz",
            "aWJsZRgCIAEoCEgBiAEBEhQKB29wYWNpdHkYAyABKAJIAogBARIUCgdoX2Fs",
            "aWduGAQgASgJSAOIAQESFAoHdl9hbGlnbhgFIAEoCUgEiAEBEjIKBXdpZHRo",
            "GAYgASgLMh4uZGVjZW50cmFsYW5kLnNkay5lY3M2LlVpVmFsdWVIBYgBARIz",
            "CgZoZWlnaHQYByABKAsyHi5kZWNlbnRyYWxhbmQuc2RrLmVjczYuVWlWYWx1",
            "ZUgGiAEBEjcKCnBvc2l0aW9uX3gYCCABKAsyHi5kZWNlbnRyYWxhbmQuc2Rr",
            "LmVjczYuVWlWYWx1ZUgHiAEBEjcKCnBvc2l0aW9uX3kYCSABKAsyHi5kZWNl",
            "bnRyYWxhbmQuc2RrLmVjczYuVWlWYWx1ZUgIiAEBEh8KEmlzX3BvaW50ZXJf",
            "YmxvY2tlchgKIAEoCEgJiAEBEhYKCWZvbnRfc2l6ZRgLIAEoAkgKiAEBEhgK",
            "C2ZvbnRfd2VpZ2h0GAwgASgJSAuIAQESFgoJdGhpY2tuZXNzGA0gASgCSAyI",
            "AQESGgoNY29ybmVyX3JhZGl1cxgOIAEoAkgNiAEBEi8KBWNvbG9yGA8gASgL",
            "MhsuZGVjZW50cmFsYW5kLmNvbW1vbi5Db2xvcjRIDogBARI0CgpiYWNrZ3Jv",
            "dW5kGBAgASgLMhsuZGVjZW50cmFsYW5kLmNvbW1vbi5Db2xvcjRID4gBARIY",
            "CgtwYWRkaW5nX3RvcBgRIAEoAkgQiAEBEhoKDXBhZGRpbmdfcmlnaHQYEiAB",
            "KAJIEYgBARIbCg5wYWRkaW5nX2JvdHRvbRgTIAEoAkgSiAEBEhkKDHBhZGRp",
            "bmdfbGVmdBgUIAEoAkgTiAEBEhgKC3NoYWRvd19ibHVyGBUgASgCSBSIAQES",
            "HAoPc2hhZG93X29mZnNldF94GBYgASgCSBWIAQESHAoPc2hhZG93X29mZnNl",
            "dF95GBcgASgCSBaIAQESNgoMc2hhZG93X2NvbG9yGBggASgLMhsuZGVjZW50",
            "cmFsYW5kLmNvbW1vbi5Db2xvcjRIF4gBARIRCgR0ZXh0GBkgASgJSBiIAQFC",
            "BwoFX25hbWVCCgoIX3Zpc2libGVCCgoIX29wYWNpdHlCCgoIX2hfYWxpZ25C",
            "CgoIX3ZfYWxpZ25CCAoGX3dpZHRoQgkKB19oZWlnaHRCDQoLX3Bvc2l0aW9u",
            "X3hCDQoLX3Bvc2l0aW9uX3lCFQoTX2lzX3BvaW50ZXJfYmxvY2tlckIMCgpf",
            "Zm9udF9zaXplQg4KDF9mb250X3dlaWdodEIMCgpfdGhpY2tuZXNzQhAKDl9j",
            "b3JuZXJfcmFkaXVzQggKBl9jb2xvckINCgtfYmFja2dyb3VuZEIOCgxfcGFk",
            "ZGluZ190b3BCEAoOX3BhZGRpbmdfcmlnaHRCEQoPX3BhZGRpbmdfYm90dG9t",
            "Qg8KDV9wYWRkaW5nX2xlZnRCDgoMX3NoYWRvd19ibHVyQhIKEF9zaGFkb3df",
            "b2Zmc2V0X3hCEgoQX3NoYWRvd19vZmZzZXRfeUIPCg1fc2hhZG93X2NvbG9y",
            "QgcKBV90ZXh0Iv4LChNFQ1M2Q29tcG9uZW50VWlUZXh0EhEKBG5hbWUYASAB",
            "KAlIAIgBARIUCgd2aXNpYmxlGAIgASgISAGIAQESFAoHb3BhY2l0eRgDIAEo",
            "AkgCiAEBEhQKB2hfYWxpZ24YBCABKAlIA4gBARIUCgd2X2FsaWduGAUgASgJ",
            "SASIAQESMgoFd2lkdGgYBiABKAsyHi5kZWNlbnRyYWxhbmQuc2RrLmVjczYu",
            "VWlWYWx1ZUgFiAEBEjMKBmhlaWdodBgHIAEoCzIeLmRlY2VudHJhbGFuZC5z",
            "ZGsuZWNzNi5VaVZhbHVlSAaIAQESNwoKcG9zaXRpb25feBgIIAEoCzIeLmRl",
            "Y2VudHJhbGFuZC5zZGsuZWNzNi5VaVZhbHVlSAeIAQESNwoKcG9zaXRpb25f",
            "eRgJIAEoCzIeLmRlY2VudHJhbGFuZC5zZGsuZWNzNi5VaVZhbHVlSAiIAQES",
            "HwoSaXNfcG9pbnRlcl9ibG9ja2VyGAogASgISAmIAQESGgoNb3V0bGluZV93",
            "aWR0aBgLIAEoAkgKiAEBEjcKDW91dGxpbmVfY29sb3IYDCABKAsyGy5kZWNl",
            "bnRyYWxhbmQuY29tbW9uLkNvbG9yNEgLiAEBEi8KBWNvbG9yGA0gASgLMhsu",
            "ZGVjZW50cmFsYW5kLmNvbW1vbi5Db2xvcjRIDIgBARIWCglmb250X3NpemUY",
            "DiABKAJIDYgBARIbCg5mb250X2F1dG9fc2l6ZRgPIAEoCEgOiAEBEhEKBGZv",
            "bnQYECABKAlID4gBARISCgV2YWx1ZRgRIAEoCUgQiAEBEhkKDGxpbmVfc3Bh",
            "Y2luZxgSIAEoAkgRiAEBEhcKCmxpbmVfY291bnQYEyABKAVIEogBARIYCgth",
            "ZGFwdF93aWR0aBgUIAEoCEgTiAEBEhkKDGFkYXB0X2hlaWdodBgVIAEoCEgU",
            "iAEBEhoKDXRleHRfd3JhcHBpbmcYFiABKAhIFYgBARIYCgtzaGFkb3dfYmx1",
            "chgXIAEoAkgWiAEBEhwKD3NoYWRvd19vZmZzZXRfeBgYIAEoAkgXiAEBEhwK",
            "D3NoYWRvd19vZmZzZXRfeRgZIAEoAkgYiAEBEjYKDHNoYWRvd19jb2xvchga",
            "IAEoCzIbLmRlY2VudHJhbGFuZC5jb21tb24uQ29sb3I0SBmIAQESGQoMaF90",
            "ZXh0X2FsaWduGBsgASgJSBqIAQESGQoMdl90ZXh0X2FsaWduGBwgASgJSBuI",
            "AQESGAoLcGFkZGluZ190b3AYHSABKAJIHIgBARIaCg1wYWRkaW5nX3JpZ2h0",
            "GB4gASgCSB2IAQESGwoOcGFkZGluZ19ib3R0b20YHyABKAJIHogBARIZCgxw",
            "YWRkaW5nX2xlZnQYICABKAJIH4gBAUIHCgVfbmFtZUIKCghfdmlzaWJsZUIK",
            "Cghfb3BhY2l0eUIKCghfaF9hbGlnbkIKCghfdl9hbGlnbkIICgZfd2lkdGhC",
            "CQoHX2hlaWdodEINCgtfcG9zaXRpb25feEINCgtfcG9zaXRpb25feUIVChNf",
            "aXNfcG9pbnRlcl9ibG9ja2VyQhAKDl9vdXRsaW5lX3dpZHRoQhAKDl9vdXRs",
            "aW5lX2NvbG9yQggKBl9jb2xvckIMCgpfZm9udF9zaXplQhEKD19mb250X2F1",
            "dG9fc2l6ZUIHCgVfZm9udEIICgZfdmFsdWVCDwoNX2xpbmVfc3BhY2luZ0IN",
            "CgtfbGluZV9jb3VudEIOCgxfYWRhcHRfd2lkdGhCDwoNX2FkYXB0X2hlaWdo",
            "dEIQCg5fdGV4dF93cmFwcGluZ0IOCgxfc2hhZG93X2JsdXJCEgoQX3NoYWRv",
            "d19vZmZzZXRfeEISChBfc2hhZG93X29mZnNldF95Qg8KDV9zaGFkb3dfY29s",
            "b3JCDwoNX2hfdGV4dF9hbGlnbkIPCg1fdl90ZXh0X2FsaWduQg4KDF9wYWRk",
            "aW5nX3RvcEIQCg5fcGFkZGluZ19yaWdodEIRCg9fcGFkZGluZ19ib3R0b21C",
            "DwoNX3BhZGRpbmdfbGVmdCLADAoYRUNTNkNvbXBvbmVudFVpSW5wdXRUZXh0",
            "EhEKBG5hbWUYASABKAlIAIgBARIUCgd2aXNpYmxlGAIgASgISAGIAQESFAoH",
            "b3BhY2l0eRgDIAEoAkgCiAEBEhQKB2hfYWxpZ24YBCABKAlIA4gBARIUCgd2",
            "X2FsaWduGAUgASgJSASIAQESMgoFd2lkdGgYBiABKAsyHi5kZWNlbnRyYWxh",
            "bmQuc2RrLmVjczYuVWlWYWx1ZUgFiAEBEjMKBmhlaWdodBgHIAEoCzIeLmRl",
            "Y2VudHJhbGFuZC5zZGsuZWNzNi5VaVZhbHVlSAaIAQESNwoKcG9zaXRpb25f",
            "eBgIIAEoCzIeLmRlY2VudHJhbGFuZC5zZGsuZWNzNi5VaVZhbHVlSAeIAQES",
            "NwoKcG9zaXRpb25feRgJIAEoCzIeLmRlY2VudHJhbGFuZC5zZGsuZWNzNi5V",
            "aVZhbHVlSAiIAQESHwoSaXNfcG9pbnRlcl9ibG9ja2VyGAogASgISAmIAQES",
            "GgoNb3V0bGluZV93aWR0aBgLIAEoAkgKiAEBEjcKDW91dGxpbmVfY29sb3IY",
            "DCABKAsyGy5kZWNlbnRyYWxhbmQuY29tbW9uLkNvbG9yNEgLiAEBEi8KBWNv",
            "bG9yGA0gASgLMhsuZGVjZW50cmFsYW5kLmNvbW1vbi5Db2xvcjRIDIgBARIW",
            "Cglmb250X3NpemUYDiABKAJIDYgBARIRCgRmb250GBAgASgJSA6IAQESEgoF",
            "dmFsdWUYESABKAlID4gBARIYCgtwbGFjZWhvbGRlchghIAEoCUgQiAEBEhMK",
            "Bm1hcmdpbhgiIAEoAkgRiAEBEjwKEmZvY3VzZWRfYmFja2dyb3VuZBgjIAEo",
            "CzIbLmRlY2VudHJhbGFuZC5jb21tb24uQ29sb3I0SBKIAQESGgoNdGV4dF93",
            "cmFwcGluZxgWIAEoCEgTiAEBEhgKC3NoYWRvd19ibHVyGBcgASgCSBSIAQES",
            "HAoPc2hhZG93X29mZnNldF94GBggASgCSBWIAQESHAoPc2hhZG93X29mZnNl",
            "dF95GBkgASgCSBaIAQESNgoMc2hhZG93X2NvbG9yGBogASgLMhsuZGVjZW50",
            "cmFsYW5kLmNvbW1vbi5Db2xvcjRIF4gBARIZCgxoX3RleHRfYWxpZ24YGyAB",
            "KAlIGIgBARIZCgx2X3RleHRfYWxpZ24YHCABKAlIGYgBARIYCgtwYWRkaW5n",
            "X3RvcBgdIAEoAkgaiAEBEhoKDXBhZGRpbmdfcmlnaHQYHiABKAJIG4gBARIb",
            "Cg5wYWRkaW5nX2JvdHRvbRgfIAEoAkgciAEBEhkKDHBhZGRpbmdfbGVmdBgg",
            "IAEoAkgdiAEBEhwKD29uX3RleHRfY2hhbmdlZBgkIAEoCUgeiAEBEhUKCG9u",
            "X2ZvY3VzGCUgASgJSB+IAQESFAoHb25fYmx1chgmIAEoCUggiAEBQgcKBV9u",
            "YW1lQgoKCF92aXNpYmxlQgoKCF9vcGFjaXR5QgoKCF9oX2FsaWduQgoKCF92",
            "X2FsaWduQggKBl93aWR0aEIJCgdfaGVpZ2h0Qg0KC19wb3NpdGlvbl94Qg0K",
            "C19wb3NpdGlvbl95QhUKE19pc19wb2ludGVyX2Jsb2NrZXJCEAoOX291dGxp",
            "bmVfd2lkdGhCEAoOX291dGxpbmVfY29sb3JCCAoGX2NvbG9yQgwKCl9mb250",
            "X3NpemVCBwoFX2ZvbnRCCAoGX3ZhbHVlQg4KDF9wbGFjZWhvbGRlckIJCgdf",
            "bWFyZ2luQhUKE19mb2N1c2VkX2JhY2tncm91bmRCEAoOX3RleHRfd3JhcHBp",
            "bmdCDgoMX3NoYWRvd19ibHVyQhIKEF9zaGFkb3dfb2Zmc2V0X3hCEgoQX3No",
            "YWRvd19vZmZzZXRfeUIPCg1fc2hhZG93X2NvbG9yQg8KDV9oX3RleHRfYWxp",
            "Z25CDwoNX3ZfdGV4dF9hbGlnbkIOCgxfcGFkZGluZ190b3BCEAoOX3BhZGRp",
            "bmdfcmlnaHRCEQoPX3BhZGRpbmdfYm90dG9tQg8KDV9wYWRkaW5nX2xlZnRC",
            "EgoQX29uX3RleHRfY2hhbmdlZEILCglfb25fZm9jdXNCCgoIX29uX2JsdXIi",
            "1AcKFEVDUzZDb21wb25lbnRVaUltYWdlEhEKBG5hbWUYASABKAlIAIgBARIU",
            "Cgd2aXNpYmxlGAIgASgISAGIAQESFAoHb3BhY2l0eRgDIAEoAkgCiAEBEhQK",
            "B2hfYWxpZ24YBCABKAlIA4gBARIUCgd2X2FsaWduGAUgASgJSASIAQESMgoF",
            "d2lkdGgYBiABKAsyHi5kZWNlbnRyYWxhbmQuc2RrLmVjczYuVWlWYWx1ZUgF",
            "iAEBEjMKBmhlaWdodBgHIAEoCzIeLmRlY2VudHJhbGFuZC5zZGsuZWNzNi5V",
            "aVZhbHVlSAaIAQESNwoKcG9zaXRpb25feBgIIAEoCzIeLmRlY2VudHJhbGFu",
            "ZC5zZGsuZWNzNi5VaVZhbHVlSAeIAQESNwoKcG9zaXRpb25feRgJIAEoCzIe",
            "LmRlY2VudHJhbGFuZC5zZGsuZWNzNi5VaVZhbHVlSAiIAQESHwoSaXNfcG9p",
            "bnRlcl9ibG9ja2VyGAogASgISAmIAQESGAoLc291cmNlX2xlZnQYCyABKAJI",
            "CogBARIXCgpzb3VyY2VfdG9wGAwgASgCSAuIAQESGQoMc291cmNlX3dpZHRo",
            "GA0gASgCSAyIAQESGgoNc291cmNlX2hlaWdodBgOIAEoAkgNiAEBEhMKBnNv",
            "dXJjZRgPIAEoCUgOiAEBEhgKC3BhZGRpbmdfdG9wGBAgASgCSA+IAQESGgoN",
            "cGFkZGluZ19yaWdodBgRIAEoAkgQiAEBEhsKDnBhZGRpbmdfYm90dG9tGBIg",
            "ASgCSBGIAQESGQoMcGFkZGluZ19sZWZ0GBMgASgCSBKIAQESGwoOc2l6ZV9p",
            "bl9waXhlbHMYFCABKAhIE4gBARIVCghvbl9jbGljaxgVIAEoCUgUiAEBQgcK",
            "BV9uYW1lQgoKCF92aXNpYmxlQgoKCF9vcGFjaXR5QgoKCF9oX2FsaWduQgoK",
            "CF92X2FsaWduQggKBl93aWR0aEIJCgdfaGVpZ2h0Qg0KC19wb3NpdGlvbl94",
            "Qg0KC19wb3NpdGlvbl95QhUKE19pc19wb2ludGVyX2Jsb2NrZXJCDgoMX3Nv",
            "dXJjZV9sZWZ0Qg0KC19zb3VyY2VfdG9wQg8KDV9zb3VyY2Vfd2lkdGhCEAoO",
            "X3NvdXJjZV9oZWlnaHRCCQoHX3NvdXJjZUIOCgxfcGFkZGluZ190b3BCEAoO",
            "X3BhZGRpbmdfcmlnaHRCEQoPX3BhZGRpbmdfYm90dG9tQg8KDV9wYWRkaW5n",
            "X2xlZnRCEQoPX3NpemVfaW5fcGl4ZWxzQgsKCV9vbl9jbGljayLkAwoZRUNT",
            "NkNvbXBvbmVudFVpU2Nyb2xsUmVjdBIUCgd2YWx1ZV94GAEgASgCSACIAQES",
            "FAoHdmFsdWVfeRgCIAEoAkgBiAEBEjoKEGJhY2tncm91bmRfY29sb3IYAyAB",
            "KAsyGy5kZWNlbnRyYWxhbmQuY29tbW9uLkNvbG9yNEgCiAEBEhoKDWlzX2hv",
            "cml6b250YWwYBCABKAhIA4gBARIYCgtpc192ZXJ0aWNhbBgFIAEoCEgEiAEB",
            "EhgKC3BhZGRpbmdfdG9wGAYgASgCSAWIAQESGgoNcGFkZGluZ19yaWdodBgH",
            "IAEoAkgGiAEBEhsKDnBhZGRpbmdfYm90dG9tGAggASgCSAeIAQESGQoMcGFk",
            "ZGluZ19sZWZ0GAkgASgCSAiIAQESFwoKb25fY2hhbmdlZBgKIAEoCUgJiAEB",
            "QgoKCF92YWx1ZV94QgoKCF92YWx1ZV95QhMKEV9iYWNrZ3JvdW5kX2NvbG9y",
            "QhAKDl9pc19ob3Jpem9udGFsQg4KDF9pc192ZXJ0aWNhbEIOCgxfcGFkZGlu",
            "Z190b3BCEAoOX3BhZGRpbmdfcmlnaHRCEQoPX3BhZGRpbmdfYm90dG9tQg8K",
            "DV9wYWRkaW5nX2xlZnRCDQoLX29uX2NoYW5nZWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Decentraland.Common.VectorsReflection.Descriptor, global::Decentraland.Common.ColorsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.Area), global::Decentraland.Sdk.Ecs6.Area.Parser, new[]{ "Box" }, new[]{ "Box" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.UiValue), global::Decentraland.Sdk.Ecs6.UiValue.Parser, new[]{ "Value", "Type" }, new[]{ "Value", "Type" }, new[]{ typeof(global::Decentraland.Sdk.Ecs6.UiValue.Types.UiValueType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarModifierArea), global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarModifierArea.Parser, new[]{ "Area", "Modifiers", "ExcludeIds" }, new[]{ "Area" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentTransform), global::Decentraland.Sdk.Ecs6.ECS6ComponentTransform.Parser, new[]{ "Position", "Rotation", "Scale" }, new[]{ "Position", "Rotation", "Scale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAttachToAvatar), global::Decentraland.Sdk.Ecs6.ECS6ComponentAttachToAvatar.Parser, new[]{ "AvatarId", "AnchorPointId", "AvatarSceneId" }, new[]{ "AvatarId", "AnchorPointId", "AvatarSceneId" }, new[]{ typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAttachToAvatar.Types.AttachToAvatarAnchorPointId) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentBillboard), global::Decentraland.Sdk.Ecs6.ECS6ComponentBillboard.Parser, new[]{ "X", "Y", "Z" }, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentBoxShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentBoxShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Uvs" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentSphereShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentSphereShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentCircleShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentCircleShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Segments", "Arc" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Segments", "Arc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentPlaneShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentPlaneShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Uvs", "Width", "Height" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Width", "Height" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentConeShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentConeShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "RadiusTop", "RadiusBottom", "SegmentsHeight", "SegmentsRadial", "OpenEnded", "Radius", "Arc" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "RadiusTop", "RadiusBottom", "SegmentsHeight", "SegmentsRadial", "OpenEnded", "Radius", "Arc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentCylinderShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentCylinderShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "RadiusTop", "RadiusBottom", "SegmentsHeight", "SegmentsRadial", "OpenEnded", "Radius", "Arc" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "RadiusTop", "RadiusBottom", "SegmentsHeight", "SegmentsRadial", "OpenEnded", "Radius", "Arc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentGltfShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentGltfShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Src" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Src" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentNftShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentNftShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Src", "Style", "Color" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Src", "Style", "Color" }, new[]{ typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentNftShape.Types.PictureFrameStyle) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentTexture), global::Decentraland.Sdk.Ecs6.ECS6ComponentTexture.Parser, new[]{ "Src", "SamplingMode", "Wrap", "HasAlpha" }, new[]{ "Src", "SamplingMode", "Wrap", "HasAlpha" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator), global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Parser, new[]{ "States" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Types.AnimationState), global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Types.AnimationState.Parser, new[]{ "Clip", "Looping", "Weight", "Playing", "ShouldReset", "Speed", "Name" }, new[]{ "Clip", "Looping", "Weight", "Playing", "ShouldReset", "Speed", "Name" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentObjShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentObjShape.Parser, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Src" }, new[]{ "WithCollisions", "IsPointerBlocker", "Visible", "Src" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentFont), global::Decentraland.Sdk.Ecs6.ECS6ComponentFont.Parser, new[]{ "Src" }, new[]{ "Src" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentTextShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentTextShape.Parser, new[]{ "OutlineWidth", "OutlineColor", "Color", "FontSize", "Font", "Opacity", "Value", "LineSpacing", "LineCount", "TextWrapping", "ShadowBlur", "ShadowOffsetX", "ShadowOffsetY", "ShadowColor", "HTextAlign", "VTextAlign", "Width", "Height", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "Billboard", "Visible" }, new[]{ "OutlineWidth", "OutlineColor", "Color", "FontSize", "Font", "Opacity", "Value", "LineSpacing", "LineCount", "TextWrapping", "ShadowBlur", "ShadowOffsetX", "ShadowOffsetY", "ShadowColor", "HTextAlign", "VTextAlign", "Width", "Height", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "Billboard", "Visible" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentMaterial), global::Decentraland.Sdk.Ecs6.ECS6ComponentMaterial.Parser, new[]{ "AlphaTest", "AlbedoColor", "EmissiveColor", "Metallic", "Roughness", "ReflectivityColor", "DirectIntensity", "MicroSurface", "EmissiveIntensity", "SpecularIntensity", "AlbedoTexture", "AlphaTexture", "EmissiveTexture", "BumpTexture", "TransparencyMode", "CastShadows" }, new[]{ "AlphaTest", "AlbedoColor", "EmissiveColor", "Metallic", "Roughness", "ReflectivityColor", "DirectIntensity", "MicroSurface", "EmissiveIntensity", "SpecularIntensity", "AlbedoTexture", "AlphaTexture", "EmissiveTexture", "BumpTexture", "TransparencyMode", "CastShadows" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentBasicMaterial), global::Decentraland.Sdk.Ecs6.ECS6ComponentBasicMaterial.Parser, new[]{ "AlphaTest", "Texture", "CastShadows" }, new[]{ "AlphaTest", "Texture", "CastShadows" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUuidCallback), global::Decentraland.Sdk.Ecs6.ECS6ComponentUuidCallback.Parser, new[]{ "Button", "HoverText", "Distance", "ShowFeedback", "Type", "Uuid" }, new[]{ "Button", "HoverText", "Distance", "ShowFeedback", "Type", "Uuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentSmartItem), global::Decentraland.Sdk.Ecs6.ECS6ComponentSmartItem.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentVideoClip), global::Decentraland.Sdk.Ecs6.ECS6ComponentVideoClip.Parser, new[]{ "Url" }, new[]{ "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentVideoTexture), global::Decentraland.Sdk.Ecs6.ECS6ComponentVideoTexture.Parser, new[]{ "SamplingMode", "Wrap", "Volume", "PlaybackRate", "Seek", "Playing", "Loop", "VideoClipId" }, new[]{ "SamplingMode", "Wrap", "Volume", "PlaybackRate", "Seek", "Playing", "Loop", "VideoClipId" }, new[]{ typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentVideoTexture.Types.VideoStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea), global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Parser, new[]{ "Area", "CameraMode" }, null, new[]{ typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarTexture), global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarTexture.Parser, new[]{ "SamplingMode", "Wrap", "HasAlpha", "UserId" }, new[]{ "SamplingMode", "Wrap", "HasAlpha", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAudioClip), global::Decentraland.Sdk.Ecs6.ECS6ComponentAudioClip.Parser, new[]{ "Url", "Loop", "LoadingCompleteEventId", "Volume" }, new[]{ "Url", "Loop", "LoadingCompleteEventId", "Volume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAudioSource), global::Decentraland.Sdk.Ecs6.ECS6ComponentAudioSource.Parser, new[]{ "AudioClipId", "Loop", "Volume", "Playing", "Pitch", "PlayedAtTimestamp" }, new[]{ "AudioClipId", "Loop", "Volume", "Playing", "Pitch", "PlayedAtTimestamp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAudioStream), global::Decentraland.Sdk.Ecs6.ECS6ComponentAudioStream.Parser, new[]{ "Url", "Playing", "Volume" }, new[]{ "Url", "Playing", "Volume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Parser, new[]{ "Id", "Name", "ExpressionTriggerId", "ExpressionTriggerTimestamp", "BodyShape", "Wearables", "Emotes", "SkinColor", "HairColor", "EyeColor", "UseDummyModel", "Talking" }, new[]{ "Id", "Name", "ExpressionTriggerId", "ExpressionTriggerTimestamp", "BodyShape", "SkinColor", "HairColor", "EyeColor", "UseDummyModel", "Talking" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Types.Emote), global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Types.Emote.Parser, new[]{ "Slot", "Urn" }, new[]{ "Slot", "Urn" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentGizmos), global::Decentraland.Sdk.Ecs6.ECS6ComponentGizmos.Parser, new[]{ "Position", "Rotation", "Scale", "Cycle", "SelectedGizmo", "LocalReference" }, new[]{ "Position", "Rotation", "Scale", "Cycle", "SelectedGizmo", "LocalReference" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiShape), global::Decentraland.Sdk.Ecs6.ECS6ComponentUiShape.Parser, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker" }, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerRect), global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerRect.Parser, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "Thickness", "Color", "AlignmentUsesSize" }, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "Thickness", "Color", "AlignmentUsesSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerStack), global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerStack.Parser, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "AdaptWidth", "AdaptHeight", "Color", "StackOrientation", "Spacing" }, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "AdaptWidth", "AdaptHeight", "Color", "StackOrientation", "Spacing" }, new[]{ typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerStack.Types.UIStackOrientation) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiButton), global::Decentraland.Sdk.Ecs6.ECS6ComponentUiButton.Parser, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "FontSize", "FontWeight", "Thickness", "CornerRadius", "Color", "Background", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "ShadowBlur", "ShadowOffsetX", "ShadowOffsetY", "ShadowColor", "Text" }, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "FontSize", "FontWeight", "Thickness", "CornerRadius", "Color", "Background", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "ShadowBlur", "ShadowOffsetX", "ShadowOffsetY", "ShadowColor", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiText), global::Decentraland.Sdk.Ecs6.ECS6ComponentUiText.Parser, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "OutlineWidth", "OutlineColor", "Color", "FontSize", "FontAutoSize", "Font", "Value", "LineSpacing", "LineCount", "AdaptWidth", "AdaptHeight", "TextWrapping", "ShadowBlur", "ShadowOffsetX", "ShadowOffsetY", "ShadowColor", "HTextAlign", "VTextAlign", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft" }, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "OutlineWidth", "OutlineColor", "Color", "FontSize", "FontAutoSize", "Font", "Value", "LineSpacing", "LineCount", "AdaptWidth", "AdaptHeight", "TextWrapping", "ShadowBlur", "ShadowOffsetX", "ShadowOffsetY", "ShadowColor", "HTextAlign", "VTextAlign", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiInputText), global::Decentraland.Sdk.Ecs6.ECS6ComponentUiInputText.Parser, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "OutlineWidth", "OutlineColor", "Color", "FontSize", "Font", "Value", "Placeholder", "Margin", "FocusedBackground", "TextWrapping", "ShadowBlur", "ShadowOffsetX", "ShadowOffsetY", "ShadowColor", "HTextAlign", "VTextAlign", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "OnTextChanged", "OnFocus", "OnBlur" }, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "OutlineWidth", "OutlineColor", "Color", "FontSize", "Font", "Value", "Placeholder", "Margin", "FocusedBackground", "TextWrapping", "ShadowBlur", "ShadowOffsetX", "ShadowOffsetY", "ShadowColor", "HTextAlign", "VTextAlign", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "OnTextChanged", "OnFocus", "OnBlur" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiImage), global::Decentraland.Sdk.Ecs6.ECS6ComponentUiImage.Parser, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "SourceLeft", "SourceTop", "SourceWidth", "SourceHeight", "Source", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "SizeInPixels", "OnClick" }, new[]{ "Name", "Visible", "Opacity", "HAlign", "VAlign", "Width", "Height", "PositionX", "PositionY", "IsPointerBlocker", "SourceLeft", "SourceTop", "SourceWidth", "SourceHeight", "Source", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "SizeInPixels", "OnClick" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Decentraland.Sdk.Ecs6.ECS6ComponentUiScrollRect), global::Decentraland.Sdk.Ecs6.ECS6ComponentUiScrollRect.Parser, new[]{ "ValueX", "ValueY", "BackgroundColor", "IsHorizontal", "IsVertical", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "OnChanged" }, new[]{ "ValueX", "ValueY", "BackgroundColor", "IsHorizontal", "IsVertical", "PaddingTop", "PaddingRight", "PaddingBottom", "PaddingLeft", "OnChanged" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Area : pb::IMessage<Area>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Area> _parser = new pb::MessageParser<Area>(() => new Area());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Area> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Area() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Area(Area other) : this() {
      box_ = other.box_ != null ? other.box_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Area Clone() {
      return new Area(this);
    }

    /// <summary>Field number for the "box" field.</summary>
    public const int BoxFieldNumber = 1;
    private global::Decentraland.Common.Vector3 box_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Vector3 Box {
      get { return box_; }
      set {
        box_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Area);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Area other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Box, other.Box)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (box_ != null) hash ^= Box.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (box_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Box);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (box_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Box);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (box_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Box);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Area other) {
      if (other == null) {
        return;
      }
      if (other.box_ != null) {
        if (box_ == null) {
          Box = new global::Decentraland.Common.Vector3();
        }
        Box.MergeFrom(other.Box);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (box_ == null) {
              Box = new global::Decentraland.Common.Vector3();
            }
            input.ReadMessage(Box);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (box_ == null) {
              Box = new global::Decentraland.Common.Vector3();
            }
            input.ReadMessage(Box);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UiValue : pb::IMessage<UiValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UiValue> _parser = new pb::MessageParser<UiValue>(() => new UiValue());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UiValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UiValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UiValue(UiValue other) : this() {
      _hasBits0 = other._hasBits0;
      value_ = other.value_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UiValue Clone() {
      return new UiValue(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Value {
      get { if ((_hasBits0 & 1) != 0) { return value_; } else { return 0F; } }
      set {
        _hasBits0 |= 1;
        value_ = value;
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Decentraland.Sdk.Ecs6.UiValue.Types.UiValueType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue.Types.UiValueType Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return global::Decentraland.Sdk.Ecs6.UiValue.Types.UiValueType.UvtPercent; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UiValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UiValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasValue) {
        output.WriteRawTag(13);
        output.WriteFloat(Value);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasValue) {
        output.WriteRawTag(13);
        output.WriteFloat(Value);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasValue) {
        size += 1 + 4;
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UiValue other) {
      if (other == null) {
        return;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Value = input.ReadFloat();
            break;
          }
          case 16: {
            Type = (global::Decentraland.Sdk.Ecs6.UiValue.Types.UiValueType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Value = input.ReadFloat();
            break;
          }
          case 16: {
            Type = (global::Decentraland.Sdk.Ecs6.UiValue.Types.UiValueType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UiValue message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum UiValueType {
        [pbr::OriginalName("UVT_PERCENT")] UvtPercent = 0,
        [pbr::OriginalName("PIXELS")] Pixels = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// CLASS_ID.AVATAR_MODIFIER_AREA
  /// </summary>
  public sealed partial class ECS6ComponentAvatarModifierArea : pb::IMessage<ECS6ComponentAvatarModifierArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentAvatarModifierArea> _parser = new pb::MessageParser<ECS6ComponentAvatarModifierArea>(() => new ECS6ComponentAvatarModifierArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentAvatarModifierArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarModifierArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarModifierArea(ECS6ComponentAvatarModifierArea other) : this() {
      area_ = other.area_ != null ? other.area_.Clone() : null;
      modifiers_ = other.modifiers_.Clone();
      excludeIds_ = other.excludeIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarModifierArea Clone() {
      return new ECS6ComponentAvatarModifierArea(this);
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 1;
    private global::Decentraland.Sdk.Ecs6.Area area_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.Area Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "modifiers" field.</summary>
    public const int ModifiersFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_modifiers_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> modifiers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Modifiers {
      get { return modifiers_; }
    }

    /// <summary>Field number for the "exclude_ids" field.</summary>
    public const int ExcludeIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_excludeIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> excludeIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ExcludeIds {
      get { return excludeIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentAvatarModifierArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentAvatarModifierArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Area, other.Area)) return false;
      if(!modifiers_.Equals(other.modifiers_)) return false;
      if(!excludeIds_.Equals(other.excludeIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (area_ != null) hash ^= Area.GetHashCode();
      hash ^= modifiers_.GetHashCode();
      hash ^= excludeIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (area_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Area);
      }
      modifiers_.WriteTo(output, _repeated_modifiers_codec);
      excludeIds_.WriteTo(output, _repeated_excludeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (area_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Area);
      }
      modifiers_.WriteTo(ref output, _repeated_modifiers_codec);
      excludeIds_.WriteTo(ref output, _repeated_excludeIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (area_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Area);
      }
      size += modifiers_.CalculateSize(_repeated_modifiers_codec);
      size += excludeIds_.CalculateSize(_repeated_excludeIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentAvatarModifierArea other) {
      if (other == null) {
        return;
      }
      if (other.area_ != null) {
        if (area_ == null) {
          Area = new global::Decentraland.Sdk.Ecs6.Area();
        }
        Area.MergeFrom(other.Area);
      }
      modifiers_.Add(other.modifiers_);
      excludeIds_.Add(other.excludeIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (area_ == null) {
              Area = new global::Decentraland.Sdk.Ecs6.Area();
            }
            input.ReadMessage(Area);
            break;
          }
          case 18: {
            modifiers_.AddEntriesFrom(input, _repeated_modifiers_codec);
            break;
          }
          case 26: {
            excludeIds_.AddEntriesFrom(input, _repeated_excludeIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (area_ == null) {
              Area = new global::Decentraland.Sdk.Ecs6.Area();
            }
            input.ReadMessage(Area);
            break;
          }
          case 18: {
            modifiers_.AddEntriesFrom(ref input, _repeated_modifiers_codec);
            break;
          }
          case 26: {
            excludeIds_.AddEntriesFrom(ref input, _repeated_excludeIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.TRANSFORM
  /// </summary>
  public sealed partial class ECS6ComponentTransform : pb::IMessage<ECS6ComponentTransform>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentTransform> _parser = new pb::MessageParser<ECS6ComponentTransform>(() => new ECS6ComponentTransform());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentTransform> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTransform() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTransform(ECS6ComponentTransform other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      scale_ = other.scale_ != null ? other.scale_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTransform Clone() {
      return new ECS6ComponentTransform(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Decentraland.Common.Vector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 2;
    private global::Decentraland.Common.Quaternion rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Quaternion Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 3;
    private global::Decentraland.Common.Vector3 scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Vector3 Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentTransform);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentTransform other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      if (!object.Equals(Scale, other.Scale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (scale_ != null) hash ^= Scale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rotation);
      }
      if (scale_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Rotation);
      }
      if (scale_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (scale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentTransform other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Decentraland.Common.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::Decentraland.Common.Quaternion();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      if (other.scale_ != null) {
        if (scale_ == null) {
          Scale = new global::Decentraland.Common.Vector3();
        }
        Scale.MergeFrom(other.Scale);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Decentraland.Common.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (rotation_ == null) {
              Rotation = new global::Decentraland.Common.Quaternion();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 26: {
            if (scale_ == null) {
              Scale = new global::Decentraland.Common.Vector3();
            }
            input.ReadMessage(Scale);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Decentraland.Common.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (rotation_ == null) {
              Rotation = new global::Decentraland.Common.Quaternion();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 26: {
            if (scale_ == null) {
              Scale = new global::Decentraland.Common.Vector3();
            }
            input.ReadMessage(Scale);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.AVATAR_ATTACH
  /// </summary>
  public sealed partial class ECS6ComponentAttachToAvatar : pb::IMessage<ECS6ComponentAttachToAvatar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentAttachToAvatar> _parser = new pb::MessageParser<ECS6ComponentAttachToAvatar>(() => new ECS6ComponentAttachToAvatar());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentAttachToAvatar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAttachToAvatar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAttachToAvatar(ECS6ComponentAttachToAvatar other) : this() {
      _hasBits0 = other._hasBits0;
      avatarId_ = other.avatarId_;
      anchorPointId_ = other.anchorPointId_;
      avatarSceneId_ = other.avatarSceneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAttachToAvatar Clone() {
      return new ECS6ComponentAttachToAvatar(this);
    }

    /// <summary>Field number for the "avatar_id" field.</summary>
    public const int AvatarIdFieldNumber = 1;
    private string avatarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarId {
      get { return avatarId_ ?? ""; }
      set {
        avatarId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "avatar_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvatarId {
      get { return avatarId_ != null; }
    }
    /// <summary>Clears the value of the "avatar_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvatarId() {
      avatarId_ = null;
    }

    /// <summary>Field number for the "anchor_point_id" field.</summary>
    public const int AnchorPointIdFieldNumber = 2;
    private global::Decentraland.Sdk.Ecs6.ECS6ComponentAttachToAvatar.Types.AttachToAvatarAnchorPointId anchorPointId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.ECS6ComponentAttachToAvatar.Types.AttachToAvatarAnchorPointId AnchorPointId {
      get { if ((_hasBits0 & 1) != 0) { return anchorPointId_; } else { return global::Decentraland.Sdk.Ecs6.ECS6ComponentAttachToAvatar.Types.AttachToAvatarAnchorPointId.AtaapPosition; } }
      set {
        _hasBits0 |= 1;
        anchorPointId_ = value;
      }
    }
    /// <summary>Gets whether the "anchor_point_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnchorPointId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "anchor_point_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnchorPointId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "avatar_scene_id" field.</summary>
    public const int AvatarSceneIdFieldNumber = 3;
    private string avatarSceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AvatarSceneId {
      get { return avatarSceneId_ ?? ""; }
      set {
        avatarSceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "avatar_scene_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvatarSceneId {
      get { return avatarSceneId_ != null; }
    }
    /// <summary>Clears the value of the "avatar_scene_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvatarSceneId() {
      avatarSceneId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentAttachToAvatar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentAttachToAvatar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvatarId != other.AvatarId) return false;
      if (AnchorPointId != other.AnchorPointId) return false;
      if (AvatarSceneId != other.AvatarSceneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAvatarId) hash ^= AvatarId.GetHashCode();
      if (HasAnchorPointId) hash ^= AnchorPointId.GetHashCode();
      if (HasAvatarSceneId) hash ^= AvatarSceneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAvatarId) {
        output.WriteRawTag(10);
        output.WriteString(AvatarId);
      }
      if (HasAnchorPointId) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AnchorPointId);
      }
      if (HasAvatarSceneId) {
        output.WriteRawTag(26);
        output.WriteString(AvatarSceneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAvatarId) {
        output.WriteRawTag(10);
        output.WriteString(AvatarId);
      }
      if (HasAnchorPointId) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AnchorPointId);
      }
      if (HasAvatarSceneId) {
        output.WriteRawTag(26);
        output.WriteString(AvatarSceneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAvatarId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarId);
      }
      if (HasAnchorPointId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AnchorPointId);
      }
      if (HasAvatarSceneId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarSceneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentAttachToAvatar other) {
      if (other == null) {
        return;
      }
      if (other.HasAvatarId) {
        AvatarId = other.AvatarId;
      }
      if (other.HasAnchorPointId) {
        AnchorPointId = other.AnchorPointId;
      }
      if (other.HasAvatarSceneId) {
        AvatarSceneId = other.AvatarSceneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AvatarId = input.ReadString();
            break;
          }
          case 16: {
            AnchorPointId = (global::Decentraland.Sdk.Ecs6.ECS6ComponentAttachToAvatar.Types.AttachToAvatarAnchorPointId) input.ReadEnum();
            break;
          }
          case 26: {
            AvatarSceneId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AvatarId = input.ReadString();
            break;
          }
          case 16: {
            AnchorPointId = (global::Decentraland.Sdk.Ecs6.ECS6ComponentAttachToAvatar.Types.AttachToAvatarAnchorPointId) input.ReadEnum();
            break;
          }
          case 26: {
            AvatarSceneId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ECS6ComponentAttachToAvatar message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum AttachToAvatarAnchorPointId {
        [pbr::OriginalName("ATAAP_POSITION")] AtaapPosition = 0,
        [pbr::OriginalName("ATAAP_NAME_TAG")] AtaapNameTag = 1,
        [pbr::OriginalName("ATAAP_LEFT_HAND")] AtaapLeftHand = 2,
        [pbr::OriginalName("ATAAP_RIGHT_HAND")] AtaapRightHand = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// CLASS_ID.BILLBOARD
  /// </summary>
  public sealed partial class ECS6ComponentBillboard : pb::IMessage<ECS6ComponentBillboard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentBillboard> _parser = new pb::MessageParser<ECS6ComponentBillboard>(() => new ECS6ComponentBillboard());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentBillboard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBillboard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBillboard(ECS6ComponentBillboard other) : this() {
      _hasBits0 = other._hasBits0;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBillboard Clone() {
      return new ECS6ComponentBillboard(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private bool x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool X {
      get { if ((_hasBits0 & 1) != 0) { return x_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        x_ = value;
      }
    }
    /// <summary>Gets whether the "x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private bool y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Y {
      get { if ((_hasBits0 & 2) != 0) { return y_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        y_ = value;
      }
    }
    /// <summary>Gets whether the "y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private bool z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Z {
      get { if ((_hasBits0 & 4) != 0) { return z_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        z_ = value;
      }
    }
    /// <summary>Gets whether the "z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearZ() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentBillboard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentBillboard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasX) hash ^= X.GetHashCode();
      if (HasY) hash ^= Y.GetHashCode();
      if (HasZ) hash ^= Z.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasX) {
        output.WriteRawTag(8);
        output.WriteBool(X);
      }
      if (HasY) {
        output.WriteRawTag(16);
        output.WriteBool(Y);
      }
      if (HasZ) {
        output.WriteRawTag(24);
        output.WriteBool(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasX) {
        output.WriteRawTag(8);
        output.WriteBool(X);
      }
      if (HasY) {
        output.WriteRawTag(16);
        output.WriteBool(Y);
      }
      if (HasZ) {
        output.WriteRawTag(24);
        output.WriteBool(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasX) {
        size += 1 + 1;
      }
      if (HasY) {
        size += 1 + 1;
      }
      if (HasZ) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentBillboard other) {
      if (other == null) {
        return;
      }
      if (other.HasX) {
        X = other.X;
      }
      if (other.HasY) {
        Y = other.Y;
      }
      if (other.HasZ) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadBool();
            break;
          }
          case 16: {
            Y = input.ReadBool();
            break;
          }
          case 24: {
            Z = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            X = input.ReadBool();
            break;
          }
          case 16: {
            Y = input.ReadBool();
            break;
          }
          case 24: {
            Z = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.BOX_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentBoxShape : pb::IMessage<ECS6ComponentBoxShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentBoxShape> _parser = new pb::MessageParser<ECS6ComponentBoxShape>(() => new ECS6ComponentBoxShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentBoxShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBoxShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBoxShape(ECS6ComponentBoxShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      uvs_ = other.uvs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBoxShape Clone() {
      return new ECS6ComponentBoxShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "uvs" field.</summary>
    public const int UvsFieldNumber = 4;
    private static readonly pb::FieldCodec<float> _repeated_uvs_codec
        = pb::FieldCodec.ForFloat(34);
    private readonly pbc::RepeatedField<float> uvs_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<float> Uvs {
      get { return uvs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentBoxShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentBoxShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      if(!uvs_.Equals(other.uvs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      hash ^= uvs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      uvs_.WriteTo(output, _repeated_uvs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      uvs_.WriteTo(ref output, _repeated_uvs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      size += uvs_.CalculateSize(_repeated_uvs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentBoxShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      uvs_.Add(other.uvs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34:
          case 37: {
            uvs_.AddEntriesFrom(input, _repeated_uvs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34:
          case 37: {
            uvs_.AddEntriesFrom(ref input, _repeated_uvs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.SPHERE_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentSphereShape : pb::IMessage<ECS6ComponentSphereShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentSphereShape> _parser = new pb::MessageParser<ECS6ComponentSphereShape>(() => new ECS6ComponentSphereShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentSphereShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentSphereShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentSphereShape(ECS6ComponentSphereShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentSphereShape Clone() {
      return new ECS6ComponentSphereShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentSphereShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentSphereShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentSphereShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.CIRCLE_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentCircleShape : pb::IMessage<ECS6ComponentCircleShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentCircleShape> _parser = new pb::MessageParser<ECS6ComponentCircleShape>(() => new ECS6ComponentCircleShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentCircleShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCircleShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCircleShape(ECS6ComponentCircleShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      segments_ = other.segments_;
      arc_ = other.arc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCircleShape Clone() {
      return new ECS6ComponentCircleShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "segments" field.</summary>
    public const int SegmentsFieldNumber = 4;
    private float segments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Segments {
      get { if ((_hasBits0 & 8) != 0) { return segments_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        segments_ = value;
      }
    }
    /// <summary>Gets whether the "segments" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegments {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "segments" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegments() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "arc" field.</summary>
    public const int ArcFieldNumber = 5;
    private float arc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Arc {
      get { if ((_hasBits0 & 16) != 0) { return arc_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        arc_ = value;
      }
    }
    /// <summary>Gets whether the "arc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArc {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "arc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearArc() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentCircleShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentCircleShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Segments, other.Segments)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Arc, other.Arc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasSegments) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Segments);
      if (HasArc) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Arc);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasSegments) {
        output.WriteRawTag(37);
        output.WriteFloat(Segments);
      }
      if (HasArc) {
        output.WriteRawTag(45);
        output.WriteFloat(Arc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasSegments) {
        output.WriteRawTag(37);
        output.WriteFloat(Segments);
      }
      if (HasArc) {
        output.WriteRawTag(45);
        output.WriteFloat(Arc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasSegments) {
        size += 1 + 4;
      }
      if (HasArc) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentCircleShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasSegments) {
        Segments = other.Segments;
      }
      if (other.HasArc) {
        Arc = other.Arc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 37: {
            Segments = input.ReadFloat();
            break;
          }
          case 45: {
            Arc = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 37: {
            Segments = input.ReadFloat();
            break;
          }
          case 45: {
            Arc = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.PLANE_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentPlaneShape : pb::IMessage<ECS6ComponentPlaneShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentPlaneShape> _parser = new pb::MessageParser<ECS6ComponentPlaneShape>(() => new ECS6ComponentPlaneShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentPlaneShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentPlaneShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentPlaneShape(ECS6ComponentPlaneShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      uvs_ = other.uvs_.Clone();
      width_ = other.width_;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentPlaneShape Clone() {
      return new ECS6ComponentPlaneShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "uvs" field.</summary>
    public const int UvsFieldNumber = 4;
    private static readonly pb::FieldCodec<float> _repeated_uvs_codec
        = pb::FieldCodec.ForFloat(34);
    private readonly pbc::RepeatedField<float> uvs_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<float> Uvs {
      get { return uvs_; }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private float width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Width {
      get { if ((_hasBits0 & 8) != 0) { return width_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private float height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Height {
      get { if ((_hasBits0 & 16) != 0) { return height_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentPlaneShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentPlaneShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      if(!uvs_.Equals(other.uvs_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Width, other.Width)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      hash ^= uvs_.GetHashCode();
      if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Width);
      if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      uvs_.WriteTo(output, _repeated_uvs_codec);
      if (HasWidth) {
        output.WriteRawTag(53);
        output.WriteFloat(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(61);
        output.WriteFloat(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      uvs_.WriteTo(ref output, _repeated_uvs_codec);
      if (HasWidth) {
        output.WriteRawTag(53);
        output.WriteFloat(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(61);
        output.WriteFloat(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      size += uvs_.CalculateSize(_repeated_uvs_codec);
      if (HasWidth) {
        size += 1 + 4;
      }
      if (HasHeight) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentPlaneShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      uvs_.Add(other.uvs_);
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34:
          case 37: {
            uvs_.AddEntriesFrom(input, _repeated_uvs_codec);
            break;
          }
          case 53: {
            Width = input.ReadFloat();
            break;
          }
          case 61: {
            Height = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34:
          case 37: {
            uvs_.AddEntriesFrom(ref input, _repeated_uvs_codec);
            break;
          }
          case 53: {
            Width = input.ReadFloat();
            break;
          }
          case 61: {
            Height = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.CONE_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentConeShape : pb::IMessage<ECS6ComponentConeShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentConeShape> _parser = new pb::MessageParser<ECS6ComponentConeShape>(() => new ECS6ComponentConeShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentConeShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentConeShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentConeShape(ECS6ComponentConeShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      radiusTop_ = other.radiusTop_;
      radiusBottom_ = other.radiusBottom_;
      segmentsHeight_ = other.segmentsHeight_;
      segmentsRadial_ = other.segmentsRadial_;
      openEnded_ = other.openEnded_;
      radius_ = other.radius_;
      arc_ = other.arc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentConeShape Clone() {
      return new ECS6ComponentConeShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "radius_top" field.</summary>
    public const int RadiusTopFieldNumber = 4;
    private float radiusTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RadiusTop {
      get { if ((_hasBits0 & 8) != 0) { return radiusTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        radiusTop_ = value;
      }
    }
    /// <summary>Gets whether the "radius_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadiusTop {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "radius_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadiusTop() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "radius_bottom" field.</summary>
    public const int RadiusBottomFieldNumber = 5;
    private float radiusBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RadiusBottom {
      get { if ((_hasBits0 & 16) != 0) { return radiusBottom_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        radiusBottom_ = value;
      }
    }
    /// <summary>Gets whether the "radius_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadiusBottom {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "radius_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadiusBottom() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "segments_height" field.</summary>
    public const int SegmentsHeightFieldNumber = 6;
    private float segmentsHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SegmentsHeight {
      get { if ((_hasBits0 & 32) != 0) { return segmentsHeight_; } else { return 0F; } }
      set {
        _hasBits0 |= 32;
        segmentsHeight_ = value;
      }
    }
    /// <summary>Gets whether the "segments_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentsHeight {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "segments_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentsHeight() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "segments_radial" field.</summary>
    public const int SegmentsRadialFieldNumber = 7;
    private float segmentsRadial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SegmentsRadial {
      get { if ((_hasBits0 & 64) != 0) { return segmentsRadial_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        segmentsRadial_ = value;
      }
    }
    /// <summary>Gets whether the "segments_radial" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentsRadial {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "segments_radial" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentsRadial() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "open_ended" field.</summary>
    public const int OpenEndedFieldNumber = 8;
    private bool openEnded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OpenEnded {
      get { if ((_hasBits0 & 128) != 0) { return openEnded_; } else { return false; } }
      set {
        _hasBits0 |= 128;
        openEnded_ = value;
      }
    }
    /// <summary>Gets whether the "open_ended" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpenEnded {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "open_ended" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpenEnded() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 9;
    private float radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Radius {
      get { if ((_hasBits0 & 256) != 0) { return radius_; } else { return 0F; } }
      set {
        _hasBits0 |= 256;
        radius_ = value;
      }
    }
    /// <summary>Gets whether the "radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadius {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadius() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "arc" field.</summary>
    public const int ArcFieldNumber = 10;
    private float arc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Arc {
      get { if ((_hasBits0 & 512) != 0) { return arc_; } else { return 0F; } }
      set {
        _hasBits0 |= 512;
        arc_ = value;
      }
    }
    /// <summary>Gets whether the "arc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArc {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "arc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearArc() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentConeShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentConeShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RadiusTop, other.RadiusTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RadiusBottom, other.RadiusBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SegmentsHeight, other.SegmentsHeight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SegmentsRadial, other.SegmentsRadial)) return false;
      if (OpenEnded != other.OpenEnded) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Arc, other.Arc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasRadiusTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RadiusTop);
      if (HasRadiusBottom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RadiusBottom);
      if (HasSegmentsHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SegmentsHeight);
      if (HasSegmentsRadial) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SegmentsRadial);
      if (HasOpenEnded) hash ^= OpenEnded.GetHashCode();
      if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (HasArc) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Arc);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasRadiusTop) {
        output.WriteRawTag(37);
        output.WriteFloat(RadiusTop);
      }
      if (HasRadiusBottom) {
        output.WriteRawTag(45);
        output.WriteFloat(RadiusBottom);
      }
      if (HasSegmentsHeight) {
        output.WriteRawTag(53);
        output.WriteFloat(SegmentsHeight);
      }
      if (HasSegmentsRadial) {
        output.WriteRawTag(61);
        output.WriteFloat(SegmentsRadial);
      }
      if (HasOpenEnded) {
        output.WriteRawTag(64);
        output.WriteBool(OpenEnded);
      }
      if (HasRadius) {
        output.WriteRawTag(77);
        output.WriteFloat(Radius);
      }
      if (HasArc) {
        output.WriteRawTag(85);
        output.WriteFloat(Arc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasRadiusTop) {
        output.WriteRawTag(37);
        output.WriteFloat(RadiusTop);
      }
      if (HasRadiusBottom) {
        output.WriteRawTag(45);
        output.WriteFloat(RadiusBottom);
      }
      if (HasSegmentsHeight) {
        output.WriteRawTag(53);
        output.WriteFloat(SegmentsHeight);
      }
      if (HasSegmentsRadial) {
        output.WriteRawTag(61);
        output.WriteFloat(SegmentsRadial);
      }
      if (HasOpenEnded) {
        output.WriteRawTag(64);
        output.WriteBool(OpenEnded);
      }
      if (HasRadius) {
        output.WriteRawTag(77);
        output.WriteFloat(Radius);
      }
      if (HasArc) {
        output.WriteRawTag(85);
        output.WriteFloat(Arc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasRadiusTop) {
        size += 1 + 4;
      }
      if (HasRadiusBottom) {
        size += 1 + 4;
      }
      if (HasSegmentsHeight) {
        size += 1 + 4;
      }
      if (HasSegmentsRadial) {
        size += 1 + 4;
      }
      if (HasOpenEnded) {
        size += 1 + 1;
      }
      if (HasRadius) {
        size += 1 + 4;
      }
      if (HasArc) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentConeShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasRadiusTop) {
        RadiusTop = other.RadiusTop;
      }
      if (other.HasRadiusBottom) {
        RadiusBottom = other.RadiusBottom;
      }
      if (other.HasSegmentsHeight) {
        SegmentsHeight = other.SegmentsHeight;
      }
      if (other.HasSegmentsRadial) {
        SegmentsRadial = other.SegmentsRadial;
      }
      if (other.HasOpenEnded) {
        OpenEnded = other.OpenEnded;
      }
      if (other.HasRadius) {
        Radius = other.Radius;
      }
      if (other.HasArc) {
        Arc = other.Arc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 37: {
            RadiusTop = input.ReadFloat();
            break;
          }
          case 45: {
            RadiusBottom = input.ReadFloat();
            break;
          }
          case 53: {
            SegmentsHeight = input.ReadFloat();
            break;
          }
          case 61: {
            SegmentsRadial = input.ReadFloat();
            break;
          }
          case 64: {
            OpenEnded = input.ReadBool();
            break;
          }
          case 77: {
            Radius = input.ReadFloat();
            break;
          }
          case 85: {
            Arc = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 37: {
            RadiusTop = input.ReadFloat();
            break;
          }
          case 45: {
            RadiusBottom = input.ReadFloat();
            break;
          }
          case 53: {
            SegmentsHeight = input.ReadFloat();
            break;
          }
          case 61: {
            SegmentsRadial = input.ReadFloat();
            break;
          }
          case 64: {
            OpenEnded = input.ReadBool();
            break;
          }
          case 77: {
            Radius = input.ReadFloat();
            break;
          }
          case 85: {
            Arc = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.CYLINDER_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentCylinderShape : pb::IMessage<ECS6ComponentCylinderShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentCylinderShape> _parser = new pb::MessageParser<ECS6ComponentCylinderShape>(() => new ECS6ComponentCylinderShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentCylinderShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCylinderShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCylinderShape(ECS6ComponentCylinderShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      radiusTop_ = other.radiusTop_;
      radiusBottom_ = other.radiusBottom_;
      segmentsHeight_ = other.segmentsHeight_;
      segmentsRadial_ = other.segmentsRadial_;
      openEnded_ = other.openEnded_;
      radius_ = other.radius_;
      arc_ = other.arc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCylinderShape Clone() {
      return new ECS6ComponentCylinderShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "radius_top" field.</summary>
    public const int RadiusTopFieldNumber = 4;
    private float radiusTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RadiusTop {
      get { if ((_hasBits0 & 8) != 0) { return radiusTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        radiusTop_ = value;
      }
    }
    /// <summary>Gets whether the "radius_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadiusTop {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "radius_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadiusTop() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "radius_bottom" field.</summary>
    public const int RadiusBottomFieldNumber = 5;
    private float radiusBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RadiusBottom {
      get { if ((_hasBits0 & 16) != 0) { return radiusBottom_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        radiusBottom_ = value;
      }
    }
    /// <summary>Gets whether the "radius_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadiusBottom {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "radius_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadiusBottom() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "segments_height" field.</summary>
    public const int SegmentsHeightFieldNumber = 6;
    private float segmentsHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SegmentsHeight {
      get { if ((_hasBits0 & 32) != 0) { return segmentsHeight_; } else { return 0F; } }
      set {
        _hasBits0 |= 32;
        segmentsHeight_ = value;
      }
    }
    /// <summary>Gets whether the "segments_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentsHeight {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "segments_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentsHeight() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "segments_radial" field.</summary>
    public const int SegmentsRadialFieldNumber = 7;
    private float segmentsRadial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SegmentsRadial {
      get { if ((_hasBits0 & 64) != 0) { return segmentsRadial_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        segmentsRadial_ = value;
      }
    }
    /// <summary>Gets whether the "segments_radial" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSegmentsRadial {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "segments_radial" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSegmentsRadial() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "open_ended" field.</summary>
    public const int OpenEndedFieldNumber = 8;
    private bool openEnded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OpenEnded {
      get { if ((_hasBits0 & 128) != 0) { return openEnded_; } else { return false; } }
      set {
        _hasBits0 |= 128;
        openEnded_ = value;
      }
    }
    /// <summary>Gets whether the "open_ended" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpenEnded {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "open_ended" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpenEnded() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 9;
    private float radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Radius {
      get { if ((_hasBits0 & 256) != 0) { return radius_; } else { return 0F; } }
      set {
        _hasBits0 |= 256;
        radius_ = value;
      }
    }
    /// <summary>Gets whether the "radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadius {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadius() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "arc" field.</summary>
    public const int ArcFieldNumber = 10;
    private float arc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Arc {
      get { if ((_hasBits0 & 512) != 0) { return arc_; } else { return 0F; } }
      set {
        _hasBits0 |= 512;
        arc_ = value;
      }
    }
    /// <summary>Gets whether the "arc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasArc {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "arc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearArc() {
      _hasBits0 &= ~512;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentCylinderShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentCylinderShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RadiusTop, other.RadiusTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RadiusBottom, other.RadiusBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SegmentsHeight, other.SegmentsHeight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SegmentsRadial, other.SegmentsRadial)) return false;
      if (OpenEnded != other.OpenEnded) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Arc, other.Arc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasRadiusTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RadiusTop);
      if (HasRadiusBottom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RadiusBottom);
      if (HasSegmentsHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SegmentsHeight);
      if (HasSegmentsRadial) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SegmentsRadial);
      if (HasOpenEnded) hash ^= OpenEnded.GetHashCode();
      if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (HasArc) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Arc);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasRadiusTop) {
        output.WriteRawTag(37);
        output.WriteFloat(RadiusTop);
      }
      if (HasRadiusBottom) {
        output.WriteRawTag(45);
        output.WriteFloat(RadiusBottom);
      }
      if (HasSegmentsHeight) {
        output.WriteRawTag(53);
        output.WriteFloat(SegmentsHeight);
      }
      if (HasSegmentsRadial) {
        output.WriteRawTag(61);
        output.WriteFloat(SegmentsRadial);
      }
      if (HasOpenEnded) {
        output.WriteRawTag(64);
        output.WriteBool(OpenEnded);
      }
      if (HasRadius) {
        output.WriteRawTag(77);
        output.WriteFloat(Radius);
      }
      if (HasArc) {
        output.WriteRawTag(85);
        output.WriteFloat(Arc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasRadiusTop) {
        output.WriteRawTag(37);
        output.WriteFloat(RadiusTop);
      }
      if (HasRadiusBottom) {
        output.WriteRawTag(45);
        output.WriteFloat(RadiusBottom);
      }
      if (HasSegmentsHeight) {
        output.WriteRawTag(53);
        output.WriteFloat(SegmentsHeight);
      }
      if (HasSegmentsRadial) {
        output.WriteRawTag(61);
        output.WriteFloat(SegmentsRadial);
      }
      if (HasOpenEnded) {
        output.WriteRawTag(64);
        output.WriteBool(OpenEnded);
      }
      if (HasRadius) {
        output.WriteRawTag(77);
        output.WriteFloat(Radius);
      }
      if (HasArc) {
        output.WriteRawTag(85);
        output.WriteFloat(Arc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasRadiusTop) {
        size += 1 + 4;
      }
      if (HasRadiusBottom) {
        size += 1 + 4;
      }
      if (HasSegmentsHeight) {
        size += 1 + 4;
      }
      if (HasSegmentsRadial) {
        size += 1 + 4;
      }
      if (HasOpenEnded) {
        size += 1 + 1;
      }
      if (HasRadius) {
        size += 1 + 4;
      }
      if (HasArc) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentCylinderShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasRadiusTop) {
        RadiusTop = other.RadiusTop;
      }
      if (other.HasRadiusBottom) {
        RadiusBottom = other.RadiusBottom;
      }
      if (other.HasSegmentsHeight) {
        SegmentsHeight = other.SegmentsHeight;
      }
      if (other.HasSegmentsRadial) {
        SegmentsRadial = other.SegmentsRadial;
      }
      if (other.HasOpenEnded) {
        OpenEnded = other.OpenEnded;
      }
      if (other.HasRadius) {
        Radius = other.Radius;
      }
      if (other.HasArc) {
        Arc = other.Arc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 37: {
            RadiusTop = input.ReadFloat();
            break;
          }
          case 45: {
            RadiusBottom = input.ReadFloat();
            break;
          }
          case 53: {
            SegmentsHeight = input.ReadFloat();
            break;
          }
          case 61: {
            SegmentsRadial = input.ReadFloat();
            break;
          }
          case 64: {
            OpenEnded = input.ReadBool();
            break;
          }
          case 77: {
            Radius = input.ReadFloat();
            break;
          }
          case 85: {
            Arc = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 37: {
            RadiusTop = input.ReadFloat();
            break;
          }
          case 45: {
            RadiusBottom = input.ReadFloat();
            break;
          }
          case 53: {
            SegmentsHeight = input.ReadFloat();
            break;
          }
          case 61: {
            SegmentsRadial = input.ReadFloat();
            break;
          }
          case 64: {
            OpenEnded = input.ReadBool();
            break;
          }
          case 77: {
            Radius = input.ReadFloat();
            break;
          }
          case 85: {
            Arc = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.GLTF_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentGltfShape : pb::IMessage<ECS6ComponentGltfShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentGltfShape> _parser = new pb::MessageParser<ECS6ComponentGltfShape>(() => new ECS6ComponentGltfShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentGltfShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentGltfShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentGltfShape(ECS6ComponentGltfShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      src_ = other.src_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentGltfShape Clone() {
      return new ECS6ComponentGltfShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 4;
    private string src_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Src {
      get { return src_ ?? ""; }
      set {
        src_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "src" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSrc {
      get { return src_ != null; }
    }
    /// <summary>Clears the value of the "src" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSrc() {
      src_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentGltfShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentGltfShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      if (Src != other.Src) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasSrc) hash ^= Src.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasSrc) {
        output.WriteRawTag(34);
        output.WriteString(Src);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasSrc) {
        output.WriteRawTag(34);
        output.WriteString(Src);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasSrc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Src);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentGltfShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasSrc) {
        Src = other.Src;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34: {
            Src = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34: {
            Src = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.NFT_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentNftShape : pb::IMessage<ECS6ComponentNftShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentNftShape> _parser = new pb::MessageParser<ECS6ComponentNftShape>(() => new ECS6ComponentNftShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentNftShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentNftShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentNftShape(ECS6ComponentNftShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      src_ = other.src_;
      style_ = other.style_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentNftShape Clone() {
      return new ECS6ComponentNftShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 4;
    private string src_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Src {
      get { return src_ ?? ""; }
      set {
        src_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "src" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSrc {
      get { return src_ != null; }
    }
    /// <summary>Clears the value of the "src" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSrc() {
      src_ = null;
    }

    /// <summary>Field number for the "style" field.</summary>
    public const int StyleFieldNumber = 5;
    private global::Decentraland.Sdk.Ecs6.ECS6ComponentNftShape.Types.PictureFrameStyle style_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.ECS6ComponentNftShape.Types.PictureFrameStyle Style {
      get { if ((_hasBits0 & 8) != 0) { return style_; } else { return global::Decentraland.Sdk.Ecs6.ECS6ComponentNftShape.Types.PictureFrameStyle.PfsClassic; } }
      set {
        _hasBits0 |= 8;
        style_ = value;
      }
    }
    /// <summary>Gets whether the "style" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStyle {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "style" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStyle() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 6;
    private global::Decentraland.Common.Color3 color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color3 Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentNftShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentNftShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      if (Src != other.Src) return false;
      if (Style != other.Style) return false;
      if (!object.Equals(Color, other.Color)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasSrc) hash ^= Src.GetHashCode();
      if (HasStyle) hash ^= Style.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasSrc) {
        output.WriteRawTag(34);
        output.WriteString(Src);
      }
      if (HasStyle) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Style);
      }
      if (color_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasSrc) {
        output.WriteRawTag(34);
        output.WriteString(Src);
      }
      if (HasStyle) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Style);
      }
      if (color_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasSrc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Src);
      }
      if (HasStyle) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Style);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentNftShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasSrc) {
        Src = other.Src;
      }
      if (other.HasStyle) {
        Style = other.Style;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Decentraland.Common.Color3();
        }
        Color.MergeFrom(other.Color);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34: {
            Src = input.ReadString();
            break;
          }
          case 40: {
            Style = (global::Decentraland.Sdk.Ecs6.ECS6ComponentNftShape.Types.PictureFrameStyle) input.ReadEnum();
            break;
          }
          case 50: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(Color);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34: {
            Src = input.ReadString();
            break;
          }
          case 40: {
            Style = (global::Decentraland.Sdk.Ecs6.ECS6ComponentNftShape.Types.PictureFrameStyle) input.ReadEnum();
            break;
          }
          case 50: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(Color);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ECS6ComponentNftShape message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PictureFrameStyle {
        [pbr::OriginalName("PFS_CLASSIC")] PfsClassic = 0,
        [pbr::OriginalName("PFS_BAROQUE_ORNAMENT")] PfsBaroqueOrnament = 1,
        [pbr::OriginalName("PFS_DIAMOND_ORNAMENT")] PfsDiamondOrnament = 2,
        [pbr::OriginalName("PFS_MINIMAL_WIDE")] PfsMinimalWide = 3,
        [pbr::OriginalName("PFS_MINIMAL_GREY")] PfsMinimalGrey = 4,
        [pbr::OriginalName("PFS_BLOCKY")] PfsBlocky = 5,
        [pbr::OriginalName("PFS_GOLD_EDGES")] PfsGoldEdges = 6,
        [pbr::OriginalName("PFS_GOLD_CARVED")] PfsGoldCarved = 7,
        [pbr::OriginalName("PFS_GOLD_WIDE")] PfsGoldWide = 8,
        [pbr::OriginalName("PFS_GOLD_ROUNDED")] PfsGoldRounded = 9,
        [pbr::OriginalName("PFS_METAL_MEDIUM")] PfsMetalMedium = 10,
        [pbr::OriginalName("PFS_METAL_WIDE")] PfsMetalWide = 11,
        [pbr::OriginalName("PFS_METAL_SLIM")] PfsMetalSlim = 12,
        [pbr::OriginalName("PFS_METAL_ROUNDED")] PfsMetalRounded = 13,
        [pbr::OriginalName("PFS_PINS")] PfsPins = 14,
        [pbr::OriginalName("PFS_MINIMAL_BLACK")] PfsMinimalBlack = 15,
        [pbr::OriginalName("PFS_MINIMAL_WHITE")] PfsMinimalWhite = 16,
        [pbr::OriginalName("PFS_TAPE")] PfsTape = 17,
        [pbr::OriginalName("PFS_WOOD_SLIM")] PfsWoodSlim = 18,
        [pbr::OriginalName("PFS_WOOD_WIDE")] PfsWoodWide = 19,
        [pbr::OriginalName("PFS_WOOD_TWIGS")] PfsWoodTwigs = 20,
        [pbr::OriginalName("PFS_CANVAS")] PfsCanvas = 21,
        [pbr::OriginalName("PFS_NONE")] PfsNone = 22,
      }

    }
    #endregion

  }

  /// <summary>
  /// CLASS_ID.TEXTURE
  /// </summary>
  public sealed partial class ECS6ComponentTexture : pb::IMessage<ECS6ComponentTexture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentTexture> _parser = new pb::MessageParser<ECS6ComponentTexture>(() => new ECS6ComponentTexture());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentTexture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTexture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTexture(ECS6ComponentTexture other) : this() {
      _hasBits0 = other._hasBits0;
      src_ = other.src_;
      samplingMode_ = other.samplingMode_;
      wrap_ = other.wrap_;
      hasAlpha_ = other.hasAlpha_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTexture Clone() {
      return new ECS6ComponentTexture(this);
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 1;
    private string src_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Src {
      get { return src_ ?? ""; }
      set {
        src_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "src" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSrc {
      get { return src_ != null; }
    }
    /// <summary>Clears the value of the "src" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSrc() {
      src_ = null;
    }

    /// <summary>Field number for the "sampling_mode" field.</summary>
    public const int SamplingModeFieldNumber = 2;
    private int samplingMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SamplingMode {
      get { if ((_hasBits0 & 1) != 0) { return samplingMode_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        samplingMode_ = value;
      }
    }
    /// <summary>Gets whether the "sampling_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSamplingMode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sampling_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSamplingMode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "wrap" field.</summary>
    public const int WrapFieldNumber = 3;
    private int wrap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Wrap {
      get { if ((_hasBits0 & 2) != 0) { return wrap_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        wrap_ = value;
      }
    }
    /// <summary>Gets whether the "wrap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWrap {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "wrap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWrap() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "has_alpha" field.</summary>
    public const int HasAlphaFieldNumber = 4;
    private bool hasAlpha_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlpha {
      get { if ((_hasBits0 & 4) != 0) { return hasAlpha_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        hasAlpha_ = value;
      }
    }
    /// <summary>Gets whether the "has_alpha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasAlpha {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "has_alpha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasAlpha() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentTexture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentTexture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Src != other.Src) return false;
      if (SamplingMode != other.SamplingMode) return false;
      if (Wrap != other.Wrap) return false;
      if (HasAlpha != other.HasAlpha) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSrc) hash ^= Src.GetHashCode();
      if (HasSamplingMode) hash ^= SamplingMode.GetHashCode();
      if (HasWrap) hash ^= Wrap.GetHashCode();
      if (HasHasAlpha) hash ^= HasAlpha.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSrc) {
        output.WriteRawTag(10);
        output.WriteString(Src);
      }
      if (HasSamplingMode) {
        output.WriteRawTag(16);
        output.WriteInt32(SamplingMode);
      }
      if (HasWrap) {
        output.WriteRawTag(24);
        output.WriteInt32(Wrap);
      }
      if (HasHasAlpha) {
        output.WriteRawTag(32);
        output.WriteBool(HasAlpha);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSrc) {
        output.WriteRawTag(10);
        output.WriteString(Src);
      }
      if (HasSamplingMode) {
        output.WriteRawTag(16);
        output.WriteInt32(SamplingMode);
      }
      if (HasWrap) {
        output.WriteRawTag(24);
        output.WriteInt32(Wrap);
      }
      if (HasHasAlpha) {
        output.WriteRawTag(32);
        output.WriteBool(HasAlpha);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSrc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Src);
      }
      if (HasSamplingMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SamplingMode);
      }
      if (HasWrap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Wrap);
      }
      if (HasHasAlpha) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentTexture other) {
      if (other == null) {
        return;
      }
      if (other.HasSrc) {
        Src = other.Src;
      }
      if (other.HasSamplingMode) {
        SamplingMode = other.SamplingMode;
      }
      if (other.HasWrap) {
        Wrap = other.Wrap;
      }
      if (other.HasHasAlpha) {
        HasAlpha = other.HasAlpha;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Src = input.ReadString();
            break;
          }
          case 16: {
            SamplingMode = input.ReadInt32();
            break;
          }
          case 24: {
            Wrap = input.ReadInt32();
            break;
          }
          case 32: {
            HasAlpha = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Src = input.ReadString();
            break;
          }
          case 16: {
            SamplingMode = input.ReadInt32();
            break;
          }
          case 24: {
            Wrap = input.ReadInt32();
            break;
          }
          case 32: {
            HasAlpha = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.ANIMATION
  /// </summary>
  public sealed partial class ECS6ComponentAnimator : pb::IMessage<ECS6ComponentAnimator>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentAnimator> _parser = new pb::MessageParser<ECS6ComponentAnimator>(() => new ECS6ComponentAnimator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentAnimator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAnimator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAnimator(ECS6ComponentAnimator other) : this() {
      states_ = other.states_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAnimator Clone() {
      return new ECS6ComponentAnimator(this);
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Types.AnimationState> _repeated_states_codec
        = pb::FieldCodec.ForMessage(10, global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Types.AnimationState.Parser);
    private readonly pbc::RepeatedField<global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Types.AnimationState> states_ = new pbc::RepeatedField<global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Types.AnimationState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Types.AnimationState> States {
      get { return states_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentAnimator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentAnimator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!states_.Equals(other.states_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= states_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      states_.WriteTo(output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      states_.WriteTo(ref output, _repeated_states_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += states_.CalculateSize(_repeated_states_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentAnimator other) {
      if (other == null) {
        return;
      }
      states_.Add(other.states_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            states_.AddEntriesFrom(input, _repeated_states_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            states_.AddEntriesFrom(ref input, _repeated_states_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ECS6ComponentAnimator message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class AnimationState : pb::IMessage<AnimationState>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AnimationState> _parser = new pb::MessageParser<AnimationState>(() => new AnimationState());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AnimationState> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Decentraland.Sdk.Ecs6.ECS6ComponentAnimator.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AnimationState() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AnimationState(AnimationState other) : this() {
          _hasBits0 = other._hasBits0;
          clip_ = other.clip_;
          looping_ = other.looping_;
          weight_ = other.weight_;
          playing_ = other.playing_;
          shouldReset_ = other.shouldReset_;
          speed_ = other.speed_;
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AnimationState Clone() {
          return new AnimationState(this);
        }

        /// <summary>Field number for the "clip" field.</summary>
        public const int ClipFieldNumber = 1;
        private string clip_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Clip {
          get { return clip_ ?? ""; }
          set {
            clip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "clip" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasClip {
          get { return clip_ != null; }
        }
        /// <summary>Clears the value of the "clip" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearClip() {
          clip_ = null;
        }

        /// <summary>Field number for the "looping" field.</summary>
        public const int LoopingFieldNumber = 2;
        private bool looping_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Looping {
          get { if ((_hasBits0 & 1) != 0) { return looping_; } else { return false; } }
          set {
            _hasBits0 |= 1;
            looping_ = value;
          }
        }
        /// <summary>Gets whether the "looping" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLooping {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "looping" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLooping() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "weight" field.</summary>
        public const int WeightFieldNumber = 3;
        private float weight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Weight {
          get { if ((_hasBits0 & 2) != 0) { return weight_; } else { return 0F; } }
          set {
            _hasBits0 |= 2;
            weight_ = value;
          }
        }
        /// <summary>Gets whether the "weight" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasWeight {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "weight" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearWeight() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "playing" field.</summary>
        public const int PlayingFieldNumber = 4;
        private bool playing_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Playing {
          get { if ((_hasBits0 & 4) != 0) { return playing_; } else { return false; } }
          set {
            _hasBits0 |= 4;
            playing_ = value;
          }
        }
        /// <summary>Gets whether the "playing" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlaying {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "playing" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlaying() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "should_reset" field.</summary>
        public const int ShouldResetFieldNumber = 5;
        private bool shouldReset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ShouldReset {
          get { if ((_hasBits0 & 8) != 0) { return shouldReset_; } else { return false; } }
          set {
            _hasBits0 |= 8;
            shouldReset_ = value;
          }
        }
        /// <summary>Gets whether the "should_reset" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasShouldReset {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "should_reset" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearShouldReset() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "speed" field.</summary>
        public const int SpeedFieldNumber = 6;
        private float speed_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Speed {
          get { if ((_hasBits0 & 16) != 0) { return speed_; } else { return 0F; } }
          set {
            _hasBits0 |= 16;
            speed_ = value;
          }
        }
        /// <summary>Gets whether the "speed" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSpeed {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "speed" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSpeed() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 7;
        private string name_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? ""; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AnimationState);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AnimationState other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Clip != other.Clip) return false;
          if (Looping != other.Looping) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Weight, other.Weight)) return false;
          if (Playing != other.Playing) return false;
          if (ShouldReset != other.ShouldReset) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasClip) hash ^= Clip.GetHashCode();
          if (HasLooping) hash ^= Looping.GetHashCode();
          if (HasWeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Weight);
          if (HasPlaying) hash ^= Playing.GetHashCode();
          if (HasShouldReset) hash ^= ShouldReset.GetHashCode();
          if (HasSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
          if (HasName) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasClip) {
            output.WriteRawTag(10);
            output.WriteString(Clip);
          }
          if (HasLooping) {
            output.WriteRawTag(16);
            output.WriteBool(Looping);
          }
          if (HasWeight) {
            output.WriteRawTag(29);
            output.WriteFloat(Weight);
          }
          if (HasPlaying) {
            output.WriteRawTag(32);
            output.WriteBool(Playing);
          }
          if (HasShouldReset) {
            output.WriteRawTag(40);
            output.WriteBool(ShouldReset);
          }
          if (HasSpeed) {
            output.WriteRawTag(53);
            output.WriteFloat(Speed);
          }
          if (HasName) {
            output.WriteRawTag(58);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasClip) {
            output.WriteRawTag(10);
            output.WriteString(Clip);
          }
          if (HasLooping) {
            output.WriteRawTag(16);
            output.WriteBool(Looping);
          }
          if (HasWeight) {
            output.WriteRawTag(29);
            output.WriteFloat(Weight);
          }
          if (HasPlaying) {
            output.WriteRawTag(32);
            output.WriteBool(Playing);
          }
          if (HasShouldReset) {
            output.WriteRawTag(40);
            output.WriteBool(ShouldReset);
          }
          if (HasSpeed) {
            output.WriteRawTag(53);
            output.WriteFloat(Speed);
          }
          if (HasName) {
            output.WriteRawTag(58);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasClip) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Clip);
          }
          if (HasLooping) {
            size += 1 + 1;
          }
          if (HasWeight) {
            size += 1 + 4;
          }
          if (HasPlaying) {
            size += 1 + 1;
          }
          if (HasShouldReset) {
            size += 1 + 1;
          }
          if (HasSpeed) {
            size += 1 + 4;
          }
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AnimationState other) {
          if (other == null) {
            return;
          }
          if (other.HasClip) {
            Clip = other.Clip;
          }
          if (other.HasLooping) {
            Looping = other.Looping;
          }
          if (other.HasWeight) {
            Weight = other.Weight;
          }
          if (other.HasPlaying) {
            Playing = other.Playing;
          }
          if (other.HasShouldReset) {
            ShouldReset = other.ShouldReset;
          }
          if (other.HasSpeed) {
            Speed = other.Speed;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Clip = input.ReadString();
                break;
              }
              case 16: {
                Looping = input.ReadBool();
                break;
              }
              case 29: {
                Weight = input.ReadFloat();
                break;
              }
              case 32: {
                Playing = input.ReadBool();
                break;
              }
              case 40: {
                ShouldReset = input.ReadBool();
                break;
              }
              case 53: {
                Speed = input.ReadFloat();
                break;
              }
              case 58: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Clip = input.ReadString();
                break;
              }
              case 16: {
                Looping = input.ReadBool();
                break;
              }
              case 29: {
                Weight = input.ReadFloat();
                break;
              }
              case 32: {
                Playing = input.ReadBool();
                break;
              }
              case 40: {
                ShouldReset = input.ReadBool();
                break;
              }
              case 53: {
                Speed = input.ReadFloat();
                break;
              }
              case 58: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// CLASS_ID.OBJ_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentObjShape : pb::IMessage<ECS6ComponentObjShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentObjShape> _parser = new pb::MessageParser<ECS6ComponentObjShape>(() => new ECS6ComponentObjShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentObjShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentObjShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentObjShape(ECS6ComponentObjShape other) : this() {
      _hasBits0 = other._hasBits0;
      withCollisions_ = other.withCollisions_;
      isPointerBlocker_ = other.isPointerBlocker_;
      visible_ = other.visible_;
      src_ = other.src_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentObjShape Clone() {
      return new ECS6ComponentObjShape(this);
    }

    /// <summary>Field number for the "with_collisions" field.</summary>
    public const int WithCollisionsFieldNumber = 1;
    private bool withCollisions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WithCollisions {
      get { if ((_hasBits0 & 1) != 0) { return withCollisions_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        withCollisions_ = value;
      }
    }
    /// <summary>Gets whether the "with_collisions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWithCollisions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "with_collisions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWithCollisions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 2;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 2) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 3;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 4) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 4;
    private string src_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Src {
      get { return src_ ?? ""; }
      set {
        src_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "src" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSrc {
      get { return src_ != null; }
    }
    /// <summary>Clears the value of the "src" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSrc() {
      src_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentObjShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentObjShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WithCollisions != other.WithCollisions) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (Visible != other.Visible) return false;
      if (Src != other.Src) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWithCollisions) hash ^= WithCollisions.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasSrc) hash ^= Src.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasSrc) {
        output.WriteRawTag(34);
        output.WriteString(Src);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWithCollisions) {
        output.WriteRawTag(8);
        output.WriteBool(WithCollisions);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(16);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasVisible) {
        output.WriteRawTag(24);
        output.WriteBool(Visible);
      }
      if (HasSrc) {
        output.WriteRawTag(34);
        output.WriteString(Src);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWithCollisions) {
        size += 1 + 1;
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasSrc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Src);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentObjShape other) {
      if (other == null) {
        return;
      }
      if (other.HasWithCollisions) {
        WithCollisions = other.WithCollisions;
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasSrc) {
        Src = other.Src;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34: {
            Src = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WithCollisions = input.ReadBool();
            break;
          }
          case 16: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 24: {
            Visible = input.ReadBool();
            break;
          }
          case 34: {
            Src = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.FONT
  /// </summary>
  public sealed partial class ECS6ComponentFont : pb::IMessage<ECS6ComponentFont>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentFont> _parser = new pb::MessageParser<ECS6ComponentFont>(() => new ECS6ComponentFont());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentFont> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentFont() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentFont(ECS6ComponentFont other) : this() {
      src_ = other.src_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentFont Clone() {
      return new ECS6ComponentFont(this);
    }

    /// <summary>Field number for the "src" field.</summary>
    public const int SrcFieldNumber = 1;
    private string src_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Src {
      get { return src_ ?? ""; }
      set {
        src_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "src" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSrc {
      get { return src_ != null; }
    }
    /// <summary>Clears the value of the "src" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSrc() {
      src_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentFont);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentFont other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Src != other.Src) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSrc) hash ^= Src.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSrc) {
        output.WriteRawTag(10);
        output.WriteString(Src);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSrc) {
        output.WriteRawTag(10);
        output.WriteString(Src);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSrc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Src);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentFont other) {
      if (other == null) {
        return;
      }
      if (other.HasSrc) {
        Src = other.Src;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Src = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Src = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.TEXT_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentTextShape : pb::IMessage<ECS6ComponentTextShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentTextShape> _parser = new pb::MessageParser<ECS6ComponentTextShape>(() => new ECS6ComponentTextShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentTextShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTextShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTextShape(ECS6ComponentTextShape other) : this() {
      _hasBits0 = other._hasBits0;
      outlineWidth_ = other.outlineWidth_;
      outlineColor_ = other.outlineColor_ != null ? other.outlineColor_.Clone() : null;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      fontSize_ = other.fontSize_;
      font_ = other.font_;
      opacity_ = other.opacity_;
      value_ = other.value_;
      lineSpacing_ = other.lineSpacing_;
      lineCount_ = other.lineCount_;
      textWrapping_ = other.textWrapping_;
      shadowBlur_ = other.shadowBlur_;
      shadowOffsetX_ = other.shadowOffsetX_;
      shadowOffsetY_ = other.shadowOffsetY_;
      shadowColor_ = other.shadowColor_ != null ? other.shadowColor_.Clone() : null;
      hTextAlign_ = other.hTextAlign_;
      vTextAlign_ = other.vTextAlign_;
      width_ = other.width_;
      height_ = other.height_;
      paddingTop_ = other.paddingTop_;
      paddingRight_ = other.paddingRight_;
      paddingBottom_ = other.paddingBottom_;
      paddingLeft_ = other.paddingLeft_;
      billboard_ = other.billboard_;
      visible_ = other.visible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentTextShape Clone() {
      return new ECS6ComponentTextShape(this);
    }

    /// <summary>Field number for the "outline_width" field.</summary>
    public const int OutlineWidthFieldNumber = 1;
    private float outlineWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OutlineWidth {
      get { if ((_hasBits0 & 1) != 0) { return outlineWidth_; } else { return 0F; } }
      set {
        _hasBits0 |= 1;
        outlineWidth_ = value;
      }
    }
    /// <summary>Gets whether the "outline_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOutlineWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "outline_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutlineWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "outline_color" field.</summary>
    public const int OutlineColorFieldNumber = 2;
    private global::Decentraland.Common.Color3 outlineColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color3 OutlineColor {
      get { return outlineColor_; }
      set {
        outlineColor_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 3;
    private global::Decentraland.Common.Color3 color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color3 Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "font_size" field.</summary>
    public const int FontSizeFieldNumber = 4;
    private float fontSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FontSize {
      get { if ((_hasBits0 & 2) != 0) { return fontSize_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        fontSize_ = value;
      }
    }
    /// <summary>Gets whether the "font_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFontSize {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "font_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFontSize() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "font" field.</summary>
    public const int FontFieldNumber = 5;
    private string font_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Font {
      get { return font_ ?? ""; }
      set {
        font_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "font" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFont {
      get { return font_ != null; }
    }
    /// <summary>Clears the value of the "font" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFont() {
      font_ = null;
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 6;
    private float opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 4) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 4;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 7;
    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    /// <summary>Field number for the "line_spacing" field.</summary>
    public const int LineSpacingFieldNumber = 8;
    private string lineSpacing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LineSpacing {
      get { return lineSpacing_ ?? ""; }
      set {
        lineSpacing_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "line_spacing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLineSpacing {
      get { return lineSpacing_ != null; }
    }
    /// <summary>Clears the value of the "line_spacing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLineSpacing() {
      lineSpacing_ = null;
    }

    /// <summary>Field number for the "line_count" field.</summary>
    public const int LineCountFieldNumber = 9;
    private int lineCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LineCount {
      get { if ((_hasBits0 & 8) != 0) { return lineCount_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        lineCount_ = value;
      }
    }
    /// <summary>Gets whether the "line_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLineCount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "line_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLineCount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "text_wrapping" field.</summary>
    public const int TextWrappingFieldNumber = 10;
    private bool textWrapping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TextWrapping {
      get { if ((_hasBits0 & 16) != 0) { return textWrapping_; } else { return false; } }
      set {
        _hasBits0 |= 16;
        textWrapping_ = value;
      }
    }
    /// <summary>Gets whether the "text_wrapping" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextWrapping {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "text_wrapping" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextWrapping() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "shadow_blur" field.</summary>
    public const int ShadowBlurFieldNumber = 11;
    private float shadowBlur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowBlur {
      get { if ((_hasBits0 & 32) != 0) { return shadowBlur_; } else { return 0F; } }
      set {
        _hasBits0 |= 32;
        shadowBlur_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_blur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowBlur {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "shadow_blur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowBlur() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "shadow_offset_x" field.</summary>
    public const int ShadowOffsetXFieldNumber = 12;
    private float shadowOffsetX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowOffsetX {
      get { if ((_hasBits0 & 64) != 0) { return shadowOffsetX_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        shadowOffsetX_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_offset_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowOffsetX {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "shadow_offset_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowOffsetX() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "shadow_offset_y" field.</summary>
    public const int ShadowOffsetYFieldNumber = 13;
    private float shadowOffsetY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowOffsetY {
      get { if ((_hasBits0 & 128) != 0) { return shadowOffsetY_; } else { return 0F; } }
      set {
        _hasBits0 |= 128;
        shadowOffsetY_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_offset_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowOffsetY {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "shadow_offset_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowOffsetY() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "shadow_color" field.</summary>
    public const int ShadowColorFieldNumber = 14;
    private global::Decentraland.Common.Color3 shadowColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color3 ShadowColor {
      get { return shadowColor_; }
      set {
        shadowColor_ = value;
      }
    }

    /// <summary>Field number for the "h_text_align" field.</summary>
    public const int HTextAlignFieldNumber = 15;
    private string hTextAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HTextAlign {
      get { return hTextAlign_ ?? ""; }
      set {
        hTextAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_text_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHTextAlign {
      get { return hTextAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_text_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHTextAlign() {
      hTextAlign_ = null;
    }

    /// <summary>Field number for the "v_text_align" field.</summary>
    public const int VTextAlignFieldNumber = 16;
    private string vTextAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VTextAlign {
      get { return vTextAlign_ ?? ""; }
      set {
        vTextAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_text_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVTextAlign {
      get { return vTextAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_text_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVTextAlign() {
      vTextAlign_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 17;
    private float width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Width {
      get { if ((_hasBits0 & 256) != 0) { return width_; } else { return 0F; } }
      set {
        _hasBits0 |= 256;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 18;
    private float height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Height {
      get { if ((_hasBits0 & 512) != 0) { return height_; } else { return 0F; } }
      set {
        _hasBits0 |= 512;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "padding_top" field.</summary>
    public const int PaddingTopFieldNumber = 19;
    private float paddingTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingTop {
      get { if ((_hasBits0 & 1024) != 0) { return paddingTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 1024;
        paddingTop_ = value;
      }
    }
    /// <summary>Gets whether the "padding_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingTop {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "padding_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingTop() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "padding_right" field.</summary>
    public const int PaddingRightFieldNumber = 20;
    private float paddingRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingRight {
      get { if ((_hasBits0 & 2048) != 0) { return paddingRight_; } else { return 0F; } }
      set {
        _hasBits0 |= 2048;
        paddingRight_ = value;
      }
    }
    /// <summary>Gets whether the "padding_right" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingRight {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "padding_right" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingRight() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "padding_bottom" field.</summary>
    public const int PaddingBottomFieldNumber = 21;
    private float paddingBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingBottom {
      get { if ((_hasBits0 & 4096) != 0) { return paddingBottom_; } else { return 0F; } }
      set {
        _hasBits0 |= 4096;
        paddingBottom_ = value;
      }
    }
    /// <summary>Gets whether the "padding_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingBottom {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "padding_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingBottom() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "padding_left" field.</summary>
    public const int PaddingLeftFieldNumber = 22;
    private float paddingLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingLeft {
      get { if ((_hasBits0 & 8192) != 0) { return paddingLeft_; } else { return 0F; } }
      set {
        _hasBits0 |= 8192;
        paddingLeft_ = value;
      }
    }
    /// <summary>Gets whether the "padding_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingLeft {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "padding_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingLeft() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "billboard" field.</summary>
    public const int BillboardFieldNumber = 23;
    private bool billboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Billboard {
      get { if ((_hasBits0 & 16384) != 0) { return billboard_; } else { return false; } }
      set {
        _hasBits0 |= 16384;
        billboard_ = value;
      }
    }
    /// <summary>Gets whether the "billboard" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBillboard {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "billboard" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBillboard() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 24;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 32768) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 32768;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~32768;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentTextShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentTextShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OutlineWidth, other.OutlineWidth)) return false;
      if (!object.Equals(OutlineColor, other.OutlineColor)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FontSize, other.FontSize)) return false;
      if (Font != other.Font) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (Value != other.Value) return false;
      if (LineSpacing != other.LineSpacing) return false;
      if (LineCount != other.LineCount) return false;
      if (TextWrapping != other.TextWrapping) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowBlur, other.ShadowBlur)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowOffsetX, other.ShadowOffsetX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowOffsetY, other.ShadowOffsetY)) return false;
      if (!object.Equals(ShadowColor, other.ShadowColor)) return false;
      if (HTextAlign != other.HTextAlign) return false;
      if (VTextAlign != other.VTextAlign) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Width, other.Width)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingTop, other.PaddingTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingRight, other.PaddingRight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingBottom, other.PaddingBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingLeft, other.PaddingLeft)) return false;
      if (Billboard != other.Billboard) return false;
      if (Visible != other.Visible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOutlineWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OutlineWidth);
      if (outlineColor_ != null) hash ^= OutlineColor.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasFontSize) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FontSize);
      if (HasFont) hash ^= Font.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasLineSpacing) hash ^= LineSpacing.GetHashCode();
      if (HasLineCount) hash ^= LineCount.GetHashCode();
      if (HasTextWrapping) hash ^= TextWrapping.GetHashCode();
      if (HasShadowBlur) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowBlur);
      if (HasShadowOffsetX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowOffsetX);
      if (HasShadowOffsetY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowOffsetY);
      if (shadowColor_ != null) hash ^= ShadowColor.GetHashCode();
      if (HasHTextAlign) hash ^= HTextAlign.GetHashCode();
      if (HasVTextAlign) hash ^= VTextAlign.GetHashCode();
      if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Width);
      if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
      if (HasPaddingTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingTop);
      if (HasPaddingRight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingRight);
      if (HasPaddingBottom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingBottom);
      if (HasPaddingLeft) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingLeft);
      if (HasBillboard) hash ^= Billboard.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOutlineWidth) {
        output.WriteRawTag(13);
        output.WriteFloat(OutlineWidth);
      }
      if (outlineColor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OutlineColor);
      }
      if (color_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Color);
      }
      if (HasFontSize) {
        output.WriteRawTag(37);
        output.WriteFloat(FontSize);
      }
      if (HasFont) {
        output.WriteRawTag(42);
        output.WriteString(Font);
      }
      if (HasOpacity) {
        output.WriteRawTag(53);
        output.WriteFloat(Opacity);
      }
      if (HasValue) {
        output.WriteRawTag(58);
        output.WriteString(Value);
      }
      if (HasLineSpacing) {
        output.WriteRawTag(66);
        output.WriteString(LineSpacing);
      }
      if (HasLineCount) {
        output.WriteRawTag(72);
        output.WriteInt32(LineCount);
      }
      if (HasTextWrapping) {
        output.WriteRawTag(80);
        output.WriteBool(TextWrapping);
      }
      if (HasShadowBlur) {
        output.WriteRawTag(93);
        output.WriteFloat(ShadowBlur);
      }
      if (HasShadowOffsetX) {
        output.WriteRawTag(101);
        output.WriteFloat(ShadowOffsetX);
      }
      if (HasShadowOffsetY) {
        output.WriteRawTag(109);
        output.WriteFloat(ShadowOffsetY);
      }
      if (shadowColor_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ShadowColor);
      }
      if (HasHTextAlign) {
        output.WriteRawTag(122);
        output.WriteString(HTextAlign);
      }
      if (HasVTextAlign) {
        output.WriteRawTag(130, 1);
        output.WriteString(VTextAlign);
      }
      if (HasWidth) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Height);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(PaddingLeft);
      }
      if (HasBillboard) {
        output.WriteRawTag(184, 1);
        output.WriteBool(Billboard);
      }
      if (HasVisible) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Visible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOutlineWidth) {
        output.WriteRawTag(13);
        output.WriteFloat(OutlineWidth);
      }
      if (outlineColor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OutlineColor);
      }
      if (color_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Color);
      }
      if (HasFontSize) {
        output.WriteRawTag(37);
        output.WriteFloat(FontSize);
      }
      if (HasFont) {
        output.WriteRawTag(42);
        output.WriteString(Font);
      }
      if (HasOpacity) {
        output.WriteRawTag(53);
        output.WriteFloat(Opacity);
      }
      if (HasValue) {
        output.WriteRawTag(58);
        output.WriteString(Value);
      }
      if (HasLineSpacing) {
        output.WriteRawTag(66);
        output.WriteString(LineSpacing);
      }
      if (HasLineCount) {
        output.WriteRawTag(72);
        output.WriteInt32(LineCount);
      }
      if (HasTextWrapping) {
        output.WriteRawTag(80);
        output.WriteBool(TextWrapping);
      }
      if (HasShadowBlur) {
        output.WriteRawTag(93);
        output.WriteFloat(ShadowBlur);
      }
      if (HasShadowOffsetX) {
        output.WriteRawTag(101);
        output.WriteFloat(ShadowOffsetX);
      }
      if (HasShadowOffsetY) {
        output.WriteRawTag(109);
        output.WriteFloat(ShadowOffsetY);
      }
      if (shadowColor_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ShadowColor);
      }
      if (HasHTextAlign) {
        output.WriteRawTag(122);
        output.WriteString(HTextAlign);
      }
      if (HasVTextAlign) {
        output.WriteRawTag(130, 1);
        output.WriteString(VTextAlign);
      }
      if (HasWidth) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(Height);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(PaddingLeft);
      }
      if (HasBillboard) {
        output.WriteRawTag(184, 1);
        output.WriteBool(Billboard);
      }
      if (HasVisible) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Visible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOutlineWidth) {
        size += 1 + 4;
      }
      if (outlineColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutlineColor);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasFontSize) {
        size += 1 + 4;
      }
      if (HasFont) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Font);
      }
      if (HasOpacity) {
        size += 1 + 4;
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasLineSpacing) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LineSpacing);
      }
      if (HasLineCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LineCount);
      }
      if (HasTextWrapping) {
        size += 1 + 1;
      }
      if (HasShadowBlur) {
        size += 1 + 4;
      }
      if (HasShadowOffsetX) {
        size += 1 + 4;
      }
      if (HasShadowOffsetY) {
        size += 1 + 4;
      }
      if (shadowColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShadowColor);
      }
      if (HasHTextAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HTextAlign);
      }
      if (HasVTextAlign) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VTextAlign);
      }
      if (HasWidth) {
        size += 2 + 4;
      }
      if (HasHeight) {
        size += 2 + 4;
      }
      if (HasPaddingTop) {
        size += 2 + 4;
      }
      if (HasPaddingRight) {
        size += 2 + 4;
      }
      if (HasPaddingBottom) {
        size += 2 + 4;
      }
      if (HasPaddingLeft) {
        size += 2 + 4;
      }
      if (HasBillboard) {
        size += 2 + 1;
      }
      if (HasVisible) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentTextShape other) {
      if (other == null) {
        return;
      }
      if (other.HasOutlineWidth) {
        OutlineWidth = other.OutlineWidth;
      }
      if (other.outlineColor_ != null) {
        if (outlineColor_ == null) {
          OutlineColor = new global::Decentraland.Common.Color3();
        }
        OutlineColor.MergeFrom(other.OutlineColor);
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Decentraland.Common.Color3();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasFontSize) {
        FontSize = other.FontSize;
      }
      if (other.HasFont) {
        Font = other.Font;
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasLineSpacing) {
        LineSpacing = other.LineSpacing;
      }
      if (other.HasLineCount) {
        LineCount = other.LineCount;
      }
      if (other.HasTextWrapping) {
        TextWrapping = other.TextWrapping;
      }
      if (other.HasShadowBlur) {
        ShadowBlur = other.ShadowBlur;
      }
      if (other.HasShadowOffsetX) {
        ShadowOffsetX = other.ShadowOffsetX;
      }
      if (other.HasShadowOffsetY) {
        ShadowOffsetY = other.ShadowOffsetY;
      }
      if (other.shadowColor_ != null) {
        if (shadowColor_ == null) {
          ShadowColor = new global::Decentraland.Common.Color3();
        }
        ShadowColor.MergeFrom(other.ShadowColor);
      }
      if (other.HasHTextAlign) {
        HTextAlign = other.HTextAlign;
      }
      if (other.HasVTextAlign) {
        VTextAlign = other.VTextAlign;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasPaddingTop) {
        PaddingTop = other.PaddingTop;
      }
      if (other.HasPaddingRight) {
        PaddingRight = other.PaddingRight;
      }
      if (other.HasPaddingBottom) {
        PaddingBottom = other.PaddingBottom;
      }
      if (other.HasPaddingLeft) {
        PaddingLeft = other.PaddingLeft;
      }
      if (other.HasBillboard) {
        Billboard = other.Billboard;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            OutlineWidth = input.ReadFloat();
            break;
          }
          case 18: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
          case 26: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(Color);
            break;
          }
          case 37: {
            FontSize = input.ReadFloat();
            break;
          }
          case 42: {
            Font = input.ReadString();
            break;
          }
          case 53: {
            Opacity = input.ReadFloat();
            break;
          }
          case 58: {
            Value = input.ReadString();
            break;
          }
          case 66: {
            LineSpacing = input.ReadString();
            break;
          }
          case 72: {
            LineCount = input.ReadInt32();
            break;
          }
          case 80: {
            TextWrapping = input.ReadBool();
            break;
          }
          case 93: {
            ShadowBlur = input.ReadFloat();
            break;
          }
          case 101: {
            ShadowOffsetX = input.ReadFloat();
            break;
          }
          case 109: {
            ShadowOffsetY = input.ReadFloat();
            break;
          }
          case 114: {
            if (shadowColor_ == null) {
              ShadowColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(ShadowColor);
            break;
          }
          case 122: {
            HTextAlign = input.ReadString();
            break;
          }
          case 130: {
            VTextAlign = input.ReadString();
            break;
          }
          case 141: {
            Width = input.ReadFloat();
            break;
          }
          case 149: {
            Height = input.ReadFloat();
            break;
          }
          case 157: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 165: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 173: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 181: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 184: {
            Billboard = input.ReadBool();
            break;
          }
          case 192: {
            Visible = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            OutlineWidth = input.ReadFloat();
            break;
          }
          case 18: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
          case 26: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(Color);
            break;
          }
          case 37: {
            FontSize = input.ReadFloat();
            break;
          }
          case 42: {
            Font = input.ReadString();
            break;
          }
          case 53: {
            Opacity = input.ReadFloat();
            break;
          }
          case 58: {
            Value = input.ReadString();
            break;
          }
          case 66: {
            LineSpacing = input.ReadString();
            break;
          }
          case 72: {
            LineCount = input.ReadInt32();
            break;
          }
          case 80: {
            TextWrapping = input.ReadBool();
            break;
          }
          case 93: {
            ShadowBlur = input.ReadFloat();
            break;
          }
          case 101: {
            ShadowOffsetX = input.ReadFloat();
            break;
          }
          case 109: {
            ShadowOffsetY = input.ReadFloat();
            break;
          }
          case 114: {
            if (shadowColor_ == null) {
              ShadowColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(ShadowColor);
            break;
          }
          case 122: {
            HTextAlign = input.ReadString();
            break;
          }
          case 130: {
            VTextAlign = input.ReadString();
            break;
          }
          case 141: {
            Width = input.ReadFloat();
            break;
          }
          case 149: {
            Height = input.ReadFloat();
            break;
          }
          case 157: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 165: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 173: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 181: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 184: {
            Billboard = input.ReadBool();
            break;
          }
          case 192: {
            Visible = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.PBR_MATERIAL
  /// </summary>
  public sealed partial class ECS6ComponentMaterial : pb::IMessage<ECS6ComponentMaterial>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentMaterial> _parser = new pb::MessageParser<ECS6ComponentMaterial>(() => new ECS6ComponentMaterial());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentMaterial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentMaterial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentMaterial(ECS6ComponentMaterial other) : this() {
      _hasBits0 = other._hasBits0;
      alphaTest_ = other.alphaTest_;
      albedoColor_ = other.albedoColor_ != null ? other.albedoColor_.Clone() : null;
      emissiveColor_ = other.emissiveColor_ != null ? other.emissiveColor_.Clone() : null;
      metallic_ = other.metallic_;
      roughness_ = other.roughness_;
      reflectivityColor_ = other.reflectivityColor_ != null ? other.reflectivityColor_.Clone() : null;
      directIntensity_ = other.directIntensity_;
      microSurface_ = other.microSurface_;
      emissiveIntensity_ = other.emissiveIntensity_;
      specularIntensity_ = other.specularIntensity_;
      albedoTexture_ = other.albedoTexture_;
      alphaTexture_ = other.alphaTexture_;
      emissiveTexture_ = other.emissiveTexture_;
      bumpTexture_ = other.bumpTexture_;
      transparencyMode_ = other.transparencyMode_;
      castShadows_ = other.castShadows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentMaterial Clone() {
      return new ECS6ComponentMaterial(this);
    }

    /// <summary>Field number for the "alpha_test" field.</summary>
    public const int AlphaTestFieldNumber = 1;
    private float alphaTest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AlphaTest {
      get { if ((_hasBits0 & 1) != 0) { return alphaTest_; } else { return 0F; } }
      set {
        _hasBits0 |= 1;
        alphaTest_ = value;
      }
    }
    /// <summary>Gets whether the "alpha_test" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlphaTest {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "alpha_test" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlphaTest() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "albedo_color" field.</summary>
    public const int AlbedoColorFieldNumber = 2;
    private global::Decentraland.Common.Color3 albedoColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color3 AlbedoColor {
      get { return albedoColor_; }
      set {
        albedoColor_ = value;
      }
    }

    /// <summary>Field number for the "emissive_color" field.</summary>
    public const int EmissiveColorFieldNumber = 3;
    private global::Decentraland.Common.Color3 emissiveColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color3 EmissiveColor {
      get { return emissiveColor_; }
      set {
        emissiveColor_ = value;
      }
    }

    /// <summary>Field number for the "metallic" field.</summary>
    public const int MetallicFieldNumber = 4;
    private float metallic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Metallic {
      get { if ((_hasBits0 & 2) != 0) { return metallic_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        metallic_ = value;
      }
    }
    /// <summary>Gets whether the "metallic" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMetallic {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "metallic" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetallic() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "roughness" field.</summary>
    public const int RoughnessFieldNumber = 5;
    private float roughness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Roughness {
      get { if ((_hasBits0 & 4) != 0) { return roughness_; } else { return 0F; } }
      set {
        _hasBits0 |= 4;
        roughness_ = value;
      }
    }
    /// <summary>Gets whether the "roughness" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoughness {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "roughness" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoughness() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "reflectivity_color" field.</summary>
    public const int ReflectivityColorFieldNumber = 6;
    private global::Decentraland.Common.Color3 reflectivityColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color3 ReflectivityColor {
      get { return reflectivityColor_; }
      set {
        reflectivityColor_ = value;
      }
    }

    /// <summary>Field number for the "direct_intensity" field.</summary>
    public const int DirectIntensityFieldNumber = 7;
    private float directIntensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DirectIntensity {
      get { if ((_hasBits0 & 8) != 0) { return directIntensity_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        directIntensity_ = value;
      }
    }
    /// <summary>Gets whether the "direct_intensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDirectIntensity {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "direct_intensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDirectIntensity() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "micro_surface" field.</summary>
    public const int MicroSurfaceFieldNumber = 8;
    private float microSurface_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MicroSurface {
      get { if ((_hasBits0 & 16) != 0) { return microSurface_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        microSurface_ = value;
      }
    }
    /// <summary>Gets whether the "micro_surface" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMicroSurface {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "micro_surface" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMicroSurface() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "emissive_intensity" field.</summary>
    public const int EmissiveIntensityFieldNumber = 9;
    private float emissiveIntensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EmissiveIntensity {
      get { if ((_hasBits0 & 32) != 0) { return emissiveIntensity_; } else { return 0F; } }
      set {
        _hasBits0 |= 32;
        emissiveIntensity_ = value;
      }
    }
    /// <summary>Gets whether the "emissive_intensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEmissiveIntensity {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "emissive_intensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEmissiveIntensity() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "specular_intensity" field.</summary>
    public const int SpecularIntensityFieldNumber = 10;
    private float specularIntensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SpecularIntensity {
      get { if ((_hasBits0 & 64) != 0) { return specularIntensity_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        specularIntensity_ = value;
      }
    }
    /// <summary>Gets whether the "specular_intensity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpecularIntensity {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "specular_intensity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpecularIntensity() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "albedo_texture" field.</summary>
    public const int AlbedoTextureFieldNumber = 11;
    private string albedoTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AlbedoTexture {
      get { return albedoTexture_ ?? ""; }
      set {
        albedoTexture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "albedo_texture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlbedoTexture {
      get { return albedoTexture_ != null; }
    }
    /// <summary>Clears the value of the "albedo_texture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlbedoTexture() {
      albedoTexture_ = null;
    }

    /// <summary>Field number for the "alpha_texture" field.</summary>
    public const int AlphaTextureFieldNumber = 12;
    private string alphaTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AlphaTexture {
      get { return alphaTexture_ ?? ""; }
      set {
        alphaTexture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "alpha_texture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlphaTexture {
      get { return alphaTexture_ != null; }
    }
    /// <summary>Clears the value of the "alpha_texture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlphaTexture() {
      alphaTexture_ = null;
    }

    /// <summary>Field number for the "emissive_texture" field.</summary>
    public const int EmissiveTextureFieldNumber = 13;
    private string emissiveTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EmissiveTexture {
      get { return emissiveTexture_ ?? ""; }
      set {
        emissiveTexture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "emissive_texture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEmissiveTexture {
      get { return emissiveTexture_ != null; }
    }
    /// <summary>Clears the value of the "emissive_texture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEmissiveTexture() {
      emissiveTexture_ = null;
    }

    /// <summary>Field number for the "bump_texture" field.</summary>
    public const int BumpTextureFieldNumber = 14;
    private string bumpTexture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BumpTexture {
      get { return bumpTexture_ ?? ""; }
      set {
        bumpTexture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bump_texture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBumpTexture {
      get { return bumpTexture_ != null; }
    }
    /// <summary>Clears the value of the "bump_texture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBumpTexture() {
      bumpTexture_ = null;
    }

    /// <summary>Field number for the "transparency_mode" field.</summary>
    public const int TransparencyModeFieldNumber = 15;
    private float transparencyMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TransparencyMode {
      get { if ((_hasBits0 & 128) != 0) { return transparencyMode_; } else { return 0F; } }
      set {
        _hasBits0 |= 128;
        transparencyMode_ = value;
      }
    }
    /// <summary>Gets whether the "transparency_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTransparencyMode {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "transparency_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTransparencyMode() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "cast_shadows" field.</summary>
    public const int CastShadowsFieldNumber = 16;
    private bool castShadows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CastShadows {
      get { if ((_hasBits0 & 256) != 0) { return castShadows_; } else { return false; } }
      set {
        _hasBits0 |= 256;
        castShadows_ = value;
      }
    }
    /// <summary>Gets whether the "cast_shadows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCastShadows {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "cast_shadows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCastShadows() {
      _hasBits0 &= ~256;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentMaterial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentMaterial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AlphaTest, other.AlphaTest)) return false;
      if (!object.Equals(AlbedoColor, other.AlbedoColor)) return false;
      if (!object.Equals(EmissiveColor, other.EmissiveColor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Metallic, other.Metallic)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Roughness, other.Roughness)) return false;
      if (!object.Equals(ReflectivityColor, other.ReflectivityColor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DirectIntensity, other.DirectIntensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MicroSurface, other.MicroSurface)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EmissiveIntensity, other.EmissiveIntensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpecularIntensity, other.SpecularIntensity)) return false;
      if (AlbedoTexture != other.AlbedoTexture) return false;
      if (AlphaTexture != other.AlphaTexture) return false;
      if (EmissiveTexture != other.EmissiveTexture) return false;
      if (BumpTexture != other.BumpTexture) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TransparencyMode, other.TransparencyMode)) return false;
      if (CastShadows != other.CastShadows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAlphaTest) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AlphaTest);
      if (albedoColor_ != null) hash ^= AlbedoColor.GetHashCode();
      if (emissiveColor_ != null) hash ^= EmissiveColor.GetHashCode();
      if (HasMetallic) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Metallic);
      if (HasRoughness) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Roughness);
      if (reflectivityColor_ != null) hash ^= ReflectivityColor.GetHashCode();
      if (HasDirectIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DirectIntensity);
      if (HasMicroSurface) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MicroSurface);
      if (HasEmissiveIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EmissiveIntensity);
      if (HasSpecularIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpecularIntensity);
      if (HasAlbedoTexture) hash ^= AlbedoTexture.GetHashCode();
      if (HasAlphaTexture) hash ^= AlphaTexture.GetHashCode();
      if (HasEmissiveTexture) hash ^= EmissiveTexture.GetHashCode();
      if (HasBumpTexture) hash ^= BumpTexture.GetHashCode();
      if (HasTransparencyMode) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TransparencyMode);
      if (HasCastShadows) hash ^= CastShadows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAlphaTest) {
        output.WriteRawTag(13);
        output.WriteFloat(AlphaTest);
      }
      if (albedoColor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AlbedoColor);
      }
      if (emissiveColor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EmissiveColor);
      }
      if (HasMetallic) {
        output.WriteRawTag(37);
        output.WriteFloat(Metallic);
      }
      if (HasRoughness) {
        output.WriteRawTag(45);
        output.WriteFloat(Roughness);
      }
      if (reflectivityColor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ReflectivityColor);
      }
      if (HasDirectIntensity) {
        output.WriteRawTag(61);
        output.WriteFloat(DirectIntensity);
      }
      if (HasMicroSurface) {
        output.WriteRawTag(69);
        output.WriteFloat(MicroSurface);
      }
      if (HasEmissiveIntensity) {
        output.WriteRawTag(77);
        output.WriteFloat(EmissiveIntensity);
      }
      if (HasSpecularIntensity) {
        output.WriteRawTag(85);
        output.WriteFloat(SpecularIntensity);
      }
      if (HasAlbedoTexture) {
        output.WriteRawTag(90);
        output.WriteString(AlbedoTexture);
      }
      if (HasAlphaTexture) {
        output.WriteRawTag(98);
        output.WriteString(AlphaTexture);
      }
      if (HasEmissiveTexture) {
        output.WriteRawTag(106);
        output.WriteString(EmissiveTexture);
      }
      if (HasBumpTexture) {
        output.WriteRawTag(114);
        output.WriteString(BumpTexture);
      }
      if (HasTransparencyMode) {
        output.WriteRawTag(125);
        output.WriteFloat(TransparencyMode);
      }
      if (HasCastShadows) {
        output.WriteRawTag(128, 1);
        output.WriteBool(CastShadows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAlphaTest) {
        output.WriteRawTag(13);
        output.WriteFloat(AlphaTest);
      }
      if (albedoColor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AlbedoColor);
      }
      if (emissiveColor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EmissiveColor);
      }
      if (HasMetallic) {
        output.WriteRawTag(37);
        output.WriteFloat(Metallic);
      }
      if (HasRoughness) {
        output.WriteRawTag(45);
        output.WriteFloat(Roughness);
      }
      if (reflectivityColor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ReflectivityColor);
      }
      if (HasDirectIntensity) {
        output.WriteRawTag(61);
        output.WriteFloat(DirectIntensity);
      }
      if (HasMicroSurface) {
        output.WriteRawTag(69);
        output.WriteFloat(MicroSurface);
      }
      if (HasEmissiveIntensity) {
        output.WriteRawTag(77);
        output.WriteFloat(EmissiveIntensity);
      }
      if (HasSpecularIntensity) {
        output.WriteRawTag(85);
        output.WriteFloat(SpecularIntensity);
      }
      if (HasAlbedoTexture) {
        output.WriteRawTag(90);
        output.WriteString(AlbedoTexture);
      }
      if (HasAlphaTexture) {
        output.WriteRawTag(98);
        output.WriteString(AlphaTexture);
      }
      if (HasEmissiveTexture) {
        output.WriteRawTag(106);
        output.WriteString(EmissiveTexture);
      }
      if (HasBumpTexture) {
        output.WriteRawTag(114);
        output.WriteString(BumpTexture);
      }
      if (HasTransparencyMode) {
        output.WriteRawTag(125);
        output.WriteFloat(TransparencyMode);
      }
      if (HasCastShadows) {
        output.WriteRawTag(128, 1);
        output.WriteBool(CastShadows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAlphaTest) {
        size += 1 + 4;
      }
      if (albedoColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlbedoColor);
      }
      if (emissiveColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmissiveColor);
      }
      if (HasMetallic) {
        size += 1 + 4;
      }
      if (HasRoughness) {
        size += 1 + 4;
      }
      if (reflectivityColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReflectivityColor);
      }
      if (HasDirectIntensity) {
        size += 1 + 4;
      }
      if (HasMicroSurface) {
        size += 1 + 4;
      }
      if (HasEmissiveIntensity) {
        size += 1 + 4;
      }
      if (HasSpecularIntensity) {
        size += 1 + 4;
      }
      if (HasAlbedoTexture) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlbedoTexture);
      }
      if (HasAlphaTexture) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlphaTexture);
      }
      if (HasEmissiveTexture) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmissiveTexture);
      }
      if (HasBumpTexture) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BumpTexture);
      }
      if (HasTransparencyMode) {
        size += 1 + 4;
      }
      if (HasCastShadows) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentMaterial other) {
      if (other == null) {
        return;
      }
      if (other.HasAlphaTest) {
        AlphaTest = other.AlphaTest;
      }
      if (other.albedoColor_ != null) {
        if (albedoColor_ == null) {
          AlbedoColor = new global::Decentraland.Common.Color3();
        }
        AlbedoColor.MergeFrom(other.AlbedoColor);
      }
      if (other.emissiveColor_ != null) {
        if (emissiveColor_ == null) {
          EmissiveColor = new global::Decentraland.Common.Color3();
        }
        EmissiveColor.MergeFrom(other.EmissiveColor);
      }
      if (other.HasMetallic) {
        Metallic = other.Metallic;
      }
      if (other.HasRoughness) {
        Roughness = other.Roughness;
      }
      if (other.reflectivityColor_ != null) {
        if (reflectivityColor_ == null) {
          ReflectivityColor = new global::Decentraland.Common.Color3();
        }
        ReflectivityColor.MergeFrom(other.ReflectivityColor);
      }
      if (other.HasDirectIntensity) {
        DirectIntensity = other.DirectIntensity;
      }
      if (other.HasMicroSurface) {
        MicroSurface = other.MicroSurface;
      }
      if (other.HasEmissiveIntensity) {
        EmissiveIntensity = other.EmissiveIntensity;
      }
      if (other.HasSpecularIntensity) {
        SpecularIntensity = other.SpecularIntensity;
      }
      if (other.HasAlbedoTexture) {
        AlbedoTexture = other.AlbedoTexture;
      }
      if (other.HasAlphaTexture) {
        AlphaTexture = other.AlphaTexture;
      }
      if (other.HasEmissiveTexture) {
        EmissiveTexture = other.EmissiveTexture;
      }
      if (other.HasBumpTexture) {
        BumpTexture = other.BumpTexture;
      }
      if (other.HasTransparencyMode) {
        TransparencyMode = other.TransparencyMode;
      }
      if (other.HasCastShadows) {
        CastShadows = other.CastShadows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AlphaTest = input.ReadFloat();
            break;
          }
          case 18: {
            if (albedoColor_ == null) {
              AlbedoColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(AlbedoColor);
            break;
          }
          case 26: {
            if (emissiveColor_ == null) {
              EmissiveColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(EmissiveColor);
            break;
          }
          case 37: {
            Metallic = input.ReadFloat();
            break;
          }
          case 45: {
            Roughness = input.ReadFloat();
            break;
          }
          case 50: {
            if (reflectivityColor_ == null) {
              ReflectivityColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(ReflectivityColor);
            break;
          }
          case 61: {
            DirectIntensity = input.ReadFloat();
            break;
          }
          case 69: {
            MicroSurface = input.ReadFloat();
            break;
          }
          case 77: {
            EmissiveIntensity = input.ReadFloat();
            break;
          }
          case 85: {
            SpecularIntensity = input.ReadFloat();
            break;
          }
          case 90: {
            AlbedoTexture = input.ReadString();
            break;
          }
          case 98: {
            AlphaTexture = input.ReadString();
            break;
          }
          case 106: {
            EmissiveTexture = input.ReadString();
            break;
          }
          case 114: {
            BumpTexture = input.ReadString();
            break;
          }
          case 125: {
            TransparencyMode = input.ReadFloat();
            break;
          }
          case 128: {
            CastShadows = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            AlphaTest = input.ReadFloat();
            break;
          }
          case 18: {
            if (albedoColor_ == null) {
              AlbedoColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(AlbedoColor);
            break;
          }
          case 26: {
            if (emissiveColor_ == null) {
              EmissiveColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(EmissiveColor);
            break;
          }
          case 37: {
            Metallic = input.ReadFloat();
            break;
          }
          case 45: {
            Roughness = input.ReadFloat();
            break;
          }
          case 50: {
            if (reflectivityColor_ == null) {
              ReflectivityColor = new global::Decentraland.Common.Color3();
            }
            input.ReadMessage(ReflectivityColor);
            break;
          }
          case 61: {
            DirectIntensity = input.ReadFloat();
            break;
          }
          case 69: {
            MicroSurface = input.ReadFloat();
            break;
          }
          case 77: {
            EmissiveIntensity = input.ReadFloat();
            break;
          }
          case 85: {
            SpecularIntensity = input.ReadFloat();
            break;
          }
          case 90: {
            AlbedoTexture = input.ReadString();
            break;
          }
          case 98: {
            AlphaTexture = input.ReadString();
            break;
          }
          case 106: {
            EmissiveTexture = input.ReadString();
            break;
          }
          case 114: {
            BumpTexture = input.ReadString();
            break;
          }
          case 125: {
            TransparencyMode = input.ReadFloat();
            break;
          }
          case 128: {
            CastShadows = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.BASIC_MATERIAL
  /// </summary>
  public sealed partial class ECS6ComponentBasicMaterial : pb::IMessage<ECS6ComponentBasicMaterial>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentBasicMaterial> _parser = new pb::MessageParser<ECS6ComponentBasicMaterial>(() => new ECS6ComponentBasicMaterial());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentBasicMaterial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBasicMaterial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBasicMaterial(ECS6ComponentBasicMaterial other) : this() {
      _hasBits0 = other._hasBits0;
      alphaTest_ = other.alphaTest_;
      texture_ = other.texture_;
      castShadows_ = other.castShadows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentBasicMaterial Clone() {
      return new ECS6ComponentBasicMaterial(this);
    }

    /// <summary>Field number for the "alpha_test" field.</summary>
    public const int AlphaTestFieldNumber = 1;
    private float alphaTest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AlphaTest {
      get { if ((_hasBits0 & 1) != 0) { return alphaTest_; } else { return 0F; } }
      set {
        _hasBits0 |= 1;
        alphaTest_ = value;
      }
    }
    /// <summary>Gets whether the "alpha_test" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlphaTest {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "alpha_test" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlphaTest() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "texture" field.</summary>
    public const int TextureFieldNumber = 2;
    private string texture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Texture {
      get { return texture_ ?? ""; }
      set {
        texture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "texture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTexture {
      get { return texture_ != null; }
    }
    /// <summary>Clears the value of the "texture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTexture() {
      texture_ = null;
    }

    /// <summary>Field number for the "cast_shadows" field.</summary>
    public const int CastShadowsFieldNumber = 3;
    private bool castShadows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CastShadows {
      get { if ((_hasBits0 & 2) != 0) { return castShadows_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        castShadows_ = value;
      }
    }
    /// <summary>Gets whether the "cast_shadows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCastShadows {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cast_shadows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCastShadows() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentBasicMaterial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentBasicMaterial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AlphaTest, other.AlphaTest)) return false;
      if (Texture != other.Texture) return false;
      if (CastShadows != other.CastShadows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAlphaTest) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AlphaTest);
      if (HasTexture) hash ^= Texture.GetHashCode();
      if (HasCastShadows) hash ^= CastShadows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAlphaTest) {
        output.WriteRawTag(13);
        output.WriteFloat(AlphaTest);
      }
      if (HasTexture) {
        output.WriteRawTag(18);
        output.WriteString(Texture);
      }
      if (HasCastShadows) {
        output.WriteRawTag(24);
        output.WriteBool(CastShadows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAlphaTest) {
        output.WriteRawTag(13);
        output.WriteFloat(AlphaTest);
      }
      if (HasTexture) {
        output.WriteRawTag(18);
        output.WriteString(Texture);
      }
      if (HasCastShadows) {
        output.WriteRawTag(24);
        output.WriteBool(CastShadows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAlphaTest) {
        size += 1 + 4;
      }
      if (HasTexture) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Texture);
      }
      if (HasCastShadows) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentBasicMaterial other) {
      if (other == null) {
        return;
      }
      if (other.HasAlphaTest) {
        AlphaTest = other.AlphaTest;
      }
      if (other.HasTexture) {
        Texture = other.Texture;
      }
      if (other.HasCastShadows) {
        CastShadows = other.CastShadows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AlphaTest = input.ReadFloat();
            break;
          }
          case 18: {
            Texture = input.ReadString();
            break;
          }
          case 24: {
            CastShadows = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            AlphaTest = input.ReadFloat();
            break;
          }
          case 18: {
            Texture = input.ReadString();
            break;
          }
          case 24: {
            CastShadows = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.UUID_CALLBACK
  /// </summary>
  public sealed partial class ECS6ComponentUuidCallback : pb::IMessage<ECS6ComponentUuidCallback>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUuidCallback> _parser = new pb::MessageParser<ECS6ComponentUuidCallback>(() => new ECS6ComponentUuidCallback());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUuidCallback> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUuidCallback() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUuidCallback(ECS6ComponentUuidCallback other) : this() {
      _hasBits0 = other._hasBits0;
      button_ = other.button_;
      hoverText_ = other.hoverText_;
      distance_ = other.distance_;
      showFeedback_ = other.showFeedback_;
      type_ = other.type_;
      uuid_ = other.uuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUuidCallback Clone() {
      return new ECS6ComponentUuidCallback(this);
    }

    /// <summary>Field number for the "button" field.</summary>
    public const int ButtonFieldNumber = 1;
    private string button_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Button {
      get { return button_ ?? ""; }
      set {
        button_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "button" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasButton {
      get { return button_ != null; }
    }
    /// <summary>Clears the value of the "button" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearButton() {
      button_ = null;
    }

    /// <summary>Field number for the "hover_text" field.</summary>
    public const int HoverTextFieldNumber = 2;
    private string hoverText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HoverText {
      get { return hoverText_ ?? ""; }
      set {
        hoverText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hover_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHoverText {
      get { return hoverText_ != null; }
    }
    /// <summary>Clears the value of the "hover_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHoverText() {
      hoverText_ = null;
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 3;
    private float distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Distance {
      get { if ((_hasBits0 & 1) != 0) { return distance_; } else { return 0F; } }
      set {
        _hasBits0 |= 1;
        distance_ = value;
      }
    }
    /// <summary>Gets whether the "distance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDistance {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "distance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDistance() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "show_feedback" field.</summary>
    public const int ShowFeedbackFieldNumber = 4;
    private bool showFeedback_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShowFeedback {
      get { if ((_hasBits0 & 2) != 0) { return showFeedback_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        showFeedback_ = value;
      }
    }
    /// <summary>Gets whether the "show_feedback" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShowFeedback {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "show_feedback" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShowFeedback() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_ ?? ""; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 6;
    private string uuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uuid {
      get { return uuid_ ?? ""; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "uuid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUuid {
      get { return uuid_ != null; }
    }
    /// <summary>Clears the value of the "uuid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUuid() {
      uuid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUuidCallback);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUuidCallback other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Button != other.Button) return false;
      if (HoverText != other.HoverText) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
      if (ShowFeedback != other.ShowFeedback) return false;
      if (Type != other.Type) return false;
      if (Uuid != other.Uuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasButton) hash ^= Button.GetHashCode();
      if (HasHoverText) hash ^= HoverText.GetHashCode();
      if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
      if (HasShowFeedback) hash ^= ShowFeedback.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasUuid) hash ^= Uuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasButton) {
        output.WriteRawTag(10);
        output.WriteString(Button);
      }
      if (HasHoverText) {
        output.WriteRawTag(18);
        output.WriteString(HoverText);
      }
      if (HasDistance) {
        output.WriteRawTag(29);
        output.WriteFloat(Distance);
      }
      if (HasShowFeedback) {
        output.WriteRawTag(32);
        output.WriteBool(ShowFeedback);
      }
      if (HasType) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (HasUuid) {
        output.WriteRawTag(50);
        output.WriteString(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasButton) {
        output.WriteRawTag(10);
        output.WriteString(Button);
      }
      if (HasHoverText) {
        output.WriteRawTag(18);
        output.WriteString(HoverText);
      }
      if (HasDistance) {
        output.WriteRawTag(29);
        output.WriteFloat(Distance);
      }
      if (HasShowFeedback) {
        output.WriteRawTag(32);
        output.WriteBool(ShowFeedback);
      }
      if (HasType) {
        output.WriteRawTag(42);
        output.WriteString(Type);
      }
      if (HasUuid) {
        output.WriteRawTag(50);
        output.WriteString(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasButton) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Button);
      }
      if (HasHoverText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HoverText);
      }
      if (HasDistance) {
        size += 1 + 4;
      }
      if (HasShowFeedback) {
        size += 1 + 1;
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasUuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUuidCallback other) {
      if (other == null) {
        return;
      }
      if (other.HasButton) {
        Button = other.Button;
      }
      if (other.HasHoverText) {
        HoverText = other.HoverText;
      }
      if (other.HasDistance) {
        Distance = other.Distance;
      }
      if (other.HasShowFeedback) {
        ShowFeedback = other.ShowFeedback;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasUuid) {
        Uuid = other.Uuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Button = input.ReadString();
            break;
          }
          case 18: {
            HoverText = input.ReadString();
            break;
          }
          case 29: {
            Distance = input.ReadFloat();
            break;
          }
          case 32: {
            ShowFeedback = input.ReadBool();
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            Uuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Button = input.ReadString();
            break;
          }
          case 18: {
            HoverText = input.ReadString();
            break;
          }
          case 29: {
            Distance = input.ReadFloat();
            break;
          }
          case 32: {
            ShowFeedback = input.ReadBool();
            break;
          }
          case 42: {
            Type = input.ReadString();
            break;
          }
          case 50: {
            Uuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.SMART_ITEM)
  /// </summary>
  public sealed partial class ECS6ComponentSmartItem : pb::IMessage<ECS6ComponentSmartItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentSmartItem> _parser = new pb::MessageParser<ECS6ComponentSmartItem>(() => new ECS6ComponentSmartItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentSmartItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentSmartItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentSmartItem(ECS6ComponentSmartItem other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentSmartItem Clone() {
      return new ECS6ComponentSmartItem(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentSmartItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentSmartItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentSmartItem other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.VIDEO_CLIP
  /// </summary>
  public sealed partial class ECS6ComponentVideoClip : pb::IMessage<ECS6ComponentVideoClip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentVideoClip> _parser = new pb::MessageParser<ECS6ComponentVideoClip>(() => new ECS6ComponentVideoClip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentVideoClip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentVideoClip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentVideoClip(ECS6ComponentVideoClip other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentVideoClip Clone() {
      return new ECS6ComponentVideoClip(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? ""; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentVideoClip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentVideoClip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentVideoClip other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.VIDEO_TEXTURE
  /// </summary>
  public sealed partial class ECS6ComponentVideoTexture : pb::IMessage<ECS6ComponentVideoTexture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentVideoTexture> _parser = new pb::MessageParser<ECS6ComponentVideoTexture>(() => new ECS6ComponentVideoTexture());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentVideoTexture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentVideoTexture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentVideoTexture(ECS6ComponentVideoTexture other) : this() {
      _hasBits0 = other._hasBits0;
      samplingMode_ = other.samplingMode_;
      wrap_ = other.wrap_;
      volume_ = other.volume_;
      playbackRate_ = other.playbackRate_;
      seek_ = other.seek_;
      playing_ = other.playing_;
      loop_ = other.loop_;
      videoClipId_ = other.videoClipId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentVideoTexture Clone() {
      return new ECS6ComponentVideoTexture(this);
    }

    /// <summary>Field number for the "sampling_mode" field.</summary>
    public const int SamplingModeFieldNumber = 1;
    private int samplingMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SamplingMode {
      get { if ((_hasBits0 & 1) != 0) { return samplingMode_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        samplingMode_ = value;
      }
    }
    /// <summary>Gets whether the "sampling_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSamplingMode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sampling_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSamplingMode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "wrap" field.</summary>
    public const int WrapFieldNumber = 2;
    private int wrap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Wrap {
      get { if ((_hasBits0 & 2) != 0) { return wrap_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        wrap_ = value;
      }
    }
    /// <summary>Gets whether the "wrap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWrap {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "wrap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWrap() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 3;
    private float volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Volume {
      get { if ((_hasBits0 & 4) != 0) { return volume_; } else { return 0F; } }
      set {
        _hasBits0 |= 4;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "playback_rate" field.</summary>
    public const int PlaybackRateFieldNumber = 4;
    private float playbackRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PlaybackRate {
      get { if ((_hasBits0 & 8) != 0) { return playbackRate_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        playbackRate_ = value;
      }
    }
    /// <summary>Gets whether the "playback_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaybackRate {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "playback_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaybackRate() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "seek" field.</summary>
    public const int SeekFieldNumber = 5;
    private float seek_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Seek {
      get { if ((_hasBits0 & 16) != 0) { return seek_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        seek_ = value;
      }
    }
    /// <summary>Gets whether the "seek" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSeek {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "seek" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSeek() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "playing" field.</summary>
    public const int PlayingFieldNumber = 6;
    private bool playing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Playing {
      get { if ((_hasBits0 & 32) != 0) { return playing_; } else { return false; } }
      set {
        _hasBits0 |= 32;
        playing_ = value;
      }
    }
    /// <summary>Gets whether the "playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaying {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaying() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "loop" field.</summary>
    public const int LoopFieldNumber = 7;
    private bool loop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Loop {
      get { if ((_hasBits0 & 64) != 0) { return loop_; } else { return false; } }
      set {
        _hasBits0 |= 64;
        loop_ = value;
      }
    }
    /// <summary>Gets whether the "loop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoop {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "loop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoop() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "video_clip_id" field.</summary>
    public const int VideoClipIdFieldNumber = 8;
    private string videoClipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VideoClipId {
      get { return videoClipId_ ?? ""; }
      set {
        videoClipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "video_clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVideoClipId {
      get { return videoClipId_ != null; }
    }
    /// <summary>Clears the value of the "video_clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVideoClipId() {
      videoClipId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentVideoTexture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentVideoTexture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SamplingMode != other.SamplingMode) return false;
      if (Wrap != other.Wrap) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlaybackRate, other.PlaybackRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Seek, other.Seek)) return false;
      if (Playing != other.Playing) return false;
      if (Loop != other.Loop) return false;
      if (VideoClipId != other.VideoClipId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSamplingMode) hash ^= SamplingMode.GetHashCode();
      if (HasWrap) hash ^= Wrap.GetHashCode();
      if (HasVolume) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (HasPlaybackRate) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlaybackRate);
      if (HasSeek) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Seek);
      if (HasPlaying) hash ^= Playing.GetHashCode();
      if (HasLoop) hash ^= Loop.GetHashCode();
      if (HasVideoClipId) hash ^= VideoClipId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSamplingMode) {
        output.WriteRawTag(8);
        output.WriteInt32(SamplingMode);
      }
      if (HasWrap) {
        output.WriteRawTag(16);
        output.WriteInt32(Wrap);
      }
      if (HasVolume) {
        output.WriteRawTag(29);
        output.WriteFloat(Volume);
      }
      if (HasPlaybackRate) {
        output.WriteRawTag(37);
        output.WriteFloat(PlaybackRate);
      }
      if (HasSeek) {
        output.WriteRawTag(45);
        output.WriteFloat(Seek);
      }
      if (HasPlaying) {
        output.WriteRawTag(48);
        output.WriteBool(Playing);
      }
      if (HasLoop) {
        output.WriteRawTag(56);
        output.WriteBool(Loop);
      }
      if (HasVideoClipId) {
        output.WriteRawTag(66);
        output.WriteString(VideoClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSamplingMode) {
        output.WriteRawTag(8);
        output.WriteInt32(SamplingMode);
      }
      if (HasWrap) {
        output.WriteRawTag(16);
        output.WriteInt32(Wrap);
      }
      if (HasVolume) {
        output.WriteRawTag(29);
        output.WriteFloat(Volume);
      }
      if (HasPlaybackRate) {
        output.WriteRawTag(37);
        output.WriteFloat(PlaybackRate);
      }
      if (HasSeek) {
        output.WriteRawTag(45);
        output.WriteFloat(Seek);
      }
      if (HasPlaying) {
        output.WriteRawTag(48);
        output.WriteBool(Playing);
      }
      if (HasLoop) {
        output.WriteRawTag(56);
        output.WriteBool(Loop);
      }
      if (HasVideoClipId) {
        output.WriteRawTag(66);
        output.WriteString(VideoClipId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSamplingMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SamplingMode);
      }
      if (HasWrap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Wrap);
      }
      if (HasVolume) {
        size += 1 + 4;
      }
      if (HasPlaybackRate) {
        size += 1 + 4;
      }
      if (HasSeek) {
        size += 1 + 4;
      }
      if (HasPlaying) {
        size += 1 + 1;
      }
      if (HasLoop) {
        size += 1 + 1;
      }
      if (HasVideoClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VideoClipId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentVideoTexture other) {
      if (other == null) {
        return;
      }
      if (other.HasSamplingMode) {
        SamplingMode = other.SamplingMode;
      }
      if (other.HasWrap) {
        Wrap = other.Wrap;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasPlaybackRate) {
        PlaybackRate = other.PlaybackRate;
      }
      if (other.HasSeek) {
        Seek = other.Seek;
      }
      if (other.HasPlaying) {
        Playing = other.Playing;
      }
      if (other.HasLoop) {
        Loop = other.Loop;
      }
      if (other.HasVideoClipId) {
        VideoClipId = other.VideoClipId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SamplingMode = input.ReadInt32();
            break;
          }
          case 16: {
            Wrap = input.ReadInt32();
            break;
          }
          case 29: {
            Volume = input.ReadFloat();
            break;
          }
          case 37: {
            PlaybackRate = input.ReadFloat();
            break;
          }
          case 45: {
            Seek = input.ReadFloat();
            break;
          }
          case 48: {
            Playing = input.ReadBool();
            break;
          }
          case 56: {
            Loop = input.ReadBool();
            break;
          }
          case 66: {
            VideoClipId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SamplingMode = input.ReadInt32();
            break;
          }
          case 16: {
            Wrap = input.ReadInt32();
            break;
          }
          case 29: {
            Volume = input.ReadFloat();
            break;
          }
          case 37: {
            PlaybackRate = input.ReadFloat();
            break;
          }
          case 45: {
            Seek = input.ReadFloat();
            break;
          }
          case 48: {
            Playing = input.ReadBool();
            break;
          }
          case 56: {
            Loop = input.ReadBool();
            break;
          }
          case 66: {
            VideoClipId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ECS6ComponentVideoTexture message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum VideoStatus {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("ERROR")] Error = 1,
        [pbr::OriginalName("LOADING")] Loading = 2,
        [pbr::OriginalName("READY")] Ready = 3,
        [pbr::OriginalName("PLAYING")] Playing = 4,
        [pbr::OriginalName("BUFFERING")] Buffering = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// CLASS_ID.CAMERA_MODE_AREA
  /// </summary>
  public sealed partial class ECS6ComponentCameraModeArea : pb::IMessage<ECS6ComponentCameraModeArea>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentCameraModeArea> _parser = new pb::MessageParser<ECS6ComponentCameraModeArea>(() => new ECS6ComponentCameraModeArea());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentCameraModeArea> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCameraModeArea() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCameraModeArea(ECS6ComponentCameraModeArea other) : this() {
      area_ = other.area_ != null ? other.area_.Clone() : null;
      cameraMode_ = other.cameraMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentCameraModeArea Clone() {
      return new ECS6ComponentCameraModeArea(this);
    }

    /// <summary>Field number for the "area" field.</summary>
    public const int AreaFieldNumber = 1;
    private global::Decentraland.Sdk.Ecs6.Area area_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.Area Area {
      get { return area_; }
      set {
        area_ = value;
      }
    }

    /// <summary>Field number for the "camera_mode" field.</summary>
    public const int CameraModeFieldNumber = 2;
    private global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode cameraMode_ = global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode.CmFirstPerson;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode CameraMode {
      get { return cameraMode_; }
      set {
        cameraMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentCameraModeArea);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentCameraModeArea other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Area, other.Area)) return false;
      if (CameraMode != other.CameraMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (area_ != null) hash ^= Area.GetHashCode();
      if (CameraMode != global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode.CmFirstPerson) hash ^= CameraMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (area_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Area);
      }
      if (CameraMode != global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode.CmFirstPerson) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CameraMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (area_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Area);
      }
      if (CameraMode != global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode.CmFirstPerson) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CameraMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (area_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Area);
      }
      if (CameraMode != global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode.CmFirstPerson) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CameraMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentCameraModeArea other) {
      if (other == null) {
        return;
      }
      if (other.area_ != null) {
        if (area_ == null) {
          Area = new global::Decentraland.Sdk.Ecs6.Area();
        }
        Area.MergeFrom(other.Area);
      }
      if (other.CameraMode != global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode.CmFirstPerson) {
        CameraMode = other.CameraMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (area_ == null) {
              Area = new global::Decentraland.Sdk.Ecs6.Area();
            }
            input.ReadMessage(Area);
            break;
          }
          case 16: {
            CameraMode = (global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (area_ == null) {
              Area = new global::Decentraland.Sdk.Ecs6.Area();
            }
            input.ReadMessage(Area);
            break;
          }
          case 16: {
            CameraMode = (global::Decentraland.Sdk.Ecs6.ECS6ComponentCameraModeArea.Types.CameraMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ECS6ComponentCameraModeArea message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CameraMode {
        [pbr::OriginalName("CM_FIRST_PERSON")] CmFirstPerson = 0,
        [pbr::OriginalName("CM_THIRD_PERSON")] CmThirdPerson = 1,
        [pbr::OriginalName("CM_BUILDING_TOOL_GOD_MODE")] CmBuildingToolGodMode = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// CLASS_ID.AVATAR_TEXTURE
  /// </summary>
  public sealed partial class ECS6ComponentAvatarTexture : pb::IMessage<ECS6ComponentAvatarTexture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentAvatarTexture> _parser = new pb::MessageParser<ECS6ComponentAvatarTexture>(() => new ECS6ComponentAvatarTexture());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentAvatarTexture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarTexture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarTexture(ECS6ComponentAvatarTexture other) : this() {
      _hasBits0 = other._hasBits0;
      samplingMode_ = other.samplingMode_;
      wrap_ = other.wrap_;
      hasAlpha_ = other.hasAlpha_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarTexture Clone() {
      return new ECS6ComponentAvatarTexture(this);
    }

    /// <summary>Field number for the "sampling_mode" field.</summary>
    public const int SamplingModeFieldNumber = 1;
    private int samplingMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SamplingMode {
      get { if ((_hasBits0 & 1) != 0) { return samplingMode_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        samplingMode_ = value;
      }
    }
    /// <summary>Gets whether the "sampling_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSamplingMode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sampling_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSamplingMode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "wrap" field.</summary>
    public const int WrapFieldNumber = 2;
    private int wrap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Wrap {
      get { if ((_hasBits0 & 2) != 0) { return wrap_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        wrap_ = value;
      }
    }
    /// <summary>Gets whether the "wrap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWrap {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "wrap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWrap() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "has_alpha" field.</summary>
    public const int HasAlphaFieldNumber = 3;
    private bool hasAlpha_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlpha {
      get { if ((_hasBits0 & 4) != 0) { return hasAlpha_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        hasAlpha_ = value;
      }
    }
    /// <summary>Gets whether the "has_alpha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHasAlpha {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "has_alpha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHasAlpha() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private string userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_ ?? ""; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return userId_ != null; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      userId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentAvatarTexture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentAvatarTexture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SamplingMode != other.SamplingMode) return false;
      if (Wrap != other.Wrap) return false;
      if (HasAlpha != other.HasAlpha) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSamplingMode) hash ^= SamplingMode.GetHashCode();
      if (HasWrap) hash ^= Wrap.GetHashCode();
      if (HasHasAlpha) hash ^= HasAlpha.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSamplingMode) {
        output.WriteRawTag(8);
        output.WriteInt32(SamplingMode);
      }
      if (HasWrap) {
        output.WriteRawTag(16);
        output.WriteInt32(Wrap);
      }
      if (HasHasAlpha) {
        output.WriteRawTag(24);
        output.WriteBool(HasAlpha);
      }
      if (HasUserId) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSamplingMode) {
        output.WriteRawTag(8);
        output.WriteInt32(SamplingMode);
      }
      if (HasWrap) {
        output.WriteRawTag(16);
        output.WriteInt32(Wrap);
      }
      if (HasHasAlpha) {
        output.WriteRawTag(24);
        output.WriteBool(HasAlpha);
      }
      if (HasUserId) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSamplingMode) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SamplingMode);
      }
      if (HasWrap) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Wrap);
      }
      if (HasHasAlpha) {
        size += 1 + 1;
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentAvatarTexture other) {
      if (other == null) {
        return;
      }
      if (other.HasSamplingMode) {
        SamplingMode = other.SamplingMode;
      }
      if (other.HasWrap) {
        Wrap = other.Wrap;
      }
      if (other.HasHasAlpha) {
        HasAlpha = other.HasAlpha;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SamplingMode = input.ReadInt32();
            break;
          }
          case 16: {
            Wrap = input.ReadInt32();
            break;
          }
          case 24: {
            HasAlpha = input.ReadBool();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SamplingMode = input.ReadInt32();
            break;
          }
          case 16: {
            Wrap = input.ReadInt32();
            break;
          }
          case 24: {
            HasAlpha = input.ReadBool();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.AUDIO_CLIP
  /// </summary>
  public sealed partial class ECS6ComponentAudioClip : pb::IMessage<ECS6ComponentAudioClip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentAudioClip> _parser = new pb::MessageParser<ECS6ComponentAudioClip>(() => new ECS6ComponentAudioClip());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentAudioClip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioClip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioClip(ECS6ComponentAudioClip other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      loop_ = other.loop_;
      loadingCompleteEventId_ = other.loadingCompleteEventId_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioClip Clone() {
      return new ECS6ComponentAudioClip(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? ""; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "loop" field.</summary>
    public const int LoopFieldNumber = 2;
    private bool loop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Loop {
      get { if ((_hasBits0 & 1) != 0) { return loop_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        loop_ = value;
      }
    }
    /// <summary>Gets whether the "loop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoop {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "loop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoop() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "loading_complete_event_id" field.</summary>
    public const int LoadingCompleteEventIdFieldNumber = 3;
    private string loadingCompleteEventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LoadingCompleteEventId {
      get { return loadingCompleteEventId_ ?? ""; }
      set {
        loadingCompleteEventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "loading_complete_event_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoadingCompleteEventId {
      get { return loadingCompleteEventId_ != null; }
    }
    /// <summary>Clears the value of the "loading_complete_event_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoadingCompleteEventId() {
      loadingCompleteEventId_ = null;
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 4;
    private float volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Volume {
      get { if ((_hasBits0 & 2) != 0) { return volume_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentAudioClip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentAudioClip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Loop != other.Loop) return false;
      if (LoadingCompleteEventId != other.LoadingCompleteEventId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasLoop) hash ^= Loop.GetHashCode();
      if (HasLoadingCompleteEventId) hash ^= LoadingCompleteEventId.GetHashCode();
      if (HasVolume) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasLoop) {
        output.WriteRawTag(16);
        output.WriteBool(Loop);
      }
      if (HasLoadingCompleteEventId) {
        output.WriteRawTag(26);
        output.WriteString(LoadingCompleteEventId);
      }
      if (HasVolume) {
        output.WriteRawTag(37);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasLoop) {
        output.WriteRawTag(16);
        output.WriteBool(Loop);
      }
      if (HasLoadingCompleteEventId) {
        output.WriteRawTag(26);
        output.WriteString(LoadingCompleteEventId);
      }
      if (HasVolume) {
        output.WriteRawTag(37);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasLoop) {
        size += 1 + 1;
      }
      if (HasLoadingCompleteEventId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoadingCompleteEventId);
      }
      if (HasVolume) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentAudioClip other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasLoop) {
        Loop = other.Loop;
      }
      if (other.HasLoadingCompleteEventId) {
        LoadingCompleteEventId = other.LoadingCompleteEventId;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            Loop = input.ReadBool();
            break;
          }
          case 26: {
            LoadingCompleteEventId = input.ReadString();
            break;
          }
          case 37: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            Loop = input.ReadBool();
            break;
          }
          case 26: {
            LoadingCompleteEventId = input.ReadString();
            break;
          }
          case 37: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.AUDIO_SOURCE
  /// </summary>
  public sealed partial class ECS6ComponentAudioSource : pb::IMessage<ECS6ComponentAudioSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentAudioSource> _parser = new pb::MessageParser<ECS6ComponentAudioSource>(() => new ECS6ComponentAudioSource());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentAudioSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioSource(ECS6ComponentAudioSource other) : this() {
      _hasBits0 = other._hasBits0;
      audioClipId_ = other.audioClipId_;
      loop_ = other.loop_;
      volume_ = other.volume_;
      playing_ = other.playing_;
      pitch_ = other.pitch_;
      playedAtTimestamp_ = other.playedAtTimestamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioSource Clone() {
      return new ECS6ComponentAudioSource(this);
    }

    /// <summary>Field number for the "audio_clip_id" field.</summary>
    public const int AudioClipIdFieldNumber = 1;
    private string audioClipId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AudioClipId {
      get { return audioClipId_ ?? ""; }
      set {
        audioClipId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "audio_clip_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioClipId {
      get { return audioClipId_ != null; }
    }
    /// <summary>Clears the value of the "audio_clip_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioClipId() {
      audioClipId_ = null;
    }

    /// <summary>Field number for the "loop" field.</summary>
    public const int LoopFieldNumber = 2;
    private bool loop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Loop {
      get { if ((_hasBits0 & 1) != 0) { return loop_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        loop_ = value;
      }
    }
    /// <summary>Gets whether the "loop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLoop {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "loop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLoop() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 3;
    private float volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Volume {
      get { if ((_hasBits0 & 2) != 0) { return volume_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "playing" field.</summary>
    public const int PlayingFieldNumber = 4;
    private bool playing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Playing {
      get { if ((_hasBits0 & 4) != 0) { return playing_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        playing_ = value;
      }
    }
    /// <summary>Gets whether the "playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaying {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaying() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "pitch" field.</summary>
    public const int PitchFieldNumber = 5;
    private float pitch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Pitch {
      get { if ((_hasBits0 & 8) != 0) { return pitch_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        pitch_ = value;
      }
    }
    /// <summary>Gets whether the "pitch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPitch {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "pitch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPitch() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "played_at_timestamp" field.</summary>
    public const int PlayedAtTimestampFieldNumber = 6;
    private int playedAtTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayedAtTimestamp {
      get { if ((_hasBits0 & 16) != 0) { return playedAtTimestamp_; } else { return 0; } }
      set {
        _hasBits0 |= 16;
        playedAtTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "played_at_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlayedAtTimestamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "played_at_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlayedAtTimestamp() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentAudioSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentAudioSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AudioClipId != other.AudioClipId) return false;
      if (Loop != other.Loop) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      if (Playing != other.Playing) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Pitch, other.Pitch)) return false;
      if (PlayedAtTimestamp != other.PlayedAtTimestamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAudioClipId) hash ^= AudioClipId.GetHashCode();
      if (HasLoop) hash ^= Loop.GetHashCode();
      if (HasVolume) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (HasPlaying) hash ^= Playing.GetHashCode();
      if (HasPitch) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Pitch);
      if (HasPlayedAtTimestamp) hash ^= PlayedAtTimestamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAudioClipId) {
        output.WriteRawTag(10);
        output.WriteString(AudioClipId);
      }
      if (HasLoop) {
        output.WriteRawTag(16);
        output.WriteBool(Loop);
      }
      if (HasVolume) {
        output.WriteRawTag(29);
        output.WriteFloat(Volume);
      }
      if (HasPlaying) {
        output.WriteRawTag(32);
        output.WriteBool(Playing);
      }
      if (HasPitch) {
        output.WriteRawTag(45);
        output.WriteFloat(Pitch);
      }
      if (HasPlayedAtTimestamp) {
        output.WriteRawTag(48);
        output.WriteInt32(PlayedAtTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAudioClipId) {
        output.WriteRawTag(10);
        output.WriteString(AudioClipId);
      }
      if (HasLoop) {
        output.WriteRawTag(16);
        output.WriteBool(Loop);
      }
      if (HasVolume) {
        output.WriteRawTag(29);
        output.WriteFloat(Volume);
      }
      if (HasPlaying) {
        output.WriteRawTag(32);
        output.WriteBool(Playing);
      }
      if (HasPitch) {
        output.WriteRawTag(45);
        output.WriteFloat(Pitch);
      }
      if (HasPlayedAtTimestamp) {
        output.WriteRawTag(48);
        output.WriteInt32(PlayedAtTimestamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAudioClipId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AudioClipId);
      }
      if (HasLoop) {
        size += 1 + 1;
      }
      if (HasVolume) {
        size += 1 + 4;
      }
      if (HasPlaying) {
        size += 1 + 1;
      }
      if (HasPitch) {
        size += 1 + 4;
      }
      if (HasPlayedAtTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayedAtTimestamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentAudioSource other) {
      if (other == null) {
        return;
      }
      if (other.HasAudioClipId) {
        AudioClipId = other.AudioClipId;
      }
      if (other.HasLoop) {
        Loop = other.Loop;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasPlaying) {
        Playing = other.Playing;
      }
      if (other.HasPitch) {
        Pitch = other.Pitch;
      }
      if (other.HasPlayedAtTimestamp) {
        PlayedAtTimestamp = other.PlayedAtTimestamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AudioClipId = input.ReadString();
            break;
          }
          case 16: {
            Loop = input.ReadBool();
            break;
          }
          case 29: {
            Volume = input.ReadFloat();
            break;
          }
          case 32: {
            Playing = input.ReadBool();
            break;
          }
          case 45: {
            Pitch = input.ReadFloat();
            break;
          }
          case 48: {
            PlayedAtTimestamp = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AudioClipId = input.ReadString();
            break;
          }
          case 16: {
            Loop = input.ReadBool();
            break;
          }
          case 29: {
            Volume = input.ReadFloat();
            break;
          }
          case 32: {
            Playing = input.ReadBool();
            break;
          }
          case 45: {
            Pitch = input.ReadFloat();
            break;
          }
          case 48: {
            PlayedAtTimestamp = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.AUDIO_STREAM
  /// </summary>
  public sealed partial class ECS6ComponentAudioStream : pb::IMessage<ECS6ComponentAudioStream>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentAudioStream> _parser = new pb::MessageParser<ECS6ComponentAudioStream>(() => new ECS6ComponentAudioStream());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentAudioStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioStream(ECS6ComponentAudioStream other) : this() {
      _hasBits0 = other._hasBits0;
      url_ = other.url_;
      playing_ = other.playing_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAudioStream Clone() {
      return new ECS6ComponentAudioStream(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_ ?? ""; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "playing" field.</summary>
    public const int PlayingFieldNumber = 2;
    private bool playing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Playing {
      get { if ((_hasBits0 & 1) != 0) { return playing_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        playing_ = value;
      }
    }
    /// <summary>Gets whether the "playing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaying {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "playing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaying() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 3;
    private float volume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Volume {
      get { if ((_hasBits0 & 2) != 0) { return volume_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        volume_ = value;
      }
    }
    /// <summary>Gets whether the "volume" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVolume {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "volume" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVolume() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentAudioStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentAudioStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Playing != other.Playing) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasPlaying) hash ^= Playing.GetHashCode();
      if (HasVolume) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasPlaying) {
        output.WriteRawTag(16);
        output.WriteBool(Playing);
      }
      if (HasVolume) {
        output.WriteRawTag(29);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUrl) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (HasPlaying) {
        output.WriteRawTag(16);
        output.WriteBool(Playing);
      }
      if (HasVolume) {
        output.WriteRawTag(29);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasPlaying) {
        size += 1 + 1;
      }
      if (HasVolume) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentAudioStream other) {
      if (other == null) {
        return;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasPlaying) {
        Playing = other.Playing;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            Playing = input.ReadBool();
            break;
          }
          case 29: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 16: {
            Playing = input.ReadBool();
            break;
          }
          case 29: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.AVATAR_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentAvatarShape : pb::IMessage<ECS6ComponentAvatarShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentAvatarShape> _parser = new pb::MessageParser<ECS6ComponentAvatarShape>(() => new ECS6ComponentAvatarShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentAvatarShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarShape(ECS6ComponentAvatarShape other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      expressionTriggerId_ = other.expressionTriggerId_;
      expressionTriggerTimestamp_ = other.expressionTriggerTimestamp_;
      bodyShape_ = other.bodyShape_;
      wearables_ = other.wearables_.Clone();
      emotes_ = other.emotes_.Clone();
      skinColor_ = other.skinColor_ != null ? other.skinColor_.Clone() : null;
      hairColor_ = other.hairColor_ != null ? other.hairColor_.Clone() : null;
      eyeColor_ = other.eyeColor_ != null ? other.eyeColor_.Clone() : null;
      useDummyModel_ = other.useDummyModel_;
      talking_ = other.talking_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentAvatarShape Clone() {
      return new ECS6ComponentAvatarShape(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "expression_trigger_id" field.</summary>
    public const int ExpressionTriggerIdFieldNumber = 3;
    private string expressionTriggerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExpressionTriggerId {
      get { return expressionTriggerId_ ?? ""; }
      set {
        expressionTriggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "expression_trigger_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpressionTriggerId {
      get { return expressionTriggerId_ != null; }
    }
    /// <summary>Clears the value of the "expression_trigger_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpressionTriggerId() {
      expressionTriggerId_ = null;
    }

    /// <summary>Field number for the "expression_trigger_timestamp" field.</summary>
    public const int ExpressionTriggerTimestampFieldNumber = 4;
    private long expressionTriggerTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpressionTriggerTimestamp {
      get { if ((_hasBits0 & 1) != 0) { return expressionTriggerTimestamp_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        expressionTriggerTimestamp_ = value;
      }
    }
    /// <summary>Gets whether the "expression_trigger_timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpressionTriggerTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "expression_trigger_timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpressionTriggerTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "body_shape" field.</summary>
    public const int BodyShapeFieldNumber = 5;
    private string bodyShape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BodyShape {
      get { return bodyShape_ ?? ""; }
      set {
        bodyShape_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "body_shape" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBodyShape {
      get { return bodyShape_ != null; }
    }
    /// <summary>Clears the value of the "body_shape" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBodyShape() {
      bodyShape_ = null;
    }

    /// <summary>Field number for the "wearables" field.</summary>
    public const int WearablesFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_wearables_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> wearables_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Wearables {
      get { return wearables_; }
    }

    /// <summary>Field number for the "emotes" field.</summary>
    public const int EmotesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Types.Emote> _repeated_emotes_codec
        = pb::FieldCodec.ForMessage(58, global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Types.Emote.Parser);
    private readonly pbc::RepeatedField<global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Types.Emote> emotes_ = new pbc::RepeatedField<global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Types.Emote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Types.Emote> Emotes {
      get { return emotes_; }
    }

    /// <summary>Field number for the "skin_color" field.</summary>
    public const int SkinColorFieldNumber = 8;
    private global::Decentraland.Common.Color4 skinColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 SkinColor {
      get { return skinColor_; }
      set {
        skinColor_ = value;
      }
    }

    /// <summary>Field number for the "hair_color" field.</summary>
    public const int HairColorFieldNumber = 9;
    private global::Decentraland.Common.Color4 hairColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 HairColor {
      get { return hairColor_; }
      set {
        hairColor_ = value;
      }
    }

    /// <summary>Field number for the "eye_color" field.</summary>
    public const int EyeColorFieldNumber = 10;
    private global::Decentraland.Common.Color4 eyeColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 EyeColor {
      get { return eyeColor_; }
      set {
        eyeColor_ = value;
      }
    }

    /// <summary>Field number for the "use_dummy_model" field.</summary>
    public const int UseDummyModelFieldNumber = 11;
    private bool useDummyModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseDummyModel {
      get { if ((_hasBits0 & 2) != 0) { return useDummyModel_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        useDummyModel_ = value;
      }
    }
    /// <summary>Gets whether the "use_dummy_model" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUseDummyModel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "use_dummy_model" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUseDummyModel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "talking" field.</summary>
    public const int TalkingFieldNumber = 12;
    private bool talking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Talking {
      get { if ((_hasBits0 & 4) != 0) { return talking_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        talking_ = value;
      }
    }
    /// <summary>Gets whether the "talking" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTalking {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "talking" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTalking() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentAvatarShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentAvatarShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (ExpressionTriggerId != other.ExpressionTriggerId) return false;
      if (ExpressionTriggerTimestamp != other.ExpressionTriggerTimestamp) return false;
      if (BodyShape != other.BodyShape) return false;
      if(!wearables_.Equals(other.wearables_)) return false;
      if(!emotes_.Equals(other.emotes_)) return false;
      if (!object.Equals(SkinColor, other.SkinColor)) return false;
      if (!object.Equals(HairColor, other.HairColor)) return false;
      if (!object.Equals(EyeColor, other.EyeColor)) return false;
      if (UseDummyModel != other.UseDummyModel) return false;
      if (Talking != other.Talking) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasExpressionTriggerId) hash ^= ExpressionTriggerId.GetHashCode();
      if (HasExpressionTriggerTimestamp) hash ^= ExpressionTriggerTimestamp.GetHashCode();
      if (HasBodyShape) hash ^= BodyShape.GetHashCode();
      hash ^= wearables_.GetHashCode();
      hash ^= emotes_.GetHashCode();
      if (skinColor_ != null) hash ^= SkinColor.GetHashCode();
      if (hairColor_ != null) hash ^= HairColor.GetHashCode();
      if (eyeColor_ != null) hash ^= EyeColor.GetHashCode();
      if (HasUseDummyModel) hash ^= UseDummyModel.GetHashCode();
      if (HasTalking) hash ^= Talking.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasExpressionTriggerId) {
        output.WriteRawTag(26);
        output.WriteString(ExpressionTriggerId);
      }
      if (HasExpressionTriggerTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ExpressionTriggerTimestamp);
      }
      if (HasBodyShape) {
        output.WriteRawTag(42);
        output.WriteString(BodyShape);
      }
      wearables_.WriteTo(output, _repeated_wearables_codec);
      emotes_.WriteTo(output, _repeated_emotes_codec);
      if (skinColor_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SkinColor);
      }
      if (hairColor_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HairColor);
      }
      if (eyeColor_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EyeColor);
      }
      if (HasUseDummyModel) {
        output.WriteRawTag(88);
        output.WriteBool(UseDummyModel);
      }
      if (HasTalking) {
        output.WriteRawTag(96);
        output.WriteBool(Talking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasExpressionTriggerId) {
        output.WriteRawTag(26);
        output.WriteString(ExpressionTriggerId);
      }
      if (HasExpressionTriggerTimestamp) {
        output.WriteRawTag(32);
        output.WriteInt64(ExpressionTriggerTimestamp);
      }
      if (HasBodyShape) {
        output.WriteRawTag(42);
        output.WriteString(BodyShape);
      }
      wearables_.WriteTo(ref output, _repeated_wearables_codec);
      emotes_.WriteTo(ref output, _repeated_emotes_codec);
      if (skinColor_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SkinColor);
      }
      if (hairColor_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HairColor);
      }
      if (eyeColor_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EyeColor);
      }
      if (HasUseDummyModel) {
        output.WriteRawTag(88);
        output.WriteBool(UseDummyModel);
      }
      if (HasTalking) {
        output.WriteRawTag(96);
        output.WriteBool(Talking);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasExpressionTriggerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpressionTriggerId);
      }
      if (HasExpressionTriggerTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpressionTriggerTimestamp);
      }
      if (HasBodyShape) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BodyShape);
      }
      size += wearables_.CalculateSize(_repeated_wearables_codec);
      size += emotes_.CalculateSize(_repeated_emotes_codec);
      if (skinColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkinColor);
      }
      if (hairColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HairColor);
      }
      if (eyeColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EyeColor);
      }
      if (HasUseDummyModel) {
        size += 1 + 1;
      }
      if (HasTalking) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentAvatarShape other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasExpressionTriggerId) {
        ExpressionTriggerId = other.ExpressionTriggerId;
      }
      if (other.HasExpressionTriggerTimestamp) {
        ExpressionTriggerTimestamp = other.ExpressionTriggerTimestamp;
      }
      if (other.HasBodyShape) {
        BodyShape = other.BodyShape;
      }
      wearables_.Add(other.wearables_);
      emotes_.Add(other.emotes_);
      if (other.skinColor_ != null) {
        if (skinColor_ == null) {
          SkinColor = new global::Decentraland.Common.Color4();
        }
        SkinColor.MergeFrom(other.SkinColor);
      }
      if (other.hairColor_ != null) {
        if (hairColor_ == null) {
          HairColor = new global::Decentraland.Common.Color4();
        }
        HairColor.MergeFrom(other.HairColor);
      }
      if (other.eyeColor_ != null) {
        if (eyeColor_ == null) {
          EyeColor = new global::Decentraland.Common.Color4();
        }
        EyeColor.MergeFrom(other.EyeColor);
      }
      if (other.HasUseDummyModel) {
        UseDummyModel = other.UseDummyModel;
      }
      if (other.HasTalking) {
        Talking = other.Talking;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            ExpressionTriggerId = input.ReadString();
            break;
          }
          case 32: {
            ExpressionTriggerTimestamp = input.ReadInt64();
            break;
          }
          case 42: {
            BodyShape = input.ReadString();
            break;
          }
          case 50: {
            wearables_.AddEntriesFrom(input, _repeated_wearables_codec);
            break;
          }
          case 58: {
            emotes_.AddEntriesFrom(input, _repeated_emotes_codec);
            break;
          }
          case 66: {
            if (skinColor_ == null) {
              SkinColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(SkinColor);
            break;
          }
          case 74: {
            if (hairColor_ == null) {
              HairColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(HairColor);
            break;
          }
          case 82: {
            if (eyeColor_ == null) {
              EyeColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(EyeColor);
            break;
          }
          case 88: {
            UseDummyModel = input.ReadBool();
            break;
          }
          case 96: {
            Talking = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            ExpressionTriggerId = input.ReadString();
            break;
          }
          case 32: {
            ExpressionTriggerTimestamp = input.ReadInt64();
            break;
          }
          case 42: {
            BodyShape = input.ReadString();
            break;
          }
          case 50: {
            wearables_.AddEntriesFrom(ref input, _repeated_wearables_codec);
            break;
          }
          case 58: {
            emotes_.AddEntriesFrom(ref input, _repeated_emotes_codec);
            break;
          }
          case 66: {
            if (skinColor_ == null) {
              SkinColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(SkinColor);
            break;
          }
          case 74: {
            if (hairColor_ == null) {
              HairColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(HairColor);
            break;
          }
          case 82: {
            if (eyeColor_ == null) {
              EyeColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(EyeColor);
            break;
          }
          case 88: {
            UseDummyModel = input.ReadBool();
            break;
          }
          case 96: {
            Talking = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ECS6ComponentAvatarShape message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Emote : pb::IMessage<Emote>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Emote> _parser = new pb::MessageParser<Emote>(() => new Emote());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Emote> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Decentraland.Sdk.Ecs6.ECS6ComponentAvatarShape.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Emote() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Emote(Emote other) : this() {
          _hasBits0 = other._hasBits0;
          slot_ = other.slot_;
          urn_ = other.urn_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Emote Clone() {
          return new Emote(this);
        }

        /// <summary>Field number for the "slot" field.</summary>
        public const int SlotFieldNumber = 1;
        private int slot_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Slot {
          get { if ((_hasBits0 & 1) != 0) { return slot_; } else { return 0; } }
          set {
            _hasBits0 |= 1;
            slot_ = value;
          }
        }
        /// <summary>Gets whether the "slot" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSlot {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "slot" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSlot() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "urn" field.</summary>
        public const int UrnFieldNumber = 2;
        private string urn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Urn {
          get { return urn_ ?? ""; }
          set {
            urn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "urn" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUrn {
          get { return urn_ != null; }
        }
        /// <summary>Clears the value of the "urn" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUrn() {
          urn_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Emote);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Emote other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Slot != other.Slot) return false;
          if (Urn != other.Urn) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSlot) hash ^= Slot.GetHashCode();
          if (HasUrn) hash ^= Urn.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSlot) {
            output.WriteRawTag(8);
            output.WriteInt32(Slot);
          }
          if (HasUrn) {
            output.WriteRawTag(18);
            output.WriteString(Urn);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSlot) {
            output.WriteRawTag(8);
            output.WriteInt32(Slot);
          }
          if (HasUrn) {
            output.WriteRawTag(18);
            output.WriteString(Urn);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSlot) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
          }
          if (HasUrn) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Urn);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Emote other) {
          if (other == null) {
            return;
          }
          if (other.HasSlot) {
            Slot = other.Slot;
          }
          if (other.HasUrn) {
            Urn = other.Urn;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Slot = input.ReadInt32();
                break;
              }
              case 18: {
                Urn = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Slot = input.ReadInt32();
                break;
              }
              case 18: {
                Urn = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// CLASS_ID.GIZMOS
  /// </summary>
  public sealed partial class ECS6ComponentGizmos : pb::IMessage<ECS6ComponentGizmos>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentGizmos> _parser = new pb::MessageParser<ECS6ComponentGizmos>(() => new ECS6ComponentGizmos());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentGizmos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentGizmos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentGizmos(ECS6ComponentGizmos other) : this() {
      _hasBits0 = other._hasBits0;
      position_ = other.position_;
      rotation_ = other.rotation_;
      scale_ = other.scale_;
      cycle_ = other.cycle_;
      selectedGizmo_ = other.selectedGizmo_;
      localReference_ = other.localReference_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentGizmos Clone() {
      return new ECS6ComponentGizmos(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private bool position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Position {
      get { if ((_hasBits0 & 1) != 0) { return position_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        position_ = value;
      }
    }
    /// <summary>Gets whether the "position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosition {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosition() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 2;
    private bool rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Rotation {
      get { if ((_hasBits0 & 2) != 0) { return rotation_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        rotation_ = value;
      }
    }
    /// <summary>Gets whether the "rotation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRotation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "rotation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRotation() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 3;
    private bool scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Scale {
      get { if ((_hasBits0 & 4) != 0) { return scale_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        scale_ = value;
      }
    }
    /// <summary>Gets whether the "scale" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScale {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "scale" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScale() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "cycle" field.</summary>
    public const int CycleFieldNumber = 4;
    private bool cycle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Cycle {
      get { if ((_hasBits0 & 8) != 0) { return cycle_; } else { return false; } }
      set {
        _hasBits0 |= 8;
        cycle_ = value;
      }
    }
    /// <summary>Gets whether the "cycle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCycle {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "cycle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCycle() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "selected_gizmo" field.</summary>
    public const int SelectedGizmoFieldNumber = 5;
    private string selectedGizmo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SelectedGizmo {
      get { return selectedGizmo_ ?? ""; }
      set {
        selectedGizmo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "selected_gizmo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelectedGizmo {
      get { return selectedGizmo_ != null; }
    }
    /// <summary>Clears the value of the "selected_gizmo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelectedGizmo() {
      selectedGizmo_ = null;
    }

    /// <summary>Field number for the "local_reference" field.</summary>
    public const int LocalReferenceFieldNumber = 6;
    private bool localReference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LocalReference {
      get { if ((_hasBits0 & 16) != 0) { return localReference_; } else { return false; } }
      set {
        _hasBits0 |= 16;
        localReference_ = value;
      }
    }
    /// <summary>Gets whether the "local_reference" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLocalReference {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "local_reference" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLocalReference() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentGizmos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentGizmos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Position != other.Position) return false;
      if (Rotation != other.Rotation) return false;
      if (Scale != other.Scale) return false;
      if (Cycle != other.Cycle) return false;
      if (SelectedGizmo != other.SelectedGizmo) return false;
      if (LocalReference != other.LocalReference) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPosition) hash ^= Position.GetHashCode();
      if (HasRotation) hash ^= Rotation.GetHashCode();
      if (HasScale) hash ^= Scale.GetHashCode();
      if (HasCycle) hash ^= Cycle.GetHashCode();
      if (HasSelectedGizmo) hash ^= SelectedGizmo.GetHashCode();
      if (HasLocalReference) hash ^= LocalReference.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPosition) {
        output.WriteRawTag(8);
        output.WriteBool(Position);
      }
      if (HasRotation) {
        output.WriteRawTag(16);
        output.WriteBool(Rotation);
      }
      if (HasScale) {
        output.WriteRawTag(24);
        output.WriteBool(Scale);
      }
      if (HasCycle) {
        output.WriteRawTag(32);
        output.WriteBool(Cycle);
      }
      if (HasSelectedGizmo) {
        output.WriteRawTag(42);
        output.WriteString(SelectedGizmo);
      }
      if (HasLocalReference) {
        output.WriteRawTag(48);
        output.WriteBool(LocalReference);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPosition) {
        output.WriteRawTag(8);
        output.WriteBool(Position);
      }
      if (HasRotation) {
        output.WriteRawTag(16);
        output.WriteBool(Rotation);
      }
      if (HasScale) {
        output.WriteRawTag(24);
        output.WriteBool(Scale);
      }
      if (HasCycle) {
        output.WriteRawTag(32);
        output.WriteBool(Cycle);
      }
      if (HasSelectedGizmo) {
        output.WriteRawTag(42);
        output.WriteString(SelectedGizmo);
      }
      if (HasLocalReference) {
        output.WriteRawTag(48);
        output.WriteBool(LocalReference);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPosition) {
        size += 1 + 1;
      }
      if (HasRotation) {
        size += 1 + 1;
      }
      if (HasScale) {
        size += 1 + 1;
      }
      if (HasCycle) {
        size += 1 + 1;
      }
      if (HasSelectedGizmo) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelectedGizmo);
      }
      if (HasLocalReference) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentGizmos other) {
      if (other == null) {
        return;
      }
      if (other.HasPosition) {
        Position = other.Position;
      }
      if (other.HasRotation) {
        Rotation = other.Rotation;
      }
      if (other.HasScale) {
        Scale = other.Scale;
      }
      if (other.HasCycle) {
        Cycle = other.Cycle;
      }
      if (other.HasSelectedGizmo) {
        SelectedGizmo = other.SelectedGizmo;
      }
      if (other.HasLocalReference) {
        LocalReference = other.LocalReference;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Position = input.ReadBool();
            break;
          }
          case 16: {
            Rotation = input.ReadBool();
            break;
          }
          case 24: {
            Scale = input.ReadBool();
            break;
          }
          case 32: {
            Cycle = input.ReadBool();
            break;
          }
          case 42: {
            SelectedGizmo = input.ReadString();
            break;
          }
          case 48: {
            LocalReference = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Position = input.ReadBool();
            break;
          }
          case 16: {
            Rotation = input.ReadBool();
            break;
          }
          case 24: {
            Scale = input.ReadBool();
            break;
          }
          case 32: {
            Cycle = input.ReadBool();
            break;
          }
          case 42: {
            SelectedGizmo = input.ReadString();
            break;
          }
          case 48: {
            LocalReference = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// NO CLASS
  /// </summary>
  public sealed partial class ECS6ComponentUiShape : pb::IMessage<ECS6ComponentUiShape>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUiShape> _parser = new pb::MessageParser<ECS6ComponentUiShape>(() => new ECS6ComponentUiShape());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUiShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiShape(ECS6ComponentUiShape other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      visible_ = other.visible_;
      opacity_ = other.opacity_;
      hAlign_ = other.hAlign_;
      vAlign_ = other.vAlign_;
      width_ = other.width_ != null ? other.width_.Clone() : null;
      height_ = other.height_ != null ? other.height_.Clone() : null;
      positionX_ = other.positionX_ != null ? other.positionX_.Clone() : null;
      positionY_ = other.positionY_ != null ? other.positionY_.Clone() : null;
      isPointerBlocker_ = other.isPointerBlocker_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiShape Clone() {
      return new ECS6ComponentUiShape(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 1) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 3;
    private float opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 2) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "h_align" field.</summary>
    public const int HAlignFieldNumber = 4;
    private string hAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HAlign {
      get { return hAlign_ ?? ""; }
      set {
        hAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHAlign {
      get { return hAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHAlign() {
      hAlign_ = null;
    }

    /// <summary>Field number for the "v_align" field.</summary>
    public const int VAlignFieldNumber = 5;
    private string vAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VAlign {
      get { return vAlign_ ?? ""; }
      set {
        vAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVAlign {
      get { return vAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVAlign() {
      vAlign_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private global::Decentraland.Sdk.Ecs6.UiValue width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private global::Decentraland.Sdk.Ecs6.UiValue height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 8;
    private global::Decentraland.Sdk.Ecs6.UiValue positionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 9;
    private global::Decentraland.Sdk.Ecs6.UiValue positionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 10;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 4) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUiShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUiShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (HAlign != other.HAlign) return false;
      if (VAlign != other.VAlign) return false;
      if (!object.Equals(Width, other.Width)) return false;
      if (!object.Equals(Height, other.Height)) return false;
      if (!object.Equals(PositionX, other.PositionX)) return false;
      if (!object.Equals(PositionY, other.PositionY)) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasHAlign) hash ^= HAlign.GetHashCode();
      if (HasVAlign) hash ^= VAlign.GetHashCode();
      if (width_ != null) hash ^= Width.GetHashCode();
      if (height_ != null) hash ^= Height.GetHashCode();
      if (positionX_ != null) hash ^= PositionX.GetHashCode();
      if (positionY_ != null) hash ^= PositionY.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasOpacity) {
        size += 1 + 4;
      }
      if (HasHAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HAlign);
      }
      if (HasVAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VAlign);
      }
      if (width_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Width);
      }
      if (height_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Height);
      }
      if (positionX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionX);
      }
      if (positionY_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionY);
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUiShape other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasHAlign) {
        HAlign = other.HAlign;
      }
      if (other.HasVAlign) {
        VAlign = other.VAlign;
      }
      if (other.width_ != null) {
        if (width_ == null) {
          Width = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Width.MergeFrom(other.Width);
      }
      if (other.height_ != null) {
        if (height_ == null) {
          Height = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Height.MergeFrom(other.Height);
      }
      if (other.positionX_ != null) {
        if (positionX_ == null) {
          PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionX.MergeFrom(other.PositionX);
      }
      if (other.positionY_ != null) {
        if (positionY_ == null) {
          PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionY.MergeFrom(other.PositionY);
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.UI_CONTAINER_RECT
  /// </summary>
  public sealed partial class ECS6ComponentUiContainerRect : pb::IMessage<ECS6ComponentUiContainerRect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUiContainerRect> _parser = new pb::MessageParser<ECS6ComponentUiContainerRect>(() => new ECS6ComponentUiContainerRect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUiContainerRect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiContainerRect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiContainerRect(ECS6ComponentUiContainerRect other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      visible_ = other.visible_;
      opacity_ = other.opacity_;
      hAlign_ = other.hAlign_;
      vAlign_ = other.vAlign_;
      width_ = other.width_ != null ? other.width_.Clone() : null;
      height_ = other.height_ != null ? other.height_.Clone() : null;
      positionX_ = other.positionX_ != null ? other.positionX_.Clone() : null;
      positionY_ = other.positionY_ != null ? other.positionY_.Clone() : null;
      isPointerBlocker_ = other.isPointerBlocker_;
      thickness_ = other.thickness_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      alignmentUsesSize_ = other.alignmentUsesSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiContainerRect Clone() {
      return new ECS6ComponentUiContainerRect(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 1) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 3;
    private float opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 2) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "h_align" field.</summary>
    public const int HAlignFieldNumber = 4;
    private string hAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HAlign {
      get { return hAlign_ ?? ""; }
      set {
        hAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHAlign {
      get { return hAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHAlign() {
      hAlign_ = null;
    }

    /// <summary>Field number for the "v_align" field.</summary>
    public const int VAlignFieldNumber = 5;
    private string vAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VAlign {
      get { return vAlign_ ?? ""; }
      set {
        vAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVAlign {
      get { return vAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVAlign() {
      vAlign_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private global::Decentraland.Sdk.Ecs6.UiValue width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private global::Decentraland.Sdk.Ecs6.UiValue height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 8;
    private global::Decentraland.Sdk.Ecs6.UiValue positionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 9;
    private global::Decentraland.Sdk.Ecs6.UiValue positionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 10;
    private bool isPointerBlocker_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 4) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "thickness" field.</summary>
    public const int ThicknessFieldNumber = 11;
    private float thickness_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Thickness {
      get { if ((_hasBits0 & 8) != 0) { return thickness_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        thickness_ = value;
      }
    }
    /// <summary>Gets whether the "thickness" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThickness {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "thickness" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThickness() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 12;
    private global::Decentraland.Common.Color4 color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "alignment_uses_size" field.</summary>
    public const int AlignmentUsesSizeFieldNumber = 13;
    private bool alignmentUsesSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AlignmentUsesSize {
      get { if ((_hasBits0 & 16) != 0) { return alignmentUsesSize_; } else { return false; } }
      set {
        _hasBits0 |= 16;
        alignmentUsesSize_ = value;
      }
    }
    /// <summary>Gets whether the "alignment_uses_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlignmentUsesSize {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "alignment_uses_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlignmentUsesSize() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUiContainerRect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUiContainerRect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (HAlign != other.HAlign) return false;
      if (VAlign != other.VAlign) return false;
      if (!object.Equals(Width, other.Width)) return false;
      if (!object.Equals(Height, other.Height)) return false;
      if (!object.Equals(PositionX, other.PositionX)) return false;
      if (!object.Equals(PositionY, other.PositionY)) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Thickness, other.Thickness)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (AlignmentUsesSize != other.AlignmentUsesSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasHAlign) hash ^= HAlign.GetHashCode();
      if (HasVAlign) hash ^= VAlign.GetHashCode();
      if (width_ != null) hash ^= Width.GetHashCode();
      if (height_ != null) hash ^= Height.GetHashCode();
      if (positionX_ != null) hash ^= PositionX.GetHashCode();
      if (positionY_ != null) hash ^= PositionY.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasThickness) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Thickness);
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasAlignmentUsesSize) hash ^= AlignmentUsesSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasThickness) {
        output.WriteRawTag(93);
        output.WriteFloat(Thickness);
      }
      if (color_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Color);
      }
      if (HasAlignmentUsesSize) {
        output.WriteRawTag(104);
        output.WriteBool(AlignmentUsesSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasThickness) {
        output.WriteRawTag(93);
        output.WriteFloat(Thickness);
      }
      if (color_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Color);
      }
      if (HasAlignmentUsesSize) {
        output.WriteRawTag(104);
        output.WriteBool(AlignmentUsesSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasOpacity) {
        size += 1 + 4;
      }
      if (HasHAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HAlign);
      }
      if (HasVAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VAlign);
      }
      if (width_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Width);
      }
      if (height_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Height);
      }
      if (positionX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionX);
      }
      if (positionY_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionY);
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasThickness) {
        size += 1 + 4;
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasAlignmentUsesSize) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUiContainerRect other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasHAlign) {
        HAlign = other.HAlign;
      }
      if (other.HasVAlign) {
        VAlign = other.VAlign;
      }
      if (other.width_ != null) {
        if (width_ == null) {
          Width = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Width.MergeFrom(other.Width);
      }
      if (other.height_ != null) {
        if (height_ == null) {
          Height = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Height.MergeFrom(other.Height);
      }
      if (other.positionX_ != null) {
        if (positionX_ == null) {
          PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionX.MergeFrom(other.PositionX);
      }
      if (other.positionY_ != null) {
        if (positionY_ == null) {
          PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionY.MergeFrom(other.PositionY);
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasThickness) {
        Thickness = other.Thickness;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Decentraland.Common.Color4();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasAlignmentUsesSize) {
        AlignmentUsesSize = other.AlignmentUsesSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            Thickness = input.ReadFloat();
            break;
          }
          case 98: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 104: {
            AlignmentUsesSize = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            Thickness = input.ReadFloat();
            break;
          }
          case 98: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 104: {
            AlignmentUsesSize = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.UI_CONTAINER_STACK
  /// </summary>
  public sealed partial class ECS6ComponentUiContainerStack : pb::IMessage<ECS6ComponentUiContainerStack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUiContainerStack> _parser = new pb::MessageParser<ECS6ComponentUiContainerStack>(() => new ECS6ComponentUiContainerStack());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUiContainerStack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiContainerStack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiContainerStack(ECS6ComponentUiContainerStack other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      visible_ = other.visible_;
      opacity_ = other.opacity_;
      hAlign_ = other.hAlign_;
      vAlign_ = other.vAlign_;
      width_ = other.width_ != null ? other.width_.Clone() : null;
      height_ = other.height_ != null ? other.height_.Clone() : null;
      positionX_ = other.positionX_ != null ? other.positionX_.Clone() : null;
      positionY_ = other.positionY_ != null ? other.positionY_.Clone() : null;
      isPointerBlocker_ = other.isPointerBlocker_;
      adaptWidth_ = other.adaptWidth_;
      adaptHeight_ = other.adaptHeight_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      stackOrientation_ = other.stackOrientation_;
      spacing_ = other.spacing_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiContainerStack Clone() {
      return new ECS6ComponentUiContainerStack(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 1) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 3;
    private float opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 2) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "h_align" field.</summary>
    public const int HAlignFieldNumber = 4;
    private string hAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HAlign {
      get { return hAlign_ ?? ""; }
      set {
        hAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHAlign {
      get { return hAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHAlign() {
      hAlign_ = null;
    }

    /// <summary>Field number for the "v_align" field.</summary>
    public const int VAlignFieldNumber = 5;
    private string vAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VAlign {
      get { return vAlign_ ?? ""; }
      set {
        vAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVAlign {
      get { return vAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVAlign() {
      vAlign_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private global::Decentraland.Sdk.Ecs6.UiValue width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private global::Decentraland.Sdk.Ecs6.UiValue height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 8;
    private global::Decentraland.Sdk.Ecs6.UiValue positionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 9;
    private global::Decentraland.Sdk.Ecs6.UiValue positionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 10;
    private bool isPointerBlocker_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 4) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "adapt_width" field.</summary>
    public const int AdaptWidthFieldNumber = 11;
    private bool adaptWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AdaptWidth {
      get { if ((_hasBits0 & 8) != 0) { return adaptWidth_; } else { return false; } }
      set {
        _hasBits0 |= 8;
        adaptWidth_ = value;
      }
    }
    /// <summary>Gets whether the "adapt_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdaptWidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "adapt_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdaptWidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "adapt_height" field.</summary>
    public const int AdaptHeightFieldNumber = 12;
    private bool adaptHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AdaptHeight {
      get { if ((_hasBits0 & 16) != 0) { return adaptHeight_; } else { return false; } }
      set {
        _hasBits0 |= 16;
        adaptHeight_ = value;
      }
    }
    /// <summary>Gets whether the "adapt_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdaptHeight {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "adapt_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdaptHeight() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 13;
    private global::Decentraland.Common.Color4 color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "stack_orientation" field.</summary>
    public const int StackOrientationFieldNumber = 14;
    private global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerStack.Types.UIStackOrientation stackOrientation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerStack.Types.UIStackOrientation StackOrientation {
      get { if ((_hasBits0 & 32) != 0) { return stackOrientation_; } else { return global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerStack.Types.UIStackOrientation.Vertical; } }
      set {
        _hasBits0 |= 32;
        stackOrientation_ = value;
      }
    }
    /// <summary>Gets whether the "stack_orientation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStackOrientation {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "stack_orientation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStackOrientation() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "spacing" field.</summary>
    public const int SpacingFieldNumber = 15;
    private float spacing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Spacing {
      get { if ((_hasBits0 & 64) != 0) { return spacing_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        spacing_ = value;
      }
    }
    /// <summary>Gets whether the "spacing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpacing {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "spacing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpacing() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUiContainerStack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUiContainerStack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (HAlign != other.HAlign) return false;
      if (VAlign != other.VAlign) return false;
      if (!object.Equals(Width, other.Width)) return false;
      if (!object.Equals(Height, other.Height)) return false;
      if (!object.Equals(PositionX, other.PositionX)) return false;
      if (!object.Equals(PositionY, other.PositionY)) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (AdaptWidth != other.AdaptWidth) return false;
      if (AdaptHeight != other.AdaptHeight) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (StackOrientation != other.StackOrientation) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Spacing, other.Spacing)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasHAlign) hash ^= HAlign.GetHashCode();
      if (HasVAlign) hash ^= VAlign.GetHashCode();
      if (width_ != null) hash ^= Width.GetHashCode();
      if (height_ != null) hash ^= Height.GetHashCode();
      if (positionX_ != null) hash ^= PositionX.GetHashCode();
      if (positionY_ != null) hash ^= PositionY.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasAdaptWidth) hash ^= AdaptWidth.GetHashCode();
      if (HasAdaptHeight) hash ^= AdaptHeight.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasStackOrientation) hash ^= StackOrientation.GetHashCode();
      if (HasSpacing) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Spacing);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasAdaptWidth) {
        output.WriteRawTag(88);
        output.WriteBool(AdaptWidth);
      }
      if (HasAdaptHeight) {
        output.WriteRawTag(96);
        output.WriteBool(AdaptHeight);
      }
      if (color_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Color);
      }
      if (HasStackOrientation) {
        output.WriteRawTag(112);
        output.WriteEnum((int) StackOrientation);
      }
      if (HasSpacing) {
        output.WriteRawTag(125);
        output.WriteFloat(Spacing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasAdaptWidth) {
        output.WriteRawTag(88);
        output.WriteBool(AdaptWidth);
      }
      if (HasAdaptHeight) {
        output.WriteRawTag(96);
        output.WriteBool(AdaptHeight);
      }
      if (color_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Color);
      }
      if (HasStackOrientation) {
        output.WriteRawTag(112);
        output.WriteEnum((int) StackOrientation);
      }
      if (HasSpacing) {
        output.WriteRawTag(125);
        output.WriteFloat(Spacing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasOpacity) {
        size += 1 + 4;
      }
      if (HasHAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HAlign);
      }
      if (HasVAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VAlign);
      }
      if (width_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Width);
      }
      if (height_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Height);
      }
      if (positionX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionX);
      }
      if (positionY_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionY);
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasAdaptWidth) {
        size += 1 + 1;
      }
      if (HasAdaptHeight) {
        size += 1 + 1;
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasStackOrientation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StackOrientation);
      }
      if (HasSpacing) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUiContainerStack other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasHAlign) {
        HAlign = other.HAlign;
      }
      if (other.HasVAlign) {
        VAlign = other.VAlign;
      }
      if (other.width_ != null) {
        if (width_ == null) {
          Width = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Width.MergeFrom(other.Width);
      }
      if (other.height_ != null) {
        if (height_ == null) {
          Height = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Height.MergeFrom(other.Height);
      }
      if (other.positionX_ != null) {
        if (positionX_ == null) {
          PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionX.MergeFrom(other.PositionX);
      }
      if (other.positionY_ != null) {
        if (positionY_ == null) {
          PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionY.MergeFrom(other.PositionY);
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasAdaptWidth) {
        AdaptWidth = other.AdaptWidth;
      }
      if (other.HasAdaptHeight) {
        AdaptHeight = other.AdaptHeight;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Decentraland.Common.Color4();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasStackOrientation) {
        StackOrientation = other.StackOrientation;
      }
      if (other.HasSpacing) {
        Spacing = other.Spacing;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 88: {
            AdaptWidth = input.ReadBool();
            break;
          }
          case 96: {
            AdaptHeight = input.ReadBool();
            break;
          }
          case 106: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 112: {
            StackOrientation = (global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerStack.Types.UIStackOrientation) input.ReadEnum();
            break;
          }
          case 125: {
            Spacing = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 88: {
            AdaptWidth = input.ReadBool();
            break;
          }
          case 96: {
            AdaptHeight = input.ReadBool();
            break;
          }
          case 106: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 112: {
            StackOrientation = (global::Decentraland.Sdk.Ecs6.ECS6ComponentUiContainerStack.Types.UIStackOrientation) input.ReadEnum();
            break;
          }
          case 125: {
            Spacing = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ECS6ComponentUiContainerStack message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum UIStackOrientation {
        [pbr::OriginalName("VERTICAL")] Vertical = 0,
        [pbr::OriginalName("HORIZONTAL")] Horizontal = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// CLASS_ID.UI_BUTTON_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentUiButton : pb::IMessage<ECS6ComponentUiButton>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUiButton> _parser = new pb::MessageParser<ECS6ComponentUiButton>(() => new ECS6ComponentUiButton());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUiButton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiButton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiButton(ECS6ComponentUiButton other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      visible_ = other.visible_;
      opacity_ = other.opacity_;
      hAlign_ = other.hAlign_;
      vAlign_ = other.vAlign_;
      width_ = other.width_ != null ? other.width_.Clone() : null;
      height_ = other.height_ != null ? other.height_.Clone() : null;
      positionX_ = other.positionX_ != null ? other.positionX_.Clone() : null;
      positionY_ = other.positionY_ != null ? other.positionY_.Clone() : null;
      isPointerBlocker_ = other.isPointerBlocker_;
      fontSize_ = other.fontSize_;
      fontWeight_ = other.fontWeight_;
      thickness_ = other.thickness_;
      cornerRadius_ = other.cornerRadius_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      background_ = other.background_ != null ? other.background_.Clone() : null;
      paddingTop_ = other.paddingTop_;
      paddingRight_ = other.paddingRight_;
      paddingBottom_ = other.paddingBottom_;
      paddingLeft_ = other.paddingLeft_;
      shadowBlur_ = other.shadowBlur_;
      shadowOffsetX_ = other.shadowOffsetX_;
      shadowOffsetY_ = other.shadowOffsetY_;
      shadowColor_ = other.shadowColor_ != null ? other.shadowColor_.Clone() : null;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiButton Clone() {
      return new ECS6ComponentUiButton(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 1) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 3;
    private float opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 2) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "h_align" field.</summary>
    public const int HAlignFieldNumber = 4;
    private string hAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HAlign {
      get { return hAlign_ ?? ""; }
      set {
        hAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHAlign {
      get { return hAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHAlign() {
      hAlign_ = null;
    }

    /// <summary>Field number for the "v_align" field.</summary>
    public const int VAlignFieldNumber = 5;
    private string vAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VAlign {
      get { return vAlign_ ?? ""; }
      set {
        vAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVAlign {
      get { return vAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVAlign() {
      vAlign_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private global::Decentraland.Sdk.Ecs6.UiValue width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private global::Decentraland.Sdk.Ecs6.UiValue height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 8;
    private global::Decentraland.Sdk.Ecs6.UiValue positionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 9;
    private global::Decentraland.Sdk.Ecs6.UiValue positionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 10;
    private bool isPointerBlocker_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 4) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "font_size" field.</summary>
    public const int FontSizeFieldNumber = 11;
    private float fontSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FontSize {
      get { if ((_hasBits0 & 8) != 0) { return fontSize_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        fontSize_ = value;
      }
    }
    /// <summary>Gets whether the "font_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFontSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "font_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFontSize() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "font_weight" field.</summary>
    public const int FontWeightFieldNumber = 12;
    private string fontWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FontWeight {
      get { return fontWeight_ ?? ""; }
      set {
        fontWeight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "font_weight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFontWeight {
      get { return fontWeight_ != null; }
    }
    /// <summary>Clears the value of the "font_weight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFontWeight() {
      fontWeight_ = null;
    }

    /// <summary>Field number for the "thickness" field.</summary>
    public const int ThicknessFieldNumber = 13;
    private float thickness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Thickness {
      get { if ((_hasBits0 & 16) != 0) { return thickness_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        thickness_ = value;
      }
    }
    /// <summary>Gets whether the "thickness" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThickness {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "thickness" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThickness() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "corner_radius" field.</summary>
    public const int CornerRadiusFieldNumber = 14;
    private float cornerRadius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CornerRadius {
      get { if ((_hasBits0 & 32) != 0) { return cornerRadius_; } else { return 0F; } }
      set {
        _hasBits0 |= 32;
        cornerRadius_ = value;
      }
    }
    /// <summary>Gets whether the "corner_radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCornerRadius {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "corner_radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCornerRadius() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 15;
    private global::Decentraland.Common.Color4 color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "background" field.</summary>
    public const int BackgroundFieldNumber = 16;
    private global::Decentraland.Common.Color4 background_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 Background {
      get { return background_; }
      set {
        background_ = value;
      }
    }

    /// <summary>Field number for the "padding_top" field.</summary>
    public const int PaddingTopFieldNumber = 17;
    private float paddingTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingTop {
      get { if ((_hasBits0 & 64) != 0) { return paddingTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        paddingTop_ = value;
      }
    }
    /// <summary>Gets whether the "padding_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingTop {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "padding_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingTop() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "padding_right" field.</summary>
    public const int PaddingRightFieldNumber = 18;
    private float paddingRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingRight {
      get { if ((_hasBits0 & 128) != 0) { return paddingRight_; } else { return 0F; } }
      set {
        _hasBits0 |= 128;
        paddingRight_ = value;
      }
    }
    /// <summary>Gets whether the "padding_right" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingRight {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "padding_right" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingRight() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "padding_bottom" field.</summary>
    public const int PaddingBottomFieldNumber = 19;
    private float paddingBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingBottom {
      get { if ((_hasBits0 & 256) != 0) { return paddingBottom_; } else { return 0F; } }
      set {
        _hasBits0 |= 256;
        paddingBottom_ = value;
      }
    }
    /// <summary>Gets whether the "padding_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingBottom {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "padding_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingBottom() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "padding_left" field.</summary>
    public const int PaddingLeftFieldNumber = 20;
    private float paddingLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingLeft {
      get { if ((_hasBits0 & 512) != 0) { return paddingLeft_; } else { return 0F; } }
      set {
        _hasBits0 |= 512;
        paddingLeft_ = value;
      }
    }
    /// <summary>Gets whether the "padding_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingLeft {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "padding_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingLeft() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "shadow_blur" field.</summary>
    public const int ShadowBlurFieldNumber = 21;
    private float shadowBlur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowBlur {
      get { if ((_hasBits0 & 1024) != 0) { return shadowBlur_; } else { return 0F; } }
      set {
        _hasBits0 |= 1024;
        shadowBlur_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_blur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowBlur {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "shadow_blur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowBlur() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "shadow_offset_x" field.</summary>
    public const int ShadowOffsetXFieldNumber = 22;
    private float shadowOffsetX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowOffsetX {
      get { if ((_hasBits0 & 2048) != 0) { return shadowOffsetX_; } else { return 0F; } }
      set {
        _hasBits0 |= 2048;
        shadowOffsetX_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_offset_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowOffsetX {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "shadow_offset_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowOffsetX() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "shadow_offset_y" field.</summary>
    public const int ShadowOffsetYFieldNumber = 23;
    private float shadowOffsetY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowOffsetY {
      get { if ((_hasBits0 & 4096) != 0) { return shadowOffsetY_; } else { return 0F; } }
      set {
        _hasBits0 |= 4096;
        shadowOffsetY_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_offset_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowOffsetY {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "shadow_offset_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowOffsetY() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "shadow_color" field.</summary>
    public const int ShadowColorFieldNumber = 24;
    private global::Decentraland.Common.Color4 shadowColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 ShadowColor {
      get { return shadowColor_; }
      set {
        shadowColor_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 25;
    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? ""; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUiButton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUiButton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (HAlign != other.HAlign) return false;
      if (VAlign != other.VAlign) return false;
      if (!object.Equals(Width, other.Width)) return false;
      if (!object.Equals(Height, other.Height)) return false;
      if (!object.Equals(PositionX, other.PositionX)) return false;
      if (!object.Equals(PositionY, other.PositionY)) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FontSize, other.FontSize)) return false;
      if (FontWeight != other.FontWeight) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Thickness, other.Thickness)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CornerRadius, other.CornerRadius)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!object.Equals(Background, other.Background)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingTop, other.PaddingTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingRight, other.PaddingRight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingBottom, other.PaddingBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingLeft, other.PaddingLeft)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowBlur, other.ShadowBlur)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowOffsetX, other.ShadowOffsetX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowOffsetY, other.ShadowOffsetY)) return false;
      if (!object.Equals(ShadowColor, other.ShadowColor)) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasHAlign) hash ^= HAlign.GetHashCode();
      if (HasVAlign) hash ^= VAlign.GetHashCode();
      if (width_ != null) hash ^= Width.GetHashCode();
      if (height_ != null) hash ^= Height.GetHashCode();
      if (positionX_ != null) hash ^= PositionX.GetHashCode();
      if (positionY_ != null) hash ^= PositionY.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasFontSize) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FontSize);
      if (HasFontWeight) hash ^= FontWeight.GetHashCode();
      if (HasThickness) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Thickness);
      if (HasCornerRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CornerRadius);
      if (color_ != null) hash ^= Color.GetHashCode();
      if (background_ != null) hash ^= Background.GetHashCode();
      if (HasPaddingTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingTop);
      if (HasPaddingRight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingRight);
      if (HasPaddingBottom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingBottom);
      if (HasPaddingLeft) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingLeft);
      if (HasShadowBlur) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowBlur);
      if (HasShadowOffsetX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowOffsetX);
      if (HasShadowOffsetY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowOffsetY);
      if (shadowColor_ != null) hash ^= ShadowColor.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasFontSize) {
        output.WriteRawTag(93);
        output.WriteFloat(FontSize);
      }
      if (HasFontWeight) {
        output.WriteRawTag(98);
        output.WriteString(FontWeight);
      }
      if (HasThickness) {
        output.WriteRawTag(109);
        output.WriteFloat(Thickness);
      }
      if (HasCornerRadius) {
        output.WriteRawTag(117);
        output.WriteFloat(CornerRadius);
      }
      if (color_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Color);
      }
      if (background_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Background);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(PaddingLeft);
      }
      if (HasShadowBlur) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(ShadowBlur);
      }
      if (HasShadowOffsetX) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(ShadowOffsetX);
      }
      if (HasShadowOffsetY) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(ShadowOffsetY);
      }
      if (shadowColor_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ShadowColor);
      }
      if (HasText) {
        output.WriteRawTag(202, 1);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasFontSize) {
        output.WriteRawTag(93);
        output.WriteFloat(FontSize);
      }
      if (HasFontWeight) {
        output.WriteRawTag(98);
        output.WriteString(FontWeight);
      }
      if (HasThickness) {
        output.WriteRawTag(109);
        output.WriteFloat(Thickness);
      }
      if (HasCornerRadius) {
        output.WriteRawTag(117);
        output.WriteFloat(CornerRadius);
      }
      if (color_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Color);
      }
      if (background_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Background);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(PaddingLeft);
      }
      if (HasShadowBlur) {
        output.WriteRawTag(173, 1);
        output.WriteFloat(ShadowBlur);
      }
      if (HasShadowOffsetX) {
        output.WriteRawTag(181, 1);
        output.WriteFloat(ShadowOffsetX);
      }
      if (HasShadowOffsetY) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(ShadowOffsetY);
      }
      if (shadowColor_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ShadowColor);
      }
      if (HasText) {
        output.WriteRawTag(202, 1);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasOpacity) {
        size += 1 + 4;
      }
      if (HasHAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HAlign);
      }
      if (HasVAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VAlign);
      }
      if (width_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Width);
      }
      if (height_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Height);
      }
      if (positionX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionX);
      }
      if (positionY_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionY);
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasFontSize) {
        size += 1 + 4;
      }
      if (HasFontWeight) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FontWeight);
      }
      if (HasThickness) {
        size += 1 + 4;
      }
      if (HasCornerRadius) {
        size += 1 + 4;
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (background_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Background);
      }
      if (HasPaddingTop) {
        size += 2 + 4;
      }
      if (HasPaddingRight) {
        size += 2 + 4;
      }
      if (HasPaddingBottom) {
        size += 2 + 4;
      }
      if (HasPaddingLeft) {
        size += 2 + 4;
      }
      if (HasShadowBlur) {
        size += 2 + 4;
      }
      if (HasShadowOffsetX) {
        size += 2 + 4;
      }
      if (HasShadowOffsetY) {
        size += 2 + 4;
      }
      if (shadowColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShadowColor);
      }
      if (HasText) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUiButton other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasHAlign) {
        HAlign = other.HAlign;
      }
      if (other.HasVAlign) {
        VAlign = other.VAlign;
      }
      if (other.width_ != null) {
        if (width_ == null) {
          Width = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Width.MergeFrom(other.Width);
      }
      if (other.height_ != null) {
        if (height_ == null) {
          Height = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Height.MergeFrom(other.Height);
      }
      if (other.positionX_ != null) {
        if (positionX_ == null) {
          PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionX.MergeFrom(other.PositionX);
      }
      if (other.positionY_ != null) {
        if (positionY_ == null) {
          PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionY.MergeFrom(other.PositionY);
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasFontSize) {
        FontSize = other.FontSize;
      }
      if (other.HasFontWeight) {
        FontWeight = other.FontWeight;
      }
      if (other.HasThickness) {
        Thickness = other.Thickness;
      }
      if (other.HasCornerRadius) {
        CornerRadius = other.CornerRadius;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Decentraland.Common.Color4();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.background_ != null) {
        if (background_ == null) {
          Background = new global::Decentraland.Common.Color4();
        }
        Background.MergeFrom(other.Background);
      }
      if (other.HasPaddingTop) {
        PaddingTop = other.PaddingTop;
      }
      if (other.HasPaddingRight) {
        PaddingRight = other.PaddingRight;
      }
      if (other.HasPaddingBottom) {
        PaddingBottom = other.PaddingBottom;
      }
      if (other.HasPaddingLeft) {
        PaddingLeft = other.PaddingLeft;
      }
      if (other.HasShadowBlur) {
        ShadowBlur = other.ShadowBlur;
      }
      if (other.HasShadowOffsetX) {
        ShadowOffsetX = other.ShadowOffsetX;
      }
      if (other.HasShadowOffsetY) {
        ShadowOffsetY = other.ShadowOffsetY;
      }
      if (other.shadowColor_ != null) {
        if (shadowColor_ == null) {
          ShadowColor = new global::Decentraland.Common.Color4();
        }
        ShadowColor.MergeFrom(other.ShadowColor);
      }
      if (other.HasText) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            FontSize = input.ReadFloat();
            break;
          }
          case 98: {
            FontWeight = input.ReadString();
            break;
          }
          case 109: {
            Thickness = input.ReadFloat();
            break;
          }
          case 117: {
            CornerRadius = input.ReadFloat();
            break;
          }
          case 122: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 130: {
            if (background_ == null) {
              Background = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Background);
            break;
          }
          case 141: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 149: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 157: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 165: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 173: {
            ShadowBlur = input.ReadFloat();
            break;
          }
          case 181: {
            ShadowOffsetX = input.ReadFloat();
            break;
          }
          case 189: {
            ShadowOffsetY = input.ReadFloat();
            break;
          }
          case 194: {
            if (shadowColor_ == null) {
              ShadowColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(ShadowColor);
            break;
          }
          case 202: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            FontSize = input.ReadFloat();
            break;
          }
          case 98: {
            FontWeight = input.ReadString();
            break;
          }
          case 109: {
            Thickness = input.ReadFloat();
            break;
          }
          case 117: {
            CornerRadius = input.ReadFloat();
            break;
          }
          case 122: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 130: {
            if (background_ == null) {
              Background = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Background);
            break;
          }
          case 141: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 149: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 157: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 165: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 173: {
            ShadowBlur = input.ReadFloat();
            break;
          }
          case 181: {
            ShadowOffsetX = input.ReadFloat();
            break;
          }
          case 189: {
            ShadowOffsetY = input.ReadFloat();
            break;
          }
          case 194: {
            if (shadowColor_ == null) {
              ShadowColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(ShadowColor);
            break;
          }
          case 202: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.UI_TEXT_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentUiText : pb::IMessage<ECS6ComponentUiText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUiText> _parser = new pb::MessageParser<ECS6ComponentUiText>(() => new ECS6ComponentUiText());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUiText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiText(ECS6ComponentUiText other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      visible_ = other.visible_;
      opacity_ = other.opacity_;
      hAlign_ = other.hAlign_;
      vAlign_ = other.vAlign_;
      width_ = other.width_ != null ? other.width_.Clone() : null;
      height_ = other.height_ != null ? other.height_.Clone() : null;
      positionX_ = other.positionX_ != null ? other.positionX_.Clone() : null;
      positionY_ = other.positionY_ != null ? other.positionY_.Clone() : null;
      isPointerBlocker_ = other.isPointerBlocker_;
      outlineWidth_ = other.outlineWidth_;
      outlineColor_ = other.outlineColor_ != null ? other.outlineColor_.Clone() : null;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      fontSize_ = other.fontSize_;
      fontAutoSize_ = other.fontAutoSize_;
      font_ = other.font_;
      value_ = other.value_;
      lineSpacing_ = other.lineSpacing_;
      lineCount_ = other.lineCount_;
      adaptWidth_ = other.adaptWidth_;
      adaptHeight_ = other.adaptHeight_;
      textWrapping_ = other.textWrapping_;
      shadowBlur_ = other.shadowBlur_;
      shadowOffsetX_ = other.shadowOffsetX_;
      shadowOffsetY_ = other.shadowOffsetY_;
      shadowColor_ = other.shadowColor_ != null ? other.shadowColor_.Clone() : null;
      hTextAlign_ = other.hTextAlign_;
      vTextAlign_ = other.vTextAlign_;
      paddingTop_ = other.paddingTop_;
      paddingRight_ = other.paddingRight_;
      paddingBottom_ = other.paddingBottom_;
      paddingLeft_ = other.paddingLeft_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiText Clone() {
      return new ECS6ComponentUiText(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 1) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 3;
    private float opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 2) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "h_align" field.</summary>
    public const int HAlignFieldNumber = 4;
    private string hAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HAlign {
      get { return hAlign_ ?? ""; }
      set {
        hAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHAlign {
      get { return hAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHAlign() {
      hAlign_ = null;
    }

    /// <summary>Field number for the "v_align" field.</summary>
    public const int VAlignFieldNumber = 5;
    private string vAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VAlign {
      get { return vAlign_ ?? ""; }
      set {
        vAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVAlign {
      get { return vAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVAlign() {
      vAlign_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private global::Decentraland.Sdk.Ecs6.UiValue width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private global::Decentraland.Sdk.Ecs6.UiValue height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 8;
    private global::Decentraland.Sdk.Ecs6.UiValue positionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 9;
    private global::Decentraland.Sdk.Ecs6.UiValue positionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 10;
    private bool isPointerBlocker_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 4) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "outline_width" field.</summary>
    public const int OutlineWidthFieldNumber = 11;
    private float outlineWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OutlineWidth {
      get { if ((_hasBits0 & 8) != 0) { return outlineWidth_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        outlineWidth_ = value;
      }
    }
    /// <summary>Gets whether the "outline_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOutlineWidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "outline_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutlineWidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "outline_color" field.</summary>
    public const int OutlineColorFieldNumber = 12;
    private global::Decentraland.Common.Color4 outlineColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 OutlineColor {
      get { return outlineColor_; }
      set {
        outlineColor_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 13;
    private global::Decentraland.Common.Color4 color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "font_size" field.</summary>
    public const int FontSizeFieldNumber = 14;
    private float fontSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FontSize {
      get { if ((_hasBits0 & 16) != 0) { return fontSize_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        fontSize_ = value;
      }
    }
    /// <summary>Gets whether the "font_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFontSize {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "font_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFontSize() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "font_auto_size" field.</summary>
    public const int FontAutoSizeFieldNumber = 15;
    private bool fontAutoSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FontAutoSize {
      get { if ((_hasBits0 & 32) != 0) { return fontAutoSize_; } else { return false; } }
      set {
        _hasBits0 |= 32;
        fontAutoSize_ = value;
      }
    }
    /// <summary>Gets whether the "font_auto_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFontAutoSize {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "font_auto_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFontAutoSize() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "font" field.</summary>
    public const int FontFieldNumber = 16;
    private string font_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Font {
      get { return font_ ?? ""; }
      set {
        font_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "font" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFont {
      get { return font_ != null; }
    }
    /// <summary>Clears the value of the "font" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFont() {
      font_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 17;
    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    /// <summary>Field number for the "line_spacing" field.</summary>
    public const int LineSpacingFieldNumber = 18;
    private float lineSpacing_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LineSpacing {
      get { if ((_hasBits0 & 64) != 0) { return lineSpacing_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        lineSpacing_ = value;
      }
    }
    /// <summary>Gets whether the "line_spacing" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLineSpacing {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "line_spacing" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLineSpacing() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "line_count" field.</summary>
    public const int LineCountFieldNumber = 19;
    private int lineCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LineCount {
      get { if ((_hasBits0 & 128) != 0) { return lineCount_; } else { return 0; } }
      set {
        _hasBits0 |= 128;
        lineCount_ = value;
      }
    }
    /// <summary>Gets whether the "line_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLineCount {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "line_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLineCount() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "adapt_width" field.</summary>
    public const int AdaptWidthFieldNumber = 20;
    private bool adaptWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AdaptWidth {
      get { if ((_hasBits0 & 256) != 0) { return adaptWidth_; } else { return false; } }
      set {
        _hasBits0 |= 256;
        adaptWidth_ = value;
      }
    }
    /// <summary>Gets whether the "adapt_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdaptWidth {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "adapt_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdaptWidth() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "adapt_height" field.</summary>
    public const int AdaptHeightFieldNumber = 21;
    private bool adaptHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AdaptHeight {
      get { if ((_hasBits0 & 512) != 0) { return adaptHeight_; } else { return false; } }
      set {
        _hasBits0 |= 512;
        adaptHeight_ = value;
      }
    }
    /// <summary>Gets whether the "adapt_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAdaptHeight {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "adapt_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAdaptHeight() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "text_wrapping" field.</summary>
    public const int TextWrappingFieldNumber = 22;
    private bool textWrapping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TextWrapping {
      get { if ((_hasBits0 & 1024) != 0) { return textWrapping_; } else { return false; } }
      set {
        _hasBits0 |= 1024;
        textWrapping_ = value;
      }
    }
    /// <summary>Gets whether the "text_wrapping" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextWrapping {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "text_wrapping" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextWrapping() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "shadow_blur" field.</summary>
    public const int ShadowBlurFieldNumber = 23;
    private float shadowBlur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowBlur {
      get { if ((_hasBits0 & 2048) != 0) { return shadowBlur_; } else { return 0F; } }
      set {
        _hasBits0 |= 2048;
        shadowBlur_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_blur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowBlur {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "shadow_blur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowBlur() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "shadow_offset_x" field.</summary>
    public const int ShadowOffsetXFieldNumber = 24;
    private float shadowOffsetX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowOffsetX {
      get { if ((_hasBits0 & 4096) != 0) { return shadowOffsetX_; } else { return 0F; } }
      set {
        _hasBits0 |= 4096;
        shadowOffsetX_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_offset_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowOffsetX {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "shadow_offset_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowOffsetX() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "shadow_offset_y" field.</summary>
    public const int ShadowOffsetYFieldNumber = 25;
    private float shadowOffsetY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowOffsetY {
      get { if ((_hasBits0 & 8192) != 0) { return shadowOffsetY_; } else { return 0F; } }
      set {
        _hasBits0 |= 8192;
        shadowOffsetY_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_offset_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowOffsetY {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "shadow_offset_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowOffsetY() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "shadow_color" field.</summary>
    public const int ShadowColorFieldNumber = 26;
    private global::Decentraland.Common.Color4 shadowColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 ShadowColor {
      get { return shadowColor_; }
      set {
        shadowColor_ = value;
      }
    }

    /// <summary>Field number for the "h_text_align" field.</summary>
    public const int HTextAlignFieldNumber = 27;
    private string hTextAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HTextAlign {
      get { return hTextAlign_ ?? ""; }
      set {
        hTextAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_text_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHTextAlign {
      get { return hTextAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_text_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHTextAlign() {
      hTextAlign_ = null;
    }

    /// <summary>Field number for the "v_text_align" field.</summary>
    public const int VTextAlignFieldNumber = 28;
    private string vTextAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VTextAlign {
      get { return vTextAlign_ ?? ""; }
      set {
        vTextAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_text_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVTextAlign {
      get { return vTextAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_text_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVTextAlign() {
      vTextAlign_ = null;
    }

    /// <summary>Field number for the "padding_top" field.</summary>
    public const int PaddingTopFieldNumber = 29;
    private float paddingTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingTop {
      get { if ((_hasBits0 & 16384) != 0) { return paddingTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 16384;
        paddingTop_ = value;
      }
    }
    /// <summary>Gets whether the "padding_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingTop {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "padding_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingTop() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "padding_right" field.</summary>
    public const int PaddingRightFieldNumber = 30;
    private float paddingRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingRight {
      get { if ((_hasBits0 & 32768) != 0) { return paddingRight_; } else { return 0F; } }
      set {
        _hasBits0 |= 32768;
        paddingRight_ = value;
      }
    }
    /// <summary>Gets whether the "padding_right" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingRight {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "padding_right" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingRight() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "padding_bottom" field.</summary>
    public const int PaddingBottomFieldNumber = 31;
    private float paddingBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingBottom {
      get { if ((_hasBits0 & 65536) != 0) { return paddingBottom_; } else { return 0F; } }
      set {
        _hasBits0 |= 65536;
        paddingBottom_ = value;
      }
    }
    /// <summary>Gets whether the "padding_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingBottom {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "padding_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingBottom() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "padding_left" field.</summary>
    public const int PaddingLeftFieldNumber = 32;
    private float paddingLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingLeft {
      get { if ((_hasBits0 & 131072) != 0) { return paddingLeft_; } else { return 0F; } }
      set {
        _hasBits0 |= 131072;
        paddingLeft_ = value;
      }
    }
    /// <summary>Gets whether the "padding_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingLeft {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "padding_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingLeft() {
      _hasBits0 &= ~131072;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUiText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUiText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (HAlign != other.HAlign) return false;
      if (VAlign != other.VAlign) return false;
      if (!object.Equals(Width, other.Width)) return false;
      if (!object.Equals(Height, other.Height)) return false;
      if (!object.Equals(PositionX, other.PositionX)) return false;
      if (!object.Equals(PositionY, other.PositionY)) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OutlineWidth, other.OutlineWidth)) return false;
      if (!object.Equals(OutlineColor, other.OutlineColor)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FontSize, other.FontSize)) return false;
      if (FontAutoSize != other.FontAutoSize) return false;
      if (Font != other.Font) return false;
      if (Value != other.Value) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LineSpacing, other.LineSpacing)) return false;
      if (LineCount != other.LineCount) return false;
      if (AdaptWidth != other.AdaptWidth) return false;
      if (AdaptHeight != other.AdaptHeight) return false;
      if (TextWrapping != other.TextWrapping) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowBlur, other.ShadowBlur)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowOffsetX, other.ShadowOffsetX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowOffsetY, other.ShadowOffsetY)) return false;
      if (!object.Equals(ShadowColor, other.ShadowColor)) return false;
      if (HTextAlign != other.HTextAlign) return false;
      if (VTextAlign != other.VTextAlign) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingTop, other.PaddingTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingRight, other.PaddingRight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingBottom, other.PaddingBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingLeft, other.PaddingLeft)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasHAlign) hash ^= HAlign.GetHashCode();
      if (HasVAlign) hash ^= VAlign.GetHashCode();
      if (width_ != null) hash ^= Width.GetHashCode();
      if (height_ != null) hash ^= Height.GetHashCode();
      if (positionX_ != null) hash ^= PositionX.GetHashCode();
      if (positionY_ != null) hash ^= PositionY.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasOutlineWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OutlineWidth);
      if (outlineColor_ != null) hash ^= OutlineColor.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasFontSize) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FontSize);
      if (HasFontAutoSize) hash ^= FontAutoSize.GetHashCode();
      if (HasFont) hash ^= Font.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasLineSpacing) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LineSpacing);
      if (HasLineCount) hash ^= LineCount.GetHashCode();
      if (HasAdaptWidth) hash ^= AdaptWidth.GetHashCode();
      if (HasAdaptHeight) hash ^= AdaptHeight.GetHashCode();
      if (HasTextWrapping) hash ^= TextWrapping.GetHashCode();
      if (HasShadowBlur) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowBlur);
      if (HasShadowOffsetX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowOffsetX);
      if (HasShadowOffsetY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowOffsetY);
      if (shadowColor_ != null) hash ^= ShadowColor.GetHashCode();
      if (HasHTextAlign) hash ^= HTextAlign.GetHashCode();
      if (HasVTextAlign) hash ^= VTextAlign.GetHashCode();
      if (HasPaddingTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingTop);
      if (HasPaddingRight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingRight);
      if (HasPaddingBottom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingBottom);
      if (HasPaddingLeft) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingLeft);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasOutlineWidth) {
        output.WriteRawTag(93);
        output.WriteFloat(OutlineWidth);
      }
      if (outlineColor_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(OutlineColor);
      }
      if (color_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Color);
      }
      if (HasFontSize) {
        output.WriteRawTag(117);
        output.WriteFloat(FontSize);
      }
      if (HasFontAutoSize) {
        output.WriteRawTag(120);
        output.WriteBool(FontAutoSize);
      }
      if (HasFont) {
        output.WriteRawTag(130, 1);
        output.WriteString(Font);
      }
      if (HasValue) {
        output.WriteRawTag(138, 1);
        output.WriteString(Value);
      }
      if (HasLineSpacing) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(LineSpacing);
      }
      if (HasLineCount) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(LineCount);
      }
      if (HasAdaptWidth) {
        output.WriteRawTag(160, 1);
        output.WriteBool(AdaptWidth);
      }
      if (HasAdaptHeight) {
        output.WriteRawTag(168, 1);
        output.WriteBool(AdaptHeight);
      }
      if (HasTextWrapping) {
        output.WriteRawTag(176, 1);
        output.WriteBool(TextWrapping);
      }
      if (HasShadowBlur) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(ShadowBlur);
      }
      if (HasShadowOffsetX) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(ShadowOffsetX);
      }
      if (HasShadowOffsetY) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(ShadowOffsetY);
      }
      if (shadowColor_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ShadowColor);
      }
      if (HasHTextAlign) {
        output.WriteRawTag(218, 1);
        output.WriteString(HTextAlign);
      }
      if (HasVTextAlign) {
        output.WriteRawTag(226, 1);
        output.WriteString(VTextAlign);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(237, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(253, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(133, 2);
        output.WriteFloat(PaddingLeft);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasOutlineWidth) {
        output.WriteRawTag(93);
        output.WriteFloat(OutlineWidth);
      }
      if (outlineColor_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(OutlineColor);
      }
      if (color_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Color);
      }
      if (HasFontSize) {
        output.WriteRawTag(117);
        output.WriteFloat(FontSize);
      }
      if (HasFontAutoSize) {
        output.WriteRawTag(120);
        output.WriteBool(FontAutoSize);
      }
      if (HasFont) {
        output.WriteRawTag(130, 1);
        output.WriteString(Font);
      }
      if (HasValue) {
        output.WriteRawTag(138, 1);
        output.WriteString(Value);
      }
      if (HasLineSpacing) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(LineSpacing);
      }
      if (HasLineCount) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(LineCount);
      }
      if (HasAdaptWidth) {
        output.WriteRawTag(160, 1);
        output.WriteBool(AdaptWidth);
      }
      if (HasAdaptHeight) {
        output.WriteRawTag(168, 1);
        output.WriteBool(AdaptHeight);
      }
      if (HasTextWrapping) {
        output.WriteRawTag(176, 1);
        output.WriteBool(TextWrapping);
      }
      if (HasShadowBlur) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(ShadowBlur);
      }
      if (HasShadowOffsetX) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(ShadowOffsetX);
      }
      if (HasShadowOffsetY) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(ShadowOffsetY);
      }
      if (shadowColor_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ShadowColor);
      }
      if (HasHTextAlign) {
        output.WriteRawTag(218, 1);
        output.WriteString(HTextAlign);
      }
      if (HasVTextAlign) {
        output.WriteRawTag(226, 1);
        output.WriteString(VTextAlign);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(237, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(253, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(133, 2);
        output.WriteFloat(PaddingLeft);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasOpacity) {
        size += 1 + 4;
      }
      if (HasHAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HAlign);
      }
      if (HasVAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VAlign);
      }
      if (width_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Width);
      }
      if (height_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Height);
      }
      if (positionX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionX);
      }
      if (positionY_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionY);
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasOutlineWidth) {
        size += 1 + 4;
      }
      if (outlineColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutlineColor);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasFontSize) {
        size += 1 + 4;
      }
      if (HasFontAutoSize) {
        size += 1 + 1;
      }
      if (HasFont) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Font);
      }
      if (HasValue) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasLineSpacing) {
        size += 2 + 4;
      }
      if (HasLineCount) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LineCount);
      }
      if (HasAdaptWidth) {
        size += 2 + 1;
      }
      if (HasAdaptHeight) {
        size += 2 + 1;
      }
      if (HasTextWrapping) {
        size += 2 + 1;
      }
      if (HasShadowBlur) {
        size += 2 + 4;
      }
      if (HasShadowOffsetX) {
        size += 2 + 4;
      }
      if (HasShadowOffsetY) {
        size += 2 + 4;
      }
      if (shadowColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShadowColor);
      }
      if (HasHTextAlign) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HTextAlign);
      }
      if (HasVTextAlign) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VTextAlign);
      }
      if (HasPaddingTop) {
        size += 2 + 4;
      }
      if (HasPaddingRight) {
        size += 2 + 4;
      }
      if (HasPaddingBottom) {
        size += 2 + 4;
      }
      if (HasPaddingLeft) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUiText other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasHAlign) {
        HAlign = other.HAlign;
      }
      if (other.HasVAlign) {
        VAlign = other.VAlign;
      }
      if (other.width_ != null) {
        if (width_ == null) {
          Width = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Width.MergeFrom(other.Width);
      }
      if (other.height_ != null) {
        if (height_ == null) {
          Height = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Height.MergeFrom(other.Height);
      }
      if (other.positionX_ != null) {
        if (positionX_ == null) {
          PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionX.MergeFrom(other.PositionX);
      }
      if (other.positionY_ != null) {
        if (positionY_ == null) {
          PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionY.MergeFrom(other.PositionY);
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasOutlineWidth) {
        OutlineWidth = other.OutlineWidth;
      }
      if (other.outlineColor_ != null) {
        if (outlineColor_ == null) {
          OutlineColor = new global::Decentraland.Common.Color4();
        }
        OutlineColor.MergeFrom(other.OutlineColor);
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Decentraland.Common.Color4();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasFontSize) {
        FontSize = other.FontSize;
      }
      if (other.HasFontAutoSize) {
        FontAutoSize = other.FontAutoSize;
      }
      if (other.HasFont) {
        Font = other.Font;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasLineSpacing) {
        LineSpacing = other.LineSpacing;
      }
      if (other.HasLineCount) {
        LineCount = other.LineCount;
      }
      if (other.HasAdaptWidth) {
        AdaptWidth = other.AdaptWidth;
      }
      if (other.HasAdaptHeight) {
        AdaptHeight = other.AdaptHeight;
      }
      if (other.HasTextWrapping) {
        TextWrapping = other.TextWrapping;
      }
      if (other.HasShadowBlur) {
        ShadowBlur = other.ShadowBlur;
      }
      if (other.HasShadowOffsetX) {
        ShadowOffsetX = other.ShadowOffsetX;
      }
      if (other.HasShadowOffsetY) {
        ShadowOffsetY = other.ShadowOffsetY;
      }
      if (other.shadowColor_ != null) {
        if (shadowColor_ == null) {
          ShadowColor = new global::Decentraland.Common.Color4();
        }
        ShadowColor.MergeFrom(other.ShadowColor);
      }
      if (other.HasHTextAlign) {
        HTextAlign = other.HTextAlign;
      }
      if (other.HasVTextAlign) {
        VTextAlign = other.VTextAlign;
      }
      if (other.HasPaddingTop) {
        PaddingTop = other.PaddingTop;
      }
      if (other.HasPaddingRight) {
        PaddingRight = other.PaddingRight;
      }
      if (other.HasPaddingBottom) {
        PaddingBottom = other.PaddingBottom;
      }
      if (other.HasPaddingLeft) {
        PaddingLeft = other.PaddingLeft;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            OutlineWidth = input.ReadFloat();
            break;
          }
          case 98: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
          case 106: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 117: {
            FontSize = input.ReadFloat();
            break;
          }
          case 120: {
            FontAutoSize = input.ReadBool();
            break;
          }
          case 130: {
            Font = input.ReadString();
            break;
          }
          case 138: {
            Value = input.ReadString();
            break;
          }
          case 149: {
            LineSpacing = input.ReadFloat();
            break;
          }
          case 152: {
            LineCount = input.ReadInt32();
            break;
          }
          case 160: {
            AdaptWidth = input.ReadBool();
            break;
          }
          case 168: {
            AdaptHeight = input.ReadBool();
            break;
          }
          case 176: {
            TextWrapping = input.ReadBool();
            break;
          }
          case 189: {
            ShadowBlur = input.ReadFloat();
            break;
          }
          case 197: {
            ShadowOffsetX = input.ReadFloat();
            break;
          }
          case 205: {
            ShadowOffsetY = input.ReadFloat();
            break;
          }
          case 210: {
            if (shadowColor_ == null) {
              ShadowColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(ShadowColor);
            break;
          }
          case 218: {
            HTextAlign = input.ReadString();
            break;
          }
          case 226: {
            VTextAlign = input.ReadString();
            break;
          }
          case 237: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 245: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 253: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 261: {
            PaddingLeft = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            OutlineWidth = input.ReadFloat();
            break;
          }
          case 98: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
          case 106: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 117: {
            FontSize = input.ReadFloat();
            break;
          }
          case 120: {
            FontAutoSize = input.ReadBool();
            break;
          }
          case 130: {
            Font = input.ReadString();
            break;
          }
          case 138: {
            Value = input.ReadString();
            break;
          }
          case 149: {
            LineSpacing = input.ReadFloat();
            break;
          }
          case 152: {
            LineCount = input.ReadInt32();
            break;
          }
          case 160: {
            AdaptWidth = input.ReadBool();
            break;
          }
          case 168: {
            AdaptHeight = input.ReadBool();
            break;
          }
          case 176: {
            TextWrapping = input.ReadBool();
            break;
          }
          case 189: {
            ShadowBlur = input.ReadFloat();
            break;
          }
          case 197: {
            ShadowOffsetX = input.ReadFloat();
            break;
          }
          case 205: {
            ShadowOffsetY = input.ReadFloat();
            break;
          }
          case 210: {
            if (shadowColor_ == null) {
              ShadowColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(ShadowColor);
            break;
          }
          case 218: {
            HTextAlign = input.ReadString();
            break;
          }
          case 226: {
            VTextAlign = input.ReadString();
            break;
          }
          case 237: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 245: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 253: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 261: {
            PaddingLeft = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.UI_INPUT_TEXT_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentUiInputText : pb::IMessage<ECS6ComponentUiInputText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUiInputText> _parser = new pb::MessageParser<ECS6ComponentUiInputText>(() => new ECS6ComponentUiInputText());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUiInputText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiInputText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiInputText(ECS6ComponentUiInputText other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      visible_ = other.visible_;
      opacity_ = other.opacity_;
      hAlign_ = other.hAlign_;
      vAlign_ = other.vAlign_;
      width_ = other.width_ != null ? other.width_.Clone() : null;
      height_ = other.height_ != null ? other.height_.Clone() : null;
      positionX_ = other.positionX_ != null ? other.positionX_.Clone() : null;
      positionY_ = other.positionY_ != null ? other.positionY_.Clone() : null;
      isPointerBlocker_ = other.isPointerBlocker_;
      outlineWidth_ = other.outlineWidth_;
      outlineColor_ = other.outlineColor_ != null ? other.outlineColor_.Clone() : null;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      fontSize_ = other.fontSize_;
      font_ = other.font_;
      value_ = other.value_;
      placeholder_ = other.placeholder_;
      margin_ = other.margin_;
      focusedBackground_ = other.focusedBackground_ != null ? other.focusedBackground_.Clone() : null;
      textWrapping_ = other.textWrapping_;
      shadowBlur_ = other.shadowBlur_;
      shadowOffsetX_ = other.shadowOffsetX_;
      shadowOffsetY_ = other.shadowOffsetY_;
      shadowColor_ = other.shadowColor_ != null ? other.shadowColor_.Clone() : null;
      hTextAlign_ = other.hTextAlign_;
      vTextAlign_ = other.vTextAlign_;
      paddingTop_ = other.paddingTop_;
      paddingRight_ = other.paddingRight_;
      paddingBottom_ = other.paddingBottom_;
      paddingLeft_ = other.paddingLeft_;
      onTextChanged_ = other.onTextChanged_;
      onFocus_ = other.onFocus_;
      onBlur_ = other.onBlur_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiInputText Clone() {
      return new ECS6ComponentUiInputText(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 1) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 3;
    private float opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 2) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "h_align" field.</summary>
    public const int HAlignFieldNumber = 4;
    private string hAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HAlign {
      get { return hAlign_ ?? ""; }
      set {
        hAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHAlign {
      get { return hAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHAlign() {
      hAlign_ = null;
    }

    /// <summary>Field number for the "v_align" field.</summary>
    public const int VAlignFieldNumber = 5;
    private string vAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VAlign {
      get { return vAlign_ ?? ""; }
      set {
        vAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVAlign {
      get { return vAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVAlign() {
      vAlign_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private global::Decentraland.Sdk.Ecs6.UiValue width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private global::Decentraland.Sdk.Ecs6.UiValue height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 8;
    private global::Decentraland.Sdk.Ecs6.UiValue positionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 9;
    private global::Decentraland.Sdk.Ecs6.UiValue positionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 10;
    private bool isPointerBlocker_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 4) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "outline_width" field.</summary>
    public const int OutlineWidthFieldNumber = 11;
    private float outlineWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float OutlineWidth {
      get { if ((_hasBits0 & 8) != 0) { return outlineWidth_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        outlineWidth_ = value;
      }
    }
    /// <summary>Gets whether the "outline_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOutlineWidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "outline_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutlineWidth() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "outline_color" field.</summary>
    public const int OutlineColorFieldNumber = 12;
    private global::Decentraland.Common.Color4 outlineColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 OutlineColor {
      get { return outlineColor_; }
      set {
        outlineColor_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 13;
    private global::Decentraland.Common.Color4 color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "font_size" field.</summary>
    public const int FontSizeFieldNumber = 14;
    private float fontSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FontSize {
      get { if ((_hasBits0 & 16) != 0) { return fontSize_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        fontSize_ = value;
      }
    }
    /// <summary>Gets whether the "font_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFontSize {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "font_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFontSize() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "font" field.</summary>
    public const int FontFieldNumber = 16;
    private string font_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Font {
      get { return font_ ?? ""; }
      set {
        font_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "font" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFont {
      get { return font_ != null; }
    }
    /// <summary>Clears the value of the "font" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFont() {
      font_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 17;
    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ""; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    /// <summary>Field number for the "placeholder" field.</summary>
    public const int PlaceholderFieldNumber = 33;
    private string placeholder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Placeholder {
      get { return placeholder_ ?? ""; }
      set {
        placeholder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "placeholder" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPlaceholder {
      get { return placeholder_ != null; }
    }
    /// <summary>Clears the value of the "placeholder" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPlaceholder() {
      placeholder_ = null;
    }

    /// <summary>Field number for the "margin" field.</summary>
    public const int MarginFieldNumber = 34;
    private float margin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Margin {
      get { if ((_hasBits0 & 8192) != 0) { return margin_; } else { return 0F; } }
      set {
        _hasBits0 |= 8192;
        margin_ = value;
      }
    }
    /// <summary>Gets whether the "margin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMargin {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "margin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMargin() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "focused_background" field.</summary>
    public const int FocusedBackgroundFieldNumber = 35;
    private global::Decentraland.Common.Color4 focusedBackground_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 FocusedBackground {
      get { return focusedBackground_; }
      set {
        focusedBackground_ = value;
      }
    }

    /// <summary>Field number for the "text_wrapping" field.</summary>
    public const int TextWrappingFieldNumber = 22;
    private bool textWrapping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TextWrapping {
      get { if ((_hasBits0 & 32) != 0) { return textWrapping_; } else { return false; } }
      set {
        _hasBits0 |= 32;
        textWrapping_ = value;
      }
    }
    /// <summary>Gets whether the "text_wrapping" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextWrapping {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "text_wrapping" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextWrapping() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "shadow_blur" field.</summary>
    public const int ShadowBlurFieldNumber = 23;
    private float shadowBlur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowBlur {
      get { if ((_hasBits0 & 64) != 0) { return shadowBlur_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        shadowBlur_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_blur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowBlur {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "shadow_blur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowBlur() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "shadow_offset_x" field.</summary>
    public const int ShadowOffsetXFieldNumber = 24;
    private float shadowOffsetX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowOffsetX {
      get { if ((_hasBits0 & 128) != 0) { return shadowOffsetX_; } else { return 0F; } }
      set {
        _hasBits0 |= 128;
        shadowOffsetX_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_offset_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowOffsetX {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "shadow_offset_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowOffsetX() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "shadow_offset_y" field.</summary>
    public const int ShadowOffsetYFieldNumber = 25;
    private float shadowOffsetY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ShadowOffsetY {
      get { if ((_hasBits0 & 256) != 0) { return shadowOffsetY_; } else { return 0F; } }
      set {
        _hasBits0 |= 256;
        shadowOffsetY_ = value;
      }
    }
    /// <summary>Gets whether the "shadow_offset_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShadowOffsetY {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "shadow_offset_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShadowOffsetY() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "shadow_color" field.</summary>
    public const int ShadowColorFieldNumber = 26;
    private global::Decentraland.Common.Color4 shadowColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 ShadowColor {
      get { return shadowColor_; }
      set {
        shadowColor_ = value;
      }
    }

    /// <summary>Field number for the "h_text_align" field.</summary>
    public const int HTextAlignFieldNumber = 27;
    private string hTextAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HTextAlign {
      get { return hTextAlign_ ?? ""; }
      set {
        hTextAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_text_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHTextAlign {
      get { return hTextAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_text_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHTextAlign() {
      hTextAlign_ = null;
    }

    /// <summary>Field number for the "v_text_align" field.</summary>
    public const int VTextAlignFieldNumber = 28;
    private string vTextAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VTextAlign {
      get { return vTextAlign_ ?? ""; }
      set {
        vTextAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_text_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVTextAlign {
      get { return vTextAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_text_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVTextAlign() {
      vTextAlign_ = null;
    }

    /// <summary>Field number for the "padding_top" field.</summary>
    public const int PaddingTopFieldNumber = 29;
    private float paddingTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingTop {
      get { if ((_hasBits0 & 512) != 0) { return paddingTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 512;
        paddingTop_ = value;
      }
    }
    /// <summary>Gets whether the "padding_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingTop {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "padding_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingTop() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "padding_right" field.</summary>
    public const int PaddingRightFieldNumber = 30;
    private float paddingRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingRight {
      get { if ((_hasBits0 & 1024) != 0) { return paddingRight_; } else { return 0F; } }
      set {
        _hasBits0 |= 1024;
        paddingRight_ = value;
      }
    }
    /// <summary>Gets whether the "padding_right" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingRight {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "padding_right" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingRight() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "padding_bottom" field.</summary>
    public const int PaddingBottomFieldNumber = 31;
    private float paddingBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingBottom {
      get { if ((_hasBits0 & 2048) != 0) { return paddingBottom_; } else { return 0F; } }
      set {
        _hasBits0 |= 2048;
        paddingBottom_ = value;
      }
    }
    /// <summary>Gets whether the "padding_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingBottom {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "padding_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingBottom() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "padding_left" field.</summary>
    public const int PaddingLeftFieldNumber = 32;
    private float paddingLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingLeft {
      get { if ((_hasBits0 & 4096) != 0) { return paddingLeft_; } else { return 0F; } }
      set {
        _hasBits0 |= 4096;
        paddingLeft_ = value;
      }
    }
    /// <summary>Gets whether the "padding_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingLeft {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "padding_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingLeft() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "on_text_changed" field.</summary>
    public const int OnTextChangedFieldNumber = 36;
    private string onTextChanged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OnTextChanged {
      get { return onTextChanged_ ?? ""; }
      set {
        onTextChanged_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "on_text_changed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnTextChanged {
      get { return onTextChanged_ != null; }
    }
    /// <summary>Clears the value of the "on_text_changed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnTextChanged() {
      onTextChanged_ = null;
    }

    /// <summary>Field number for the "on_focus" field.</summary>
    public const int OnFocusFieldNumber = 37;
    private string onFocus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OnFocus {
      get { return onFocus_ ?? ""; }
      set {
        onFocus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "on_focus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnFocus {
      get { return onFocus_ != null; }
    }
    /// <summary>Clears the value of the "on_focus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnFocus() {
      onFocus_ = null;
    }

    /// <summary>Field number for the "on_blur" field.</summary>
    public const int OnBlurFieldNumber = 38;
    private string onBlur_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OnBlur {
      get { return onBlur_ ?? ""; }
      set {
        onBlur_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "on_blur" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnBlur {
      get { return onBlur_ != null; }
    }
    /// <summary>Clears the value of the "on_blur" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnBlur() {
      onBlur_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUiInputText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUiInputText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (HAlign != other.HAlign) return false;
      if (VAlign != other.VAlign) return false;
      if (!object.Equals(Width, other.Width)) return false;
      if (!object.Equals(Height, other.Height)) return false;
      if (!object.Equals(PositionX, other.PositionX)) return false;
      if (!object.Equals(PositionY, other.PositionY)) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(OutlineWidth, other.OutlineWidth)) return false;
      if (!object.Equals(OutlineColor, other.OutlineColor)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FontSize, other.FontSize)) return false;
      if (Font != other.Font) return false;
      if (Value != other.Value) return false;
      if (Placeholder != other.Placeholder) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Margin, other.Margin)) return false;
      if (!object.Equals(FocusedBackground, other.FocusedBackground)) return false;
      if (TextWrapping != other.TextWrapping) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowBlur, other.ShadowBlur)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowOffsetX, other.ShadowOffsetX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ShadowOffsetY, other.ShadowOffsetY)) return false;
      if (!object.Equals(ShadowColor, other.ShadowColor)) return false;
      if (HTextAlign != other.HTextAlign) return false;
      if (VTextAlign != other.VTextAlign) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingTop, other.PaddingTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingRight, other.PaddingRight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingBottom, other.PaddingBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingLeft, other.PaddingLeft)) return false;
      if (OnTextChanged != other.OnTextChanged) return false;
      if (OnFocus != other.OnFocus) return false;
      if (OnBlur != other.OnBlur) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasHAlign) hash ^= HAlign.GetHashCode();
      if (HasVAlign) hash ^= VAlign.GetHashCode();
      if (width_ != null) hash ^= Width.GetHashCode();
      if (height_ != null) hash ^= Height.GetHashCode();
      if (positionX_ != null) hash ^= PositionX.GetHashCode();
      if (positionY_ != null) hash ^= PositionY.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasOutlineWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(OutlineWidth);
      if (outlineColor_ != null) hash ^= OutlineColor.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (HasFontSize) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FontSize);
      if (HasFont) hash ^= Font.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (HasPlaceholder) hash ^= Placeholder.GetHashCode();
      if (HasMargin) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Margin);
      if (focusedBackground_ != null) hash ^= FocusedBackground.GetHashCode();
      if (HasTextWrapping) hash ^= TextWrapping.GetHashCode();
      if (HasShadowBlur) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowBlur);
      if (HasShadowOffsetX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowOffsetX);
      if (HasShadowOffsetY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ShadowOffsetY);
      if (shadowColor_ != null) hash ^= ShadowColor.GetHashCode();
      if (HasHTextAlign) hash ^= HTextAlign.GetHashCode();
      if (HasVTextAlign) hash ^= VTextAlign.GetHashCode();
      if (HasPaddingTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingTop);
      if (HasPaddingRight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingRight);
      if (HasPaddingBottom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingBottom);
      if (HasPaddingLeft) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingLeft);
      if (HasOnTextChanged) hash ^= OnTextChanged.GetHashCode();
      if (HasOnFocus) hash ^= OnFocus.GetHashCode();
      if (HasOnBlur) hash ^= OnBlur.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasOutlineWidth) {
        output.WriteRawTag(93);
        output.WriteFloat(OutlineWidth);
      }
      if (outlineColor_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(OutlineColor);
      }
      if (color_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Color);
      }
      if (HasFontSize) {
        output.WriteRawTag(117);
        output.WriteFloat(FontSize);
      }
      if (HasFont) {
        output.WriteRawTag(130, 1);
        output.WriteString(Font);
      }
      if (HasValue) {
        output.WriteRawTag(138, 1);
        output.WriteString(Value);
      }
      if (HasTextWrapping) {
        output.WriteRawTag(176, 1);
        output.WriteBool(TextWrapping);
      }
      if (HasShadowBlur) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(ShadowBlur);
      }
      if (HasShadowOffsetX) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(ShadowOffsetX);
      }
      if (HasShadowOffsetY) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(ShadowOffsetY);
      }
      if (shadowColor_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ShadowColor);
      }
      if (HasHTextAlign) {
        output.WriteRawTag(218, 1);
        output.WriteString(HTextAlign);
      }
      if (HasVTextAlign) {
        output.WriteRawTag(226, 1);
        output.WriteString(VTextAlign);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(237, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(253, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(133, 2);
        output.WriteFloat(PaddingLeft);
      }
      if (HasPlaceholder) {
        output.WriteRawTag(138, 2);
        output.WriteString(Placeholder);
      }
      if (HasMargin) {
        output.WriteRawTag(149, 2);
        output.WriteFloat(Margin);
      }
      if (focusedBackground_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(FocusedBackground);
      }
      if (HasOnTextChanged) {
        output.WriteRawTag(162, 2);
        output.WriteString(OnTextChanged);
      }
      if (HasOnFocus) {
        output.WriteRawTag(170, 2);
        output.WriteString(OnFocus);
      }
      if (HasOnBlur) {
        output.WriteRawTag(178, 2);
        output.WriteString(OnBlur);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasOutlineWidth) {
        output.WriteRawTag(93);
        output.WriteFloat(OutlineWidth);
      }
      if (outlineColor_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(OutlineColor);
      }
      if (color_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Color);
      }
      if (HasFontSize) {
        output.WriteRawTag(117);
        output.WriteFloat(FontSize);
      }
      if (HasFont) {
        output.WriteRawTag(130, 1);
        output.WriteString(Font);
      }
      if (HasValue) {
        output.WriteRawTag(138, 1);
        output.WriteString(Value);
      }
      if (HasTextWrapping) {
        output.WriteRawTag(176, 1);
        output.WriteBool(TextWrapping);
      }
      if (HasShadowBlur) {
        output.WriteRawTag(189, 1);
        output.WriteFloat(ShadowBlur);
      }
      if (HasShadowOffsetX) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(ShadowOffsetX);
      }
      if (HasShadowOffsetY) {
        output.WriteRawTag(205, 1);
        output.WriteFloat(ShadowOffsetY);
      }
      if (shadowColor_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ShadowColor);
      }
      if (HasHTextAlign) {
        output.WriteRawTag(218, 1);
        output.WriteString(HTextAlign);
      }
      if (HasVTextAlign) {
        output.WriteRawTag(226, 1);
        output.WriteString(VTextAlign);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(237, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(245, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(253, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(133, 2);
        output.WriteFloat(PaddingLeft);
      }
      if (HasPlaceholder) {
        output.WriteRawTag(138, 2);
        output.WriteString(Placeholder);
      }
      if (HasMargin) {
        output.WriteRawTag(149, 2);
        output.WriteFloat(Margin);
      }
      if (focusedBackground_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(FocusedBackground);
      }
      if (HasOnTextChanged) {
        output.WriteRawTag(162, 2);
        output.WriteString(OnTextChanged);
      }
      if (HasOnFocus) {
        output.WriteRawTag(170, 2);
        output.WriteString(OnFocus);
      }
      if (HasOnBlur) {
        output.WriteRawTag(178, 2);
        output.WriteString(OnBlur);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasOpacity) {
        size += 1 + 4;
      }
      if (HasHAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HAlign);
      }
      if (HasVAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VAlign);
      }
      if (width_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Width);
      }
      if (height_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Height);
      }
      if (positionX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionX);
      }
      if (positionY_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionY);
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasOutlineWidth) {
        size += 1 + 4;
      }
      if (outlineColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutlineColor);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (HasFontSize) {
        size += 1 + 4;
      }
      if (HasFont) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Font);
      }
      if (HasValue) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (HasPlaceholder) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Placeholder);
      }
      if (HasMargin) {
        size += 2 + 4;
      }
      if (focusedBackground_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FocusedBackground);
      }
      if (HasTextWrapping) {
        size += 2 + 1;
      }
      if (HasShadowBlur) {
        size += 2 + 4;
      }
      if (HasShadowOffsetX) {
        size += 2 + 4;
      }
      if (HasShadowOffsetY) {
        size += 2 + 4;
      }
      if (shadowColor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShadowColor);
      }
      if (HasHTextAlign) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HTextAlign);
      }
      if (HasVTextAlign) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VTextAlign);
      }
      if (HasPaddingTop) {
        size += 2 + 4;
      }
      if (HasPaddingRight) {
        size += 2 + 4;
      }
      if (HasPaddingBottom) {
        size += 2 + 4;
      }
      if (HasPaddingLeft) {
        size += 2 + 4;
      }
      if (HasOnTextChanged) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OnTextChanged);
      }
      if (HasOnFocus) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OnFocus);
      }
      if (HasOnBlur) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OnBlur);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUiInputText other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasHAlign) {
        HAlign = other.HAlign;
      }
      if (other.HasVAlign) {
        VAlign = other.VAlign;
      }
      if (other.width_ != null) {
        if (width_ == null) {
          Width = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Width.MergeFrom(other.Width);
      }
      if (other.height_ != null) {
        if (height_ == null) {
          Height = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Height.MergeFrom(other.Height);
      }
      if (other.positionX_ != null) {
        if (positionX_ == null) {
          PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionX.MergeFrom(other.PositionX);
      }
      if (other.positionY_ != null) {
        if (positionY_ == null) {
          PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionY.MergeFrom(other.PositionY);
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasOutlineWidth) {
        OutlineWidth = other.OutlineWidth;
      }
      if (other.outlineColor_ != null) {
        if (outlineColor_ == null) {
          OutlineColor = new global::Decentraland.Common.Color4();
        }
        OutlineColor.MergeFrom(other.OutlineColor);
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Decentraland.Common.Color4();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.HasFontSize) {
        FontSize = other.FontSize;
      }
      if (other.HasFont) {
        Font = other.Font;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasPlaceholder) {
        Placeholder = other.Placeholder;
      }
      if (other.HasMargin) {
        Margin = other.Margin;
      }
      if (other.focusedBackground_ != null) {
        if (focusedBackground_ == null) {
          FocusedBackground = new global::Decentraland.Common.Color4();
        }
        FocusedBackground.MergeFrom(other.FocusedBackground);
      }
      if (other.HasTextWrapping) {
        TextWrapping = other.TextWrapping;
      }
      if (other.HasShadowBlur) {
        ShadowBlur = other.ShadowBlur;
      }
      if (other.HasShadowOffsetX) {
        ShadowOffsetX = other.ShadowOffsetX;
      }
      if (other.HasShadowOffsetY) {
        ShadowOffsetY = other.ShadowOffsetY;
      }
      if (other.shadowColor_ != null) {
        if (shadowColor_ == null) {
          ShadowColor = new global::Decentraland.Common.Color4();
        }
        ShadowColor.MergeFrom(other.ShadowColor);
      }
      if (other.HasHTextAlign) {
        HTextAlign = other.HTextAlign;
      }
      if (other.HasVTextAlign) {
        VTextAlign = other.VTextAlign;
      }
      if (other.HasPaddingTop) {
        PaddingTop = other.PaddingTop;
      }
      if (other.HasPaddingRight) {
        PaddingRight = other.PaddingRight;
      }
      if (other.HasPaddingBottom) {
        PaddingBottom = other.PaddingBottom;
      }
      if (other.HasPaddingLeft) {
        PaddingLeft = other.PaddingLeft;
      }
      if (other.HasOnTextChanged) {
        OnTextChanged = other.OnTextChanged;
      }
      if (other.HasOnFocus) {
        OnFocus = other.OnFocus;
      }
      if (other.HasOnBlur) {
        OnBlur = other.OnBlur;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            OutlineWidth = input.ReadFloat();
            break;
          }
          case 98: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
          case 106: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 117: {
            FontSize = input.ReadFloat();
            break;
          }
          case 130: {
            Font = input.ReadString();
            break;
          }
          case 138: {
            Value = input.ReadString();
            break;
          }
          case 176: {
            TextWrapping = input.ReadBool();
            break;
          }
          case 189: {
            ShadowBlur = input.ReadFloat();
            break;
          }
          case 197: {
            ShadowOffsetX = input.ReadFloat();
            break;
          }
          case 205: {
            ShadowOffsetY = input.ReadFloat();
            break;
          }
          case 210: {
            if (shadowColor_ == null) {
              ShadowColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(ShadowColor);
            break;
          }
          case 218: {
            HTextAlign = input.ReadString();
            break;
          }
          case 226: {
            VTextAlign = input.ReadString();
            break;
          }
          case 237: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 245: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 253: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 261: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 266: {
            Placeholder = input.ReadString();
            break;
          }
          case 277: {
            Margin = input.ReadFloat();
            break;
          }
          case 282: {
            if (focusedBackground_ == null) {
              FocusedBackground = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(FocusedBackground);
            break;
          }
          case 290: {
            OnTextChanged = input.ReadString();
            break;
          }
          case 298: {
            OnFocus = input.ReadString();
            break;
          }
          case 306: {
            OnBlur = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            OutlineWidth = input.ReadFloat();
            break;
          }
          case 98: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
          case 106: {
            if (color_ == null) {
              Color = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(Color);
            break;
          }
          case 117: {
            FontSize = input.ReadFloat();
            break;
          }
          case 130: {
            Font = input.ReadString();
            break;
          }
          case 138: {
            Value = input.ReadString();
            break;
          }
          case 176: {
            TextWrapping = input.ReadBool();
            break;
          }
          case 189: {
            ShadowBlur = input.ReadFloat();
            break;
          }
          case 197: {
            ShadowOffsetX = input.ReadFloat();
            break;
          }
          case 205: {
            ShadowOffsetY = input.ReadFloat();
            break;
          }
          case 210: {
            if (shadowColor_ == null) {
              ShadowColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(ShadowColor);
            break;
          }
          case 218: {
            HTextAlign = input.ReadString();
            break;
          }
          case 226: {
            VTextAlign = input.ReadString();
            break;
          }
          case 237: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 245: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 253: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 261: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 266: {
            Placeholder = input.ReadString();
            break;
          }
          case 277: {
            Margin = input.ReadFloat();
            break;
          }
          case 282: {
            if (focusedBackground_ == null) {
              FocusedBackground = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(FocusedBackground);
            break;
          }
          case 290: {
            OnTextChanged = input.ReadString();
            break;
          }
          case 298: {
            OnFocus = input.ReadString();
            break;
          }
          case 306: {
            OnBlur = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.UI_IMAGE_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentUiImage : pb::IMessage<ECS6ComponentUiImage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUiImage> _parser = new pb::MessageParser<ECS6ComponentUiImage>(() => new ECS6ComponentUiImage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUiImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiImage(ECS6ComponentUiImage other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      visible_ = other.visible_;
      opacity_ = other.opacity_;
      hAlign_ = other.hAlign_;
      vAlign_ = other.vAlign_;
      width_ = other.width_ != null ? other.width_.Clone() : null;
      height_ = other.height_ != null ? other.height_.Clone() : null;
      positionX_ = other.positionX_ != null ? other.positionX_.Clone() : null;
      positionY_ = other.positionY_ != null ? other.positionY_.Clone() : null;
      isPointerBlocker_ = other.isPointerBlocker_;
      sourceLeft_ = other.sourceLeft_;
      sourceTop_ = other.sourceTop_;
      sourceWidth_ = other.sourceWidth_;
      sourceHeight_ = other.sourceHeight_;
      source_ = other.source_;
      paddingTop_ = other.paddingTop_;
      paddingRight_ = other.paddingRight_;
      paddingBottom_ = other.paddingBottom_;
      paddingLeft_ = other.paddingLeft_;
      sizeInPixels_ = other.sizeInPixels_;
      onClick_ = other.onClick_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiImage Clone() {
      return new ECS6ComponentUiImage(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? ""; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Visible {
      get { if ((_hasBits0 & 1) != 0) { return visible_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        visible_ = value;
      }
    }
    /// <summary>Gets whether the "visible" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVisible {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "visible" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVisible() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "opacity" field.</summary>
    public const int OpacityFieldNumber = 3;
    private float opacity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Opacity {
      get { if ((_hasBits0 & 2) != 0) { return opacity_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        opacity_ = value;
      }
    }
    /// <summary>Gets whether the "opacity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpacity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "opacity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpacity() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "h_align" field.</summary>
    public const int HAlignFieldNumber = 4;
    private string hAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HAlign {
      get { return hAlign_ ?? ""; }
      set {
        hAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "h_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHAlign {
      get { return hAlign_ != null; }
    }
    /// <summary>Clears the value of the "h_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHAlign() {
      hAlign_ = null;
    }

    /// <summary>Field number for the "v_align" field.</summary>
    public const int VAlignFieldNumber = 5;
    private string vAlign_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VAlign {
      get { return vAlign_ ?? ""; }
      set {
        vAlign_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "v_align" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVAlign {
      get { return vAlign_ != null; }
    }
    /// <summary>Clears the value of the "v_align" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVAlign() {
      vAlign_ = null;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 6;
    private global::Decentraland.Sdk.Ecs6.UiValue width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 7;
    private global::Decentraland.Sdk.Ecs6.UiValue height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 8;
    private global::Decentraland.Sdk.Ecs6.UiValue positionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_y" field.</summary>
    public const int PositionYFieldNumber = 9;
    private global::Decentraland.Sdk.Ecs6.UiValue positionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Sdk.Ecs6.UiValue PositionY {
      get { return positionY_; }
      set {
        positionY_ = value;
      }
    }

    /// <summary>Field number for the "is_pointer_blocker" field.</summary>
    public const int IsPointerBlockerFieldNumber = 10;
    private bool isPointerBlocker_;
    /// <summary>
    /// UiShape
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPointerBlocker {
      get { if ((_hasBits0 & 4) != 0) { return isPointerBlocker_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        isPointerBlocker_ = value;
      }
    }
    /// <summary>Gets whether the "is_pointer_blocker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsPointerBlocker {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_pointer_blocker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsPointerBlocker() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "source_left" field.</summary>
    public const int SourceLeftFieldNumber = 11;
    private float sourceLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SourceLeft {
      get { if ((_hasBits0 & 8) != 0) { return sourceLeft_; } else { return 0F; } }
      set {
        _hasBits0 |= 8;
        sourceLeft_ = value;
      }
    }
    /// <summary>Gets whether the "source_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceLeft {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "source_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceLeft() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "source_top" field.</summary>
    public const int SourceTopFieldNumber = 12;
    private float sourceTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SourceTop {
      get { if ((_hasBits0 & 16) != 0) { return sourceTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        sourceTop_ = value;
      }
    }
    /// <summary>Gets whether the "source_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceTop {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "source_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceTop() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "source_width" field.</summary>
    public const int SourceWidthFieldNumber = 13;
    private float sourceWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SourceWidth {
      get { if ((_hasBits0 & 32) != 0) { return sourceWidth_; } else { return 0F; } }
      set {
        _hasBits0 |= 32;
        sourceWidth_ = value;
      }
    }
    /// <summary>Gets whether the "source_width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceWidth {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "source_width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceWidth() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "source_height" field.</summary>
    public const int SourceHeightFieldNumber = 14;
    private float sourceHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SourceHeight {
      get { if ((_hasBits0 & 64) != 0) { return sourceHeight_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        sourceHeight_ = value;
      }
    }
    /// <summary>Gets whether the "source_height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSourceHeight {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "source_height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSourceHeight() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 15;
    private string source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Source {
      get { return source_ ?? ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSource {
      get { return source_ != null; }
    }
    /// <summary>Clears the value of the "source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      source_ = null;
    }

    /// <summary>Field number for the "padding_top" field.</summary>
    public const int PaddingTopFieldNumber = 16;
    private float paddingTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingTop {
      get { if ((_hasBits0 & 128) != 0) { return paddingTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 128;
        paddingTop_ = value;
      }
    }
    /// <summary>Gets whether the "padding_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingTop {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "padding_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingTop() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "padding_right" field.</summary>
    public const int PaddingRightFieldNumber = 17;
    private float paddingRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingRight {
      get { if ((_hasBits0 & 256) != 0) { return paddingRight_; } else { return 0F; } }
      set {
        _hasBits0 |= 256;
        paddingRight_ = value;
      }
    }
    /// <summary>Gets whether the "padding_right" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingRight {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "padding_right" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingRight() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "padding_bottom" field.</summary>
    public const int PaddingBottomFieldNumber = 18;
    private float paddingBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingBottom {
      get { if ((_hasBits0 & 512) != 0) { return paddingBottom_; } else { return 0F; } }
      set {
        _hasBits0 |= 512;
        paddingBottom_ = value;
      }
    }
    /// <summary>Gets whether the "padding_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingBottom {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "padding_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingBottom() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "padding_left" field.</summary>
    public const int PaddingLeftFieldNumber = 19;
    private float paddingLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingLeft {
      get { if ((_hasBits0 & 1024) != 0) { return paddingLeft_; } else { return 0F; } }
      set {
        _hasBits0 |= 1024;
        paddingLeft_ = value;
      }
    }
    /// <summary>Gets whether the "padding_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingLeft {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "padding_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingLeft() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "size_in_pixels" field.</summary>
    public const int SizeInPixelsFieldNumber = 20;
    private bool sizeInPixels_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SizeInPixels {
      get { if ((_hasBits0 & 2048) != 0) { return sizeInPixels_; } else { return false; } }
      set {
        _hasBits0 |= 2048;
        sizeInPixels_ = value;
      }
    }
    /// <summary>Gets whether the "size_in_pixels" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSizeInPixels {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "size_in_pixels" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSizeInPixels() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "on_click" field.</summary>
    public const int OnClickFieldNumber = 21;
    private string onClick_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OnClick {
      get { return onClick_ ?? ""; }
      set {
        onClick_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "on_click" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnClick {
      get { return onClick_ != null; }
    }
    /// <summary>Clears the value of the "on_click" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnClick() {
      onClick_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUiImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUiImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Visible != other.Visible) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Opacity, other.Opacity)) return false;
      if (HAlign != other.HAlign) return false;
      if (VAlign != other.VAlign) return false;
      if (!object.Equals(Width, other.Width)) return false;
      if (!object.Equals(Height, other.Height)) return false;
      if (!object.Equals(PositionX, other.PositionX)) return false;
      if (!object.Equals(PositionY, other.PositionY)) return false;
      if (IsPointerBlocker != other.IsPointerBlocker) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SourceLeft, other.SourceLeft)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SourceTop, other.SourceTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SourceWidth, other.SourceWidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SourceHeight, other.SourceHeight)) return false;
      if (Source != other.Source) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingTop, other.PaddingTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingRight, other.PaddingRight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingBottom, other.PaddingBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingLeft, other.PaddingLeft)) return false;
      if (SizeInPixels != other.SizeInPixels) return false;
      if (OnClick != other.OnClick) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasVisible) hash ^= Visible.GetHashCode();
      if (HasOpacity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Opacity);
      if (HasHAlign) hash ^= HAlign.GetHashCode();
      if (HasVAlign) hash ^= VAlign.GetHashCode();
      if (width_ != null) hash ^= Width.GetHashCode();
      if (height_ != null) hash ^= Height.GetHashCode();
      if (positionX_ != null) hash ^= PositionX.GetHashCode();
      if (positionY_ != null) hash ^= PositionY.GetHashCode();
      if (HasIsPointerBlocker) hash ^= IsPointerBlocker.GetHashCode();
      if (HasSourceLeft) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SourceLeft);
      if (HasSourceTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SourceTop);
      if (HasSourceWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SourceWidth);
      if (HasSourceHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SourceHeight);
      if (HasSource) hash ^= Source.GetHashCode();
      if (HasPaddingTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingTop);
      if (HasPaddingRight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingRight);
      if (HasPaddingBottom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingBottom);
      if (HasPaddingLeft) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingLeft);
      if (HasSizeInPixels) hash ^= SizeInPixels.GetHashCode();
      if (HasOnClick) hash ^= OnClick.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasSourceLeft) {
        output.WriteRawTag(93);
        output.WriteFloat(SourceLeft);
      }
      if (HasSourceTop) {
        output.WriteRawTag(101);
        output.WriteFloat(SourceTop);
      }
      if (HasSourceWidth) {
        output.WriteRawTag(109);
        output.WriteFloat(SourceWidth);
      }
      if (HasSourceHeight) {
        output.WriteRawTag(117);
        output.WriteFloat(SourceHeight);
      }
      if (HasSource) {
        output.WriteRawTag(122);
        output.WriteString(Source);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(PaddingLeft);
      }
      if (HasSizeInPixels) {
        output.WriteRawTag(160, 1);
        output.WriteBool(SizeInPixels);
      }
      if (HasOnClick) {
        output.WriteRawTag(170, 1);
        output.WriteString(OnClick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasVisible) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (HasOpacity) {
        output.WriteRawTag(29);
        output.WriteFloat(Opacity);
      }
      if (HasHAlign) {
        output.WriteRawTag(34);
        output.WriteString(HAlign);
      }
      if (HasVAlign) {
        output.WriteRawTag(42);
        output.WriteString(VAlign);
      }
      if (width_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Width);
      }
      if (height_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Height);
      }
      if (positionX_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PositionX);
      }
      if (positionY_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PositionY);
      }
      if (HasIsPointerBlocker) {
        output.WriteRawTag(80);
        output.WriteBool(IsPointerBlocker);
      }
      if (HasSourceLeft) {
        output.WriteRawTag(93);
        output.WriteFloat(SourceLeft);
      }
      if (HasSourceTop) {
        output.WriteRawTag(101);
        output.WriteFloat(SourceTop);
      }
      if (HasSourceWidth) {
        output.WriteRawTag(109);
        output.WriteFloat(SourceWidth);
      }
      if (HasSourceHeight) {
        output.WriteRawTag(117);
        output.WriteFloat(SourceHeight);
      }
      if (HasSource) {
        output.WriteRawTag(122);
        output.WriteString(Source);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(PaddingLeft);
      }
      if (HasSizeInPixels) {
        output.WriteRawTag(160, 1);
        output.WriteBool(SizeInPixels);
      }
      if (HasOnClick) {
        output.WriteRawTag(170, 1);
        output.WriteString(OnClick);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasVisible) {
        size += 1 + 1;
      }
      if (HasOpacity) {
        size += 1 + 4;
      }
      if (HasHAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HAlign);
      }
      if (HasVAlign) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VAlign);
      }
      if (width_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Width);
      }
      if (height_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Height);
      }
      if (positionX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionX);
      }
      if (positionY_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionY);
      }
      if (HasIsPointerBlocker) {
        size += 1 + 1;
      }
      if (HasSourceLeft) {
        size += 1 + 4;
      }
      if (HasSourceTop) {
        size += 1 + 4;
      }
      if (HasSourceWidth) {
        size += 1 + 4;
      }
      if (HasSourceHeight) {
        size += 1 + 4;
      }
      if (HasSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (HasPaddingTop) {
        size += 2 + 4;
      }
      if (HasPaddingRight) {
        size += 2 + 4;
      }
      if (HasPaddingBottom) {
        size += 2 + 4;
      }
      if (HasPaddingLeft) {
        size += 2 + 4;
      }
      if (HasSizeInPixels) {
        size += 2 + 1;
      }
      if (HasOnClick) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OnClick);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUiImage other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasVisible) {
        Visible = other.Visible;
      }
      if (other.HasOpacity) {
        Opacity = other.Opacity;
      }
      if (other.HasHAlign) {
        HAlign = other.HAlign;
      }
      if (other.HasVAlign) {
        VAlign = other.VAlign;
      }
      if (other.width_ != null) {
        if (width_ == null) {
          Width = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Width.MergeFrom(other.Width);
      }
      if (other.height_ != null) {
        if (height_ == null) {
          Height = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        Height.MergeFrom(other.Height);
      }
      if (other.positionX_ != null) {
        if (positionX_ == null) {
          PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionX.MergeFrom(other.PositionX);
      }
      if (other.positionY_ != null) {
        if (positionY_ == null) {
          PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
        }
        PositionY.MergeFrom(other.PositionY);
      }
      if (other.HasIsPointerBlocker) {
        IsPointerBlocker = other.IsPointerBlocker;
      }
      if (other.HasSourceLeft) {
        SourceLeft = other.SourceLeft;
      }
      if (other.HasSourceTop) {
        SourceTop = other.SourceTop;
      }
      if (other.HasSourceWidth) {
        SourceWidth = other.SourceWidth;
      }
      if (other.HasSourceHeight) {
        SourceHeight = other.SourceHeight;
      }
      if (other.HasSource) {
        Source = other.Source;
      }
      if (other.HasPaddingTop) {
        PaddingTop = other.PaddingTop;
      }
      if (other.HasPaddingRight) {
        PaddingRight = other.PaddingRight;
      }
      if (other.HasPaddingBottom) {
        PaddingBottom = other.PaddingBottom;
      }
      if (other.HasPaddingLeft) {
        PaddingLeft = other.PaddingLeft;
      }
      if (other.HasSizeInPixels) {
        SizeInPixels = other.SizeInPixels;
      }
      if (other.HasOnClick) {
        OnClick = other.OnClick;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            SourceLeft = input.ReadFloat();
            break;
          }
          case 101: {
            SourceTop = input.ReadFloat();
            break;
          }
          case 109: {
            SourceWidth = input.ReadFloat();
            break;
          }
          case 117: {
            SourceHeight = input.ReadFloat();
            break;
          }
          case 122: {
            Source = input.ReadString();
            break;
          }
          case 133: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 141: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 149: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 157: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 160: {
            SizeInPixels = input.ReadBool();
            break;
          }
          case 170: {
            OnClick = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 29: {
            Opacity = input.ReadFloat();
            break;
          }
          case 34: {
            HAlign = input.ReadString();
            break;
          }
          case 42: {
            VAlign = input.ReadString();
            break;
          }
          case 50: {
            if (width_ == null) {
              Width = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Width);
            break;
          }
          case 58: {
            if (height_ == null) {
              Height = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(Height);
            break;
          }
          case 66: {
            if (positionX_ == null) {
              PositionX = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionX);
            break;
          }
          case 74: {
            if (positionY_ == null) {
              PositionY = new global::Decentraland.Sdk.Ecs6.UiValue();
            }
            input.ReadMessage(PositionY);
            break;
          }
          case 80: {
            IsPointerBlocker = input.ReadBool();
            break;
          }
          case 93: {
            SourceLeft = input.ReadFloat();
            break;
          }
          case 101: {
            SourceTop = input.ReadFloat();
            break;
          }
          case 109: {
            SourceWidth = input.ReadFloat();
            break;
          }
          case 117: {
            SourceHeight = input.ReadFloat();
            break;
          }
          case 122: {
            Source = input.ReadString();
            break;
          }
          case 133: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 141: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 149: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 157: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 160: {
            SizeInPixels = input.ReadBool();
            break;
          }
          case 170: {
            OnClick = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CLASS_ID.UI_SLIDER_SHAPE
  /// </summary>
  public sealed partial class ECS6ComponentUiScrollRect : pb::IMessage<ECS6ComponentUiScrollRect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECS6ComponentUiScrollRect> _parser = new pb::MessageParser<ECS6ComponentUiScrollRect>(() => new ECS6ComponentUiScrollRect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECS6ComponentUiScrollRect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Decentraland.Sdk.Ecs6.ComponentsEcs6Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiScrollRect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiScrollRect(ECS6ComponentUiScrollRect other) : this() {
      _hasBits0 = other._hasBits0;
      valueX_ = other.valueX_;
      valueY_ = other.valueY_;
      backgroundColor_ = other.backgroundColor_ != null ? other.backgroundColor_.Clone() : null;
      isHorizontal_ = other.isHorizontal_;
      isVertical_ = other.isVertical_;
      paddingTop_ = other.paddingTop_;
      paddingRight_ = other.paddingRight_;
      paddingBottom_ = other.paddingBottom_;
      paddingLeft_ = other.paddingLeft_;
      onChanged_ = other.onChanged_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECS6ComponentUiScrollRect Clone() {
      return new ECS6ComponentUiScrollRect(this);
    }

    /// <summary>Field number for the "value_x" field.</summary>
    public const int ValueXFieldNumber = 1;
    private float valueX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ValueX {
      get { if ((_hasBits0 & 1) != 0) { return valueX_; } else { return 0F; } }
      set {
        _hasBits0 |= 1;
        valueX_ = value;
      }
    }
    /// <summary>Gets whether the "value_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValueX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "value_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValueX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "value_y" field.</summary>
    public const int ValueYFieldNumber = 2;
    private float valueY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ValueY {
      get { if ((_hasBits0 & 2) != 0) { return valueY_; } else { return 0F; } }
      set {
        _hasBits0 |= 2;
        valueY_ = value;
      }
    }
    /// <summary>Gets whether the "value_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValueY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "value_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValueY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "background_color" field.</summary>
    public const int BackgroundColorFieldNumber = 3;
    private global::Decentraland.Common.Color4 backgroundColor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Decentraland.Common.Color4 BackgroundColor {
      get { return backgroundColor_; }
      set {
        backgroundColor_ = value;
      }
    }

    /// <summary>Field number for the "is_horizontal" field.</summary>
    public const int IsHorizontalFieldNumber = 4;
    private bool isHorizontal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHorizontal {
      get { if ((_hasBits0 & 4) != 0) { return isHorizontal_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        isHorizontal_ = value;
      }
    }
    /// <summary>Gets whether the "is_horizontal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsHorizontal {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_horizontal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsHorizontal() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_vertical" field.</summary>
    public const int IsVerticalFieldNumber = 5;
    private bool isVertical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsVertical {
      get { if ((_hasBits0 & 8) != 0) { return isVertical_; } else { return false; } }
      set {
        _hasBits0 |= 8;
        isVertical_ = value;
      }
    }
    /// <summary>Gets whether the "is_vertical" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsVertical {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_vertical" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsVertical() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "padding_top" field.</summary>
    public const int PaddingTopFieldNumber = 6;
    private float paddingTop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingTop {
      get { if ((_hasBits0 & 16) != 0) { return paddingTop_; } else { return 0F; } }
      set {
        _hasBits0 |= 16;
        paddingTop_ = value;
      }
    }
    /// <summary>Gets whether the "padding_top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingTop {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "padding_top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingTop() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "padding_right" field.</summary>
    public const int PaddingRightFieldNumber = 7;
    private float paddingRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingRight {
      get { if ((_hasBits0 & 32) != 0) { return paddingRight_; } else { return 0F; } }
      set {
        _hasBits0 |= 32;
        paddingRight_ = value;
      }
    }
    /// <summary>Gets whether the "padding_right" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingRight {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "padding_right" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingRight() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "padding_bottom" field.</summary>
    public const int PaddingBottomFieldNumber = 8;
    private float paddingBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingBottom {
      get { if ((_hasBits0 & 64) != 0) { return paddingBottom_; } else { return 0F; } }
      set {
        _hasBits0 |= 64;
        paddingBottom_ = value;
      }
    }
    /// <summary>Gets whether the "padding_bottom" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingBottom {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "padding_bottom" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingBottom() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "padding_left" field.</summary>
    public const int PaddingLeftFieldNumber = 9;
    private float paddingLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PaddingLeft {
      get { if ((_hasBits0 & 128) != 0) { return paddingLeft_; } else { return 0F; } }
      set {
        _hasBits0 |= 128;
        paddingLeft_ = value;
      }
    }
    /// <summary>Gets whether the "padding_left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPaddingLeft {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "padding_left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPaddingLeft() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "on_changed" field.</summary>
    public const int OnChangedFieldNumber = 10;
    private string onChanged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OnChanged {
      get { return onChanged_ ?? ""; }
      set {
        onChanged_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "on_changed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnChanged {
      get { return onChanged_ != null; }
    }
    /// <summary>Clears the value of the "on_changed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnChanged() {
      onChanged_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECS6ComponentUiScrollRect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECS6ComponentUiScrollRect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ValueX, other.ValueX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ValueY, other.ValueY)) return false;
      if (!object.Equals(BackgroundColor, other.BackgroundColor)) return false;
      if (IsHorizontal != other.IsHorizontal) return false;
      if (IsVertical != other.IsVertical) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingTop, other.PaddingTop)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingRight, other.PaddingRight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingBottom, other.PaddingBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PaddingLeft, other.PaddingLeft)) return false;
      if (OnChanged != other.OnChanged) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasValueX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ValueX);
      if (HasValueY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ValueY);
      if (backgroundColor_ != null) hash ^= BackgroundColor.GetHashCode();
      if (HasIsHorizontal) hash ^= IsHorizontal.GetHashCode();
      if (HasIsVertical) hash ^= IsVertical.GetHashCode();
      if (HasPaddingTop) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingTop);
      if (HasPaddingRight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingRight);
      if (HasPaddingBottom) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingBottom);
      if (HasPaddingLeft) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PaddingLeft);
      if (HasOnChanged) hash ^= OnChanged.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasValueX) {
        output.WriteRawTag(13);
        output.WriteFloat(ValueX);
      }
      if (HasValueY) {
        output.WriteRawTag(21);
        output.WriteFloat(ValueY);
      }
      if (backgroundColor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BackgroundColor);
      }
      if (HasIsHorizontal) {
        output.WriteRawTag(32);
        output.WriteBool(IsHorizontal);
      }
      if (HasIsVertical) {
        output.WriteRawTag(40);
        output.WriteBool(IsVertical);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(53);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(61);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(69);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(77);
        output.WriteFloat(PaddingLeft);
      }
      if (HasOnChanged) {
        output.WriteRawTag(82);
        output.WriteString(OnChanged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasValueX) {
        output.WriteRawTag(13);
        output.WriteFloat(ValueX);
      }
      if (HasValueY) {
        output.WriteRawTag(21);
        output.WriteFloat(ValueY);
      }
      if (backgroundColor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BackgroundColor);
      }
      if (HasIsHorizontal) {
        output.WriteRawTag(32);
        output.WriteBool(IsHorizontal);
      }
      if (HasIsVertical) {
        output.WriteRawTag(40);
        output.WriteBool(IsVertical);
      }
      if (HasPaddingTop) {
        output.WriteRawTag(53);
        output.WriteFloat(PaddingTop);
      }
      if (HasPaddingRight) {
        output.WriteRawTag(61);
        output.WriteFloat(PaddingRight);
      }
      if (HasPaddingBottom) {
        output.WriteRawTag(69);
        output.WriteFloat(PaddingBottom);
      }
      if (HasPaddingLeft) {
        output.WriteRawTag(77);
        output.WriteFloat(PaddingLeft);
      }
      if (HasOnChanged) {
        output.WriteRawTag(82);
        output.WriteString(OnChanged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasValueX) {
        size += 1 + 4;
      }
      if (HasValueY) {
        size += 1 + 4;
      }
      if (backgroundColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackgroundColor);
      }
      if (HasIsHorizontal) {
        size += 1 + 1;
      }
      if (HasIsVertical) {
        size += 1 + 1;
      }
      if (HasPaddingTop) {
        size += 1 + 4;
      }
      if (HasPaddingRight) {
        size += 1 + 4;
      }
      if (HasPaddingBottom) {
        size += 1 + 4;
      }
      if (HasPaddingLeft) {
        size += 1 + 4;
      }
      if (HasOnChanged) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OnChanged);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECS6ComponentUiScrollRect other) {
      if (other == null) {
        return;
      }
      if (other.HasValueX) {
        ValueX = other.ValueX;
      }
      if (other.HasValueY) {
        ValueY = other.ValueY;
      }
      if (other.backgroundColor_ != null) {
        if (backgroundColor_ == null) {
          BackgroundColor = new global::Decentraland.Common.Color4();
        }
        BackgroundColor.MergeFrom(other.BackgroundColor);
      }
      if (other.HasIsHorizontal) {
        IsHorizontal = other.IsHorizontal;
      }
      if (other.HasIsVertical) {
        IsVertical = other.IsVertical;
      }
      if (other.HasPaddingTop) {
        PaddingTop = other.PaddingTop;
      }
      if (other.HasPaddingRight) {
        PaddingRight = other.PaddingRight;
      }
      if (other.HasPaddingBottom) {
        PaddingBottom = other.PaddingBottom;
      }
      if (other.HasPaddingLeft) {
        PaddingLeft = other.PaddingLeft;
      }
      if (other.HasOnChanged) {
        OnChanged = other.OnChanged;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            ValueX = input.ReadFloat();
            break;
          }
          case 21: {
            ValueY = input.ReadFloat();
            break;
          }
          case 26: {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BackgroundColor);
            break;
          }
          case 32: {
            IsHorizontal = input.ReadBool();
            break;
          }
          case 40: {
            IsVertical = input.ReadBool();
            break;
          }
          case 53: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 61: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 69: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 77: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 82: {
            OnChanged = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            ValueX = input.ReadFloat();
            break;
          }
          case 21: {
            ValueY = input.ReadFloat();
            break;
          }
          case 26: {
            if (backgroundColor_ == null) {
              BackgroundColor = new global::Decentraland.Common.Color4();
            }
            input.ReadMessage(BackgroundColor);
            break;
          }
          case 32: {
            IsHorizontal = input.ReadBool();
            break;
          }
          case 40: {
            IsVertical = input.ReadBool();
            break;
          }
          case 53: {
            PaddingTop = input.ReadFloat();
            break;
          }
          case 61: {
            PaddingRight = input.ReadFloat();
            break;
          }
          case 69: {
            PaddingBottom = input.ReadFloat();
            break;
          }
          case 77: {
            PaddingLeft = input.ReadFloat();
            break;
          }
          case 82: {
            OnChanged = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
