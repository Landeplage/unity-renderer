
// AUTOGENERATED, DO NOT EDIT
// Type definitions for server implementations of ports.
// package: decentraland.renderer.renderer_services
// file: decentraland/renderer/renderer_services/friend_request_renderer.proto
using Cysharp.Threading.Tasks;
using rpc_csharp;

namespace Decentraland.Renderer.RendererServices {
public class ClientFriendRequestRendererService
{
  private readonly RpcClientModule module;

  public ClientFriendRequestRendererService(RpcClientModule module)
  {
      this.module = module;
  }

  public UniTask<RendererApproveFriendRequestReply> ApproveFriendRequest(RendererApproveFriendRequestPayload request)
  {
      return module.CallUnaryProcedure<RendererApproveFriendRequestReply>("ApproveFriendRequest", request);
  }

  public UniTask<RendererRejectFriendRequestReply> RejectFriendRequest(RendererRejectFriendRequestPayload request)
  {
      return module.CallUnaryProcedure<RendererRejectFriendRequestReply>("RejectFriendRequest", request);
  }

  public UniTask<RendererCancelFriendRequestReply> CancelFriendRequest(RendererCancelFriendRequestPayload request)
  {
      return module.CallUnaryProcedure<RendererCancelFriendRequestReply>("CancelFriendRequest", request);
  }

  public UniTask<RendererReceiveFriendRequestReply> ReceiveFriendRequest(RendererReceiveFriendRequestPayload request)
  {
      return module.CallUnaryProcedure<RendererReceiveFriendRequestReply>("ReceiveFriendRequest", request);
  }
}
}
